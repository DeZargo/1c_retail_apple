
Процедура ПечатьСписокНоменклатуры(ТабличныйДокумент,Объект) Экспорт
	
	//ValMa - 22-08-2019 - для разных документов запрос будет разным
	Если ТипЗнч(Объект) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда 
		ТЗ_Партия = "";
		ТЗ_ПартияГруппировка = "";
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		ТЗ_Партия = "
		|	тз.Партия КАК Партия,";
		ТЗ_ПартияГруппировка = "
		|	тз.Партия,";
	КонецЕсли; 
	//--
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_СписокТоваров");
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВозвратТоваровПоставщику_ПФ_MXL_СписокНоменклатуры_НДС";
	
	//ValMa - 13-06-2019 - Альбомное расположение страницы
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.АвтоМасштаб = Истина; // Масштаб - по ширине страницы
	//--
	
	заголовок=Макет.получитьОбласть("заголовок");
	заголовок.параметры.Документ=Объект;
	ТабличныйДокумент.Вывести(заголовок);
	
	Шапка=Макет.получитьобласть("Шапка");
	Шапка.параметры.ИмяРеквизита="Поставщик";
	Шапка.параметры.Реквизит=?(ТипЗнч(Объект)=Тип("ДокументСсылка.ПоступлениеТоваров"),Объект.Контрагент,Объект.Организация);
	ТабличныйДокумент.Вывести(Шапка);
	
	Шапка.параметры.ИмяРеквизита="Покупатель";
	Шапка.параметры.Реквизит=?(ТипЗнч(Объект)=Тип("ДокументСсылка.ПоступлениеТоваров"),Объект.Организация,Объект.Контрагент);
	ТабличныйДокумент.Вывести(Шапка);
	
	Шапка.параметры.ИмяРеквизита="Магазин";
	Шапка.параметры.Реквизит=объект.магазин;
	ТабличныйДокумент.Вывести(Шапка);
	
	Шапка.параметры.ИмяРеквизита="Склад";
	Шапка.параметры.Реквизит=объект.склад;
	ТабличныйДокумент.Вывести(Шапка);
	
	//ШапкаТаблицы=Макет.получитьобласть("ШапкаТаблицы");
	//ValMa
	ШапкаТаблицы     = Макет.получитьобласть("ШапкаТаблицы|Основная");
	ШапкаТаблицыПрав = Макет.получитьобласть("ШапкаТаблицы|ПервДокСФ");
	ТабличныйДокумент.Вывести(ШапкаТаблицы);
	Если ТипЗнч(Объект) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		ТабличныйДокумент.Присоединить(ШапкаТаблицыПрав);//присоединяет рядом
	КонецЕсли;
	//---
	
	//Строка=Макет.получитьОбласть("СтрокаТаблицы");
	//ValMa
	Строка     = Макет.получитьобласть("СтрокаТаблицы|Основная");
	СтрокаПрав = Макет.получитьобласть("СтрокаТаблицы|ПервДокСФ");
	//---
	
	Объект1=Объект.получитьОбъект();
	Запрос=Новый запрос;
	запрос.УстановитьПараметр("тз",Объект1.Товары.Выгрузить());
	Запрос.УстановитьПараметр("ЦенаВключаетНДС", Объект1.ЦенаВключаетНДС); //ValMa 
	Запрос.Текст="ВЫБРАТЬ
	|	тз.Номенклатура КАК Номенклатура,
	|	тз.КоличествоУпаковок КАК Количество,
	|	тз.цена КАК цена,
	|	тз.сумма КАК сумма,"+
	//ValMa - 13-06-2019
	ТЗ_Партия+"
	|	тз.СтавкаНДС КАК СтавкаНДС,
	|	тз.СуммаНДС КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА &ЦенаВключаетНДС
	|			ТОГДА тз.Сумма
	|		ИНАЧЕ тз.Сумма + тз.СуммаНДС
	|	КОНЕЦ КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА &ЦенаВключаетНДС
	|			ТОГДА тз.Сумма - тз.СуммаНДС
	|		ИНАЧЕ тз.Сумма
	|	КОНЕЦ КАК СуммаБезНДС,
	//--
	|	тз.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ тз
	|ИЗ
	|	&тз КАК тз
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	тз.Номенклатура КАК Номенклатура,
	|	тз.Количество КАК Количество,
	|	тз.цена КАК цена,
	|	тз.сумма КАК сумма,
	|	МАКСИМУМ(Штрихкоды.Штрихкод) КАК Штрихкод,"+
	//ValMa - 13-06-2019
	ТЗ_Партия+"
	|	тз.СтавкаНДС КАК СтавкаНДС,
	|	тз.СуммаНДС КАК СуммаНДС,
	|	тз.СуммаСНДС КАК СуммаСНДС,
	|	тз.СуммаБезНДС КАК СуммаБезНДС,
	//--
	|	тз.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	тз КАК тз
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО тз.Номенклатура = Штрихкоды.Владелец
	|
	|СГРУППИРОВАТЬ ПО
	|	тз.Номенклатура,
	|	тз.цена,
	|	тз.Количество,
	|	тз.сумма,"+
	//ValMa - 13-06-2019
	ТЗ_ПартияГруппировка+"
	|	тз.СтавкаНДС,
	|	тз.СуммаНДС,
	|	тз.СуммаСНДС,
	|	тз.СуммаБезНДС,
	//--				 
	|	тз.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	тз.НомерСтроки";
	
	выборка=Запрос.Выполнить().Выбрать();
	
	НомерСтроки=1;
	КолвоВсего=0;
	СуммаВСего=0;
	ВнешняяКомпонента=ПодключитьВнешнююКомпонентуПечатиШтрихкода();
	
	ПодробноПоНДС = Новый Соответствие; //ValMa
	
	Пока Выборка.Следующий() Цикл
		
		строка.параметры.НомерСтроки=НомерСтроки;
		строка.параметры.Товар=выборка.номенклатура;
		строка.параметры.количество=выборка.количество;
		Строка.Параметры.ПредставлениеБазовойЕдиницыИзмерения = выборка.номенклатура.ЕдиницаИзмерения.Наименование; //ValMa - 13-06-2019
		строка.параметры.цена=выборка.цена;
		строка.параметры.сумма=выборка.сумма;
		
		//ValMa - 23-07-2019 - не всегда корректно отрабатывает внешняя компонента после обновления, тогда комментируем строку 
		строка.Рисунки.Штрихкод.Картинка = ПолучитьКартинкуШтрихкода(ВнешняяКомпонента, выборка.Штрихкод, строка.рисунки.штрихкод.высота, строка.рисунки.штрихкод.ширина);
		
		Строка.Параметры.СтавкаНДС = Выборка.СтавкаНДС;
				
		//Создаем массив для проверки вывода строки на страницу.
		МассивВыводимыхОбластей = Новый Массив; 
		МассивВыводимыхОбластей.Добавить(Строка);	
		Если НЕ ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда //строка не поместилась на страницу
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабличныйДокумент.Вывести(ШапкаТаблицы);
			Если ТипЗнч(Объект) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
				ТабличныйДокумент.Присоединить(ШапкаТаблицыПрав);//присоединяет рядом
			КонецЕсли;
		КонецЕсли;
		//--
		
		ТабличныйДокумент.Вывести(Строка);
		
		Если ТипЗнч(Объект) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
			Если ЗначениеЗаполнено(Выборка.Партия.НомерВходящегоДокумента) Тогда
				СтрокаПрав.Параметры.ПервичныйДокумент = "№ " + Выборка.Партия.НомерВходящегоДокумента + 
				" от " + Формат(Выборка.Партия.ДатаВходящегоДокумента, "ДФ=dd.MM.yyyy")+" г."; 
				ПервичСФ = "№ " + Выборка.Партия.НомерСчетаФактуры +
				" от " + Формат(Выборка.Партия.ДатаСчетаФактуры, "ДФ=dd.MM.yyyy")+" г.";
				СтрокаПрав.Параметры.ПервичныйСФ = ПервичСФ;		
			КонецЕсли;
			ТабличныйДокумент.Присоединить(СтрокаПрав);//присоединяет рядом
		КонецЕсли;		
		
		//ValMa - 13-06-2019	
		Если ТипЗнч(Объект) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
			Если ЗначениеЗаполнено(Выборка.Партия.НомерВходящегоДокумента) Тогда
				
				//Пытаемся получить значение соответствия по ключу (по первичному СФ)
				ЗначенияПоНДС = ПодробноПоНДС.Получить(ПервичСФ); 
				Если ЗначенияПоНДС = Неопределено Тогда //еще не создано
					СтруктураРесурсовДляНДС = СтруктураРесурсовДляНДС();
					
					Если Выборка.СтавкаНДС = Перечисления.СтавкиНДС.НДС10 Тогда		
						СтруктураРесурсовДляНДС.СуммаБезНДС10 = Выборка.СуммаБезНДС;	
						СтруктураРесурсовДляНДС.СуммаНДС10    = Выборка.СуммаНДС;
						СтруктураРесурсовДляНДС.СуммаСНДС10   = Выборка.СуммаСНДС;
						
					ИначеЕсли Выборка.СтавкаНДС = Перечисления.СтавкиНДС.НДС20 Тогда					
						СтруктураРесурсовДляНДС.СуммаБезНДС20 = Выборка.СуммаБезНДС;	
						СтруктураРесурсовДляНДС.СуммаНДС20    = Выборка.СуммаНДС;
						СтруктураРесурсовДляНДС.СуммаСНДС20   = Выборка.СуммаСНДС;	
					КонецЕсли;
					
					СтруктураРесурсовДляНДС.СуммаБезНДС_СФ = Выборка.СуммаБезНДС;
					СтруктураРесурсовДляНДС.СуммаНДС_СФ    = Выборка.СуммаНДС;
					СтруктураРесурсовДляНДС.СуммаСНДС_СФ   = Выборка.СуммаСНДС;
					
					//Создаем соответсвие: пара ключ (произвольного типа) - значение (произвольного типа)
					ПодробноПоНДС.Вставить(ПервичСФ, СтруктураРесурсовДляНДС);
					
				Иначе
					//плюсуем к ранее созданному
					Если Выборка.СтавкаНДС = Перечисления.СтавкиНДС.НДС10 Тогда	
						ЗначенияПоНДС.СуммаБезНДС10 = ЗначенияПоНДС.СуммаБезНДС10 + Выборка.СуммаБезНДС;	
						ЗначенияПоНДС.СуммаНДС10    = ЗначенияПоНДС.СуммаНДС10    + Выборка.СуммаНДС;
						ЗначенияПоНДС.СуммаСНДС10   = ЗначенияПоНДС.СуммаСНДС10   + Выборка.СуммаСНДС;
						
					ИначеЕсли Выборка.СтавкаНДС = Перечисления.СтавкиНДС.НДС20 Тогда	
						ЗначенияПоНДС.СуммаБезНДС20 = ЗначенияПоНДС.СуммаБезНДС20 + Выборка.СуммаБезНДС;	
						ЗначенияПоНДС.СуммаНДС20    = ЗначенияПоНДС.СуммаНДС20    + Выборка.СуммаНДС;
						ЗначенияПоНДС.СуммаСНДС20   = ЗначенияПоНДС.СуммаСНДС20   + Выборка.СуммаСНДС;	
					КонецЕсли;
					
					ЗначенияПоНДС.СуммаБезНДС_СФ = ЗначенияПоНДС.СуммаБезНДС_СФ + Выборка.СуммаБезНДС;
					ЗначенияПоНДС.СуммаНДС_СФ    = ЗначенияПоНДС.СуммаНДС_СФ    + Выборка.СуммаНДС;
					ЗначенияПоНДС.СуммаСНДС_СФ   = ЗначенияПоНДС.СуммаСНДС_СФ   + Выборка.СуммаСНДС;
					
					//изменяем значение соответствия по ключу
					ПодробноПоНДС.Вставить(ПервичСФ, ЗначенияПоНДС);
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
		//--
		
		КолвоВсего=КолвоВсего+выборка.количество;
		СуммаВСего=СуммаВСего+выборка.сумма;
		
		НомерСтроки=НомерСтроки+1;
		
	КонецЦикла;
	
	//Итоги=Макет.получитьОбласть("Итоги");
	Итоги     = Макет.получитьобласть("Итоги|Основная"); //ValMa - отдельные области
	ИтогиПрав = Макет.получитьобласть("Итоги|ПервДокСФ");
	
	Итоги.параметры.КолвоИтого=КолвоВсего;
	Итоги.параметры.СуммаИтого=СуммаВСего;
	ТабличныйДокумент.Вывести(Итоги);
	//ValMa
	Если ТипЗнч(Объект) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		ТабличныйДокумент.Присоединить(ИтогиПрав);//присоединяет рядом
	КонецЕсли;
	//---
	
	//ValMa - 13-06-2019 - печать сумм по партиям
	Если ПодробноПоНДС.Количество() > 0 Тогда
		ОбластьОтступ = Макет.ПолучитьОбласть("Отступ");
		ТабличныйДокумент.Вывести(ОбластьОтступ);
		ОблШапкаНДС = Макет.ПолучитьОбласть("ШапкаНДС");
		ТабличныйДокумент.Вывести(ОблШапкаНДС);	
		ОбластьНДС = Макет.ПолучитьОбласть("НДС_10_20");
		//обойдем все элементы соответствия
		Для Каждого Элемент Из ПодробноПоНДС Цикл
			ОбластьНДС.Параметры.НомерДатаСФ = Элемент.Ключ;
			ЗаполнитьЗначенияСвойств(ОбластьНДС.Параметры,Элемент.Значение);
			// Создаем массив для проверки вывода.
			МассивВыводимыхОбластей = Новый Массив;
			МассивВыводимыхОбластей.Добавить(ОбластьНДС);	
			Если НЕ ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда //строка не поместилась на страницу
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОблШапкаНДС);
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьНДС);
		КонецЦикла;	
	КонецЕсли;
	//--
	
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();	
	
КонецПроцедуры

//ValMa
Функция СтруктураРесурсовДляНДС()
	
	Структура = Новый Структура;	
	Структура.Вставить("СуммаБезНДС10", 0);
	Структура.Вставить("СуммаНДС10",    0);
	Структура.Вставить("СуммаСНДС10",   0);	
	Структура.Вставить("СуммаБезНДС20", 0);
	Структура.Вставить("СуммаНДС20",    0);
	Структура.Вставить("СуммаСНДС20",   0);	
	Структура.Вставить("СуммаБезНДС_СФ", 0);
	Структура.Вставить("СуммаНДС_СФ",    0);
	Структура.Вставить("СуммаСНДС_СФ",   0);	
	
	Возврат Структура;
	
КонецФункции
//--

Функция ПодключитьВнешнююКомпонентуПечатиШтрихкода() Экспорт
	
	ПодключениеВыполнено = ПодключитьВнешнююКомпоненту("ОбщийМакет.КомпонентаПечатиШтрихкодов", "КартинкаШтрихкода", ТипВнешнейКомпоненты.Native);
	
	// Создадим объект внешней компоненты
	Если ПодключениеВыполнено Тогда
		ВнешняяКомпонента = Новый("AddIn.КартинкаШтрихкода.Barcode");
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	// Если нет возможности рисовать
	Если НЕ ВнешняяКомпонента.ГрафикаУстановлена Тогда
		// То картинку сформировать не сможем
		Возврат Неопределено;
	Иначе
		
		// Установим основные параметры компоненты
		
		// Если в системе установлен шрифт Tahoma
		Если ВнешняяКомпонента.НайтиШрифт("Tahoma") = Истина Тогда
			// Выбираем его как шрифт для формирования картинки
			ВнешняяКомпонента.Шрифт = "Tahoma";
		Иначе
			
			// Шрифт Tahoma в системе отсутствует
			// Обойдем все доступные компоненте шрифты
			Для Сч = 0 По ВнешняяКомпонента.КоличествоШрифтов -1 Цикл
				// Получим очередной шрифт, доступный компоненте
				ТекущийШрифт = ВнешняяКомпонента.ШрифтПоИндексу(Сч);
				// Если шрифт доступен
				Если ТекущийШрифт <> Неопределено Тогда
					// Они и будет шрифтом для формирования штри-кода
					ВнешняяКомпонента.Шрифт = ТекущийШрифт;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		// Утановим размер шрифта
		ВнешняяКомпонента.РазмерШрифта = 10;
		
		Возврат ВнешняяКомпонента;
		
	КонецЕсли;
	
КонецФункции

Функция ПолучитьКартинкуШтрихкода(ВнешняяКомпонента, Штрихкод, Ширина, Высота) Экспорт
	
	// Зададим размер картинки
	ВнешняяКомпонента.Ширина =Ширина;
	ВнешняяКомпонента.Высота =Высота;
	
	// Разрешим компоненте самой определять тип кода
	ВнешняяКомпонента.АвтоТип = истина;
	
	// Если код содержит контрольный символ, обязательно указываем
	ВнешняяКомпонента.СодержитКС = СтрДлина(Штрихкод) = 13;
	
	// Если отображать контрольный символ не нужно
	// ВнешняяКомпонента.ВидимостьКС = Ложь;
	
	// Формируем картинку штрихкода
	ВнешняяКомпонента.ЗначениеКода = Штрихкод;
	
	// Если установленная нами ширина меньше минимально допустимой для этого штрихкода
	Если ВнешняяКомпонента.Ширина < ВнешняяКомпонента.МинимальнаяШиринаКода Тогда
		// Скорректируем ширину
		ВнешняяКомпонента.Ширина = ВнешняяКомпонента.МинимальнаяШиринаКода + 10;
	КонецЕсли;
	
	// Сформируем картинку
	ДвоичныеДанныеКартинки = ВнешняяКомпонента.ПолучитьШтрихкод();
	
	// Если картинка сформировалась
	Если ДвоичныеДанныеКартинки <> Неопределено Тогда
		// Формируем из двоичных данных
		Возврат Новый Картинка(ДвоичныеДанныеКартинки);
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции



























