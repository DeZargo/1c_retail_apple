&После("ВывестиТабличныйДокументВКоллекцию")
Процедура КочетовВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, ИмяМакета, СинонимМакета, ТабличныйДокумент,
	
	Картинка = Неопределено, ПолныйПутьКМакету = "", ИмяФайлаПечатнойФормы = Неопределено) Экспорт
	
	ОписаниеПечатнойФормы = КоллекцияПечатныхФорм.Найти(ВРег(ИмяМакета), "ИмяВРЕГ");
	//Если ОписаниеПечатнойФормы <> Неопределено Тогда
	//	ОписаниеПечатнойФормы.ТабличныйДокумент = ТабличныйДокумент;
	//	ОписаниеПечатнойФормы.СинонимМакета = СинонимМакета;
	//	ОписаниеПечатнойФормы.Картинка = Картинка;
	//	ОписаниеПечатнойФормы.ПолныйПутьКМакету = ПолныйПутьКМакету;
	//	ОписаниеПечатнойФормы.ИмяФайлаПечатнойФормы = ИмяФайлаПечатнойФормы;
	//КонецЕсли;
	//+++
	Если ОписаниеПечатнойФормы <> Неопределено  и 
			не(РольДоступна("ххх_РазрешитьРедактированиеНапечатанныхФорм") или рольДоступна("ПолныеПрава"))	Тогда
		ТабличныйДокумент.защита=Истина;
	КонецЕсли;
	//---
КонецПроцедуры

&Вместо("МакетПечатнойФормы")
Функция КочетовМакетПечатнойФормыВместо(ПолныйПутьКМакету) Экспорт
	
	ЧастиПути = СтрЗаменить(ПолныйПутьКМакету, ".", Символы.ПС);
	
	Если СтрЧислоСтрок(ЧастиПути) = 3 Тогда
		ПутьКМетаданным = СтрПолучитьСтроку(ЧастиПути, 1) + "." + СтрПолучитьСтроку(ЧастиПути, 2);
		ПутьКОбъектуМетаданных = СтрПолучитьСтроку(ЧастиПути, 3);
	ИначеЕсли СтрЧислоСтрок(ЧастиПути) = 2 Тогда
		ПутьКМетаданным = СтрПолучитьСтроку(ЧастиПути, 1);
		ПутьКОбъектуМетаданных = СтрПолучитьСтроку(ЧастиПути, 2);
	Иначе
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Макет ""%1"" не найден. Операция прервана.'"), ПолныйПутьКМакету);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПользовательскиеМакетыПечати.Макет КАК Макет,
	               |	ПользовательскиеМакетыПечати.Использование КАК Использование
	               |ИЗ
	               |	РегистрСведений.ПользовательскиеМакетыПечати КАК ПользовательскиеМакетыПечати
	               |ГДЕ
	               |	ПользовательскиеМакетыПечати.Объект = &Объект
	               |	И ПользовательскиеМакетыПечати.ИмяМакета = &ИмяМакета
	               |	И ПользовательскиеМакетыПечати.Использование";
	
	Запрос.Параметры.Вставить("Объект", ПутьКМетаданным);
	Запрос.Параметры.Вставить("ИмяМакета", ПутьКОбъектуМетаданных);
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();	
	УстановитьПривилегированныйРежим(Ложь);
	
	Результат = Неопределено;
	
	Если ПутьКОбъектуМетаданных="ПФ_MXL_СчетФактура1137" и ТекущаяДата()>'20171001' Тогда
		Если Выборка.Следующий() Тогда
				йцу=ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПутьКМетаданным);
				Результат = йцу.ПолучитьМакет("ххх_ПФ_MXL_СчетФактура1137");
		КонецЕсли;
	ИначеЕсли Выборка.Следующий() Тогда
		Результат = Выборка.Макет.Получить();
	Иначе
		Если СтрЧислоСтрок(ЧастиПути) = 3 Тогда
			Результат = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПутьКМетаданным).ПолучитьМакет(ПутьКОбъектуМетаданных);
		Иначе
			Результат = ПолучитьОбщийМакет(ПутьКОбъектуМетаданных);
		КонецЕсли;
	КонецЕсли;

	
	Если Результат = Неопределено Тогда
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Макет ""%1"" не найден. Операция прервана.'"), ПолныйПутьКМакету);
	КонецЕсли;
		
	Возврат Результат;
	
КонецФункции

//// Возвращает макет печатной формы по полному пути к макету.
////
//// Параметры:
////  ПутьКМакету - Строка - полный путь к макету в формате:
////                         "Документ.<ИмяДокумента>.<ИмяМакета>"
////                         "Обработка.<ИмяОбработки>.<ИмяМакета>"
////                         "ОбщийМакет.<ИмяМакета>".
//// Возвращаемое значение:
////  ТабличныйДокумент - для макета типа MXL.
////  ДвоичныеДанные    - для макетов офисных документов.
////
//Функция МакетПечатнойФормы(ПутьКМакету) Экспорт
//	
//	ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
//		НСтр("ru = 'Макет ""%1"" не существует. Операция прервана.'"), ПутьКМакету);
//	ЧастиПути = СтрРазделить(ПутьКМакету, ".", Истина);
//	Если ЧастиПути.Количество() <> 2 И ЧастиПути.Количество() <> 3 Тогда
//		ВызватьИсключение ТекстОшибки;
//	КонецЕсли;
//	
//	ИмяМакета = ЧастиПути[ЧастиПути.ВГраница()];
//	ЧастиПути.Удалить(ЧастиПути.ВГраница());
//	ИмяОбъекта = СтрСоединить(ЧастиПути, ".");
//	
//	ТекстЗапроса = 
//	"ВЫБРАТЬ
//	|	ПользовательскиеМакетыПечати.Макет КАК Макет,
//	|	ПользовательскиеМакетыПечати.ИмяМакета КАК ИмяМакета
//	|ИЗ
//	|	РегистрСведений.ПользовательскиеМакетыПечати КАК ПользовательскиеМакетыПечати
//	|ГДЕ
//	|	ПользовательскиеМакетыПечати.Объект = &Объект
//	|	И ПользовательскиеМакетыПечати.ИмяМакета ПОДОБНО &ИмяМакета
//	|	И ПользовательскиеМакетыПечати.Использование";
//	
//	Запрос = Новый Запрос(ТекстЗапроса);
//	Запрос.Параметры.Вставить("Объект", ИмяОбъекта);
//	Запрос.Параметры.Вставить("ИмяМакета", ИмяМакета + "%");
//	
//	Выборка = Запрос.Выполнить().Выбрать();
//	
//	СписокМакетов = Новый Соответствие;
//	Пока Выборка.Следующий() Цикл
//		СписокМакетов.Вставить(Выборка.ИмяМакета, Выборка.Макет.Получить());
//	КонецЦикла;
//	
//	ИменаПоиска = ИменаМакета(ИмяМакета);
//	
//	Для Каждого ИмяПоиска Из ИменаПоиска Цикл
//		НайденныйМакет = СписокМакетов[ИмяПоиска];
//		Если НайденныйМакет <> Неопределено Тогда
//			Возврат НайденныйМакет;
//		КонецЕсли;
//	КонецЦикла;
//	
//	ЭтоОбщийМакет = СтрРазделить(ИмяОбъекта, ".").Количество() = 1;
//	
//	КоллекцияМакетов = Метаданные.ОбщиеМакеты;
//	Если Не ЭтоОбщийМакет Тогда
//		ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(ИмяОбъекта);
//		Если ОбъектМетаданных = Неопределено Тогда
//			ВызватьИсключение ТекстОшибки;
//		КонецЕсли;
//		КоллекцияМакетов = ОбъектМетаданных.Макеты;
//	КонецЕсли;
//	
//	Для Каждого ИмяПоиска Из ИменаПоиска Цикл
//		Если КоллекцияМакетов.Найти(ИмяПоиска) <> Неопределено Тогда
//			Если ЭтоОбщийМакет Тогда
//				Возврат ПолучитьОбщийМакет(ИмяПоиска);
//			Иначе
//				УстановитьОтключениеБезопасногоРежима(Истина);
//				УстановитьПривилегированныйРежим(Истина);
//				Возврат ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ИмяОбъекта).ПолучитьМакет(ИмяПоиска);
//			КонецЕсли;
//		КонецЕсли;
//	КонецЦикла;
//	
//	ВызватьИсключение ТекстОшибки;
//	
//КонецФункции



















