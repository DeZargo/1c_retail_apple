 
&Вместо("ПроверитьПроведенностьДокументов")
Функция ВместоПроверитьПроведенностьДокументовКочетов(Знач Документы) Экспорт
	
	мас=Новый массив;
	Для каждого док из Документы Цикл
		наб=РегистрыСведений.ххх_РазрешенияНАПечатьДокументовБезПроведения.СоздатьНаборЗаписей();
		наб.Отбор.ТипДокумента.установить(Строка(ТипЗнч(Док)));
		Наб.Отбор.Контрагент.Установить(Справочники.Контрагенты.ПустаяСсылка());
		наб.Прочитать();
		
		Если наб.Количество()=0 Тогда
			наб=РегистрыСведений.ххх_РазрешенияНАПечатьДокументовБезПроведения.СоздатьНаборЗаписей();
			наб.Отбор.ТипДокумента.установить(Строка(ТипЗнч(Док)));
			наб.Прочитать();
			Если Док.Метаданные().Реквизиты.Найти("Контрагент") <> Неопределено Тогда
				Наб.Отбор.Контрагент.Установить(Док.Контрагент);
				наб.Прочитать();
			КонецЕсли;
			Если наб.Количество()=0 Тогда
				мас.Добавить(док);	
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	Результат=ПродолжитьВызов(мас);
	Возврат Результат;
	
КонецФункции

//// Проверяет статус проведения переданных документов и возвращает
//// те из них, которые не проведены.
////
//// Параметры:
////  Документы - Массив - документы, статус проведения которых необходимо проверить.
////
//// Возвращаемое значение:
////  Массив - непроведенные документы.
////
//Функция ПроверитьПроведенностьДокументов(Знач Документы) Экспорт
//	
//	Результат = Новый Массив;
//	
//	ШаблонЗапроса = 	
//		"ВЫБРАТЬ
//		|	ПсевдонимЗаданнойТаблицы.Ссылка КАК Ссылка
//		|ИЗ
//		|	&ИмяДокумента КАК ПсевдонимЗаданнойТаблицы
//		|ГДЕ
//		|	ПсевдонимЗаданнойТаблицы.Ссылка В(&МассивДокументов)
//		|	И НЕ ПсевдонимЗаданнойТаблицы.Проведен";
//	
//	ТекстОбъединитьВсе =
//		"
//		|
//		|ОБЪЕДИНИТЬ ВСЕ
//		|
//		|";
//		
//	ИменаДокументов = Новый Массив;
//	Для Каждого Документ Из Документы Цикл
//		МетаданныеДокумента = Документ.Метаданные();
//		Если ИменаДокументов.Найти(МетаданныеДокумента.ПолноеИмя()) = Неопределено
//			И Метаданные.Документы.Содержит(МетаданныеДокумента)
//			И МетаданныеДокумента.Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить Тогда
//				ИменаДокументов.Добавить(МетаданныеДокумента.ПолноеИмя());
//		КонецЕсли;
//	КонецЦикла;
//	
//	ТекстЗапроса = "";
//	Для Каждого ИмяДокумента Из ИменаДокументов Цикл
//		Если Не ПустаяСтрока(ТекстЗапроса) Тогда
//			ТекстЗапроса = ТекстЗапроса + ТекстОбъединитьВсе;
//		КонецЕсли;
//		ТекстПодзапроса = СтрЗаменить(ШаблонЗапроса, "&ИмяДокумента", ИмяДокумента);
//		ТекстЗапроса = ТекстЗапроса + ТекстПодзапроса;
//	КонецЦикла;
//		
//	Запрос = Новый Запрос;
//	Запрос.Текст = ТекстЗапроса;
//	Запрос.УстановитьПараметр("МассивДокументов", Документы);
//	
//	Если Не ПустаяСтрока(ТекстЗапроса) Тогда
//		Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
//	КонецЕсли;
//	
//	Возврат Результат;
//	
//КонецФункции
