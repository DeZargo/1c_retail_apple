
&Вместо("УстановитьДополнительныеКолонкиНоменклатуры")
Процедура УстановитьДополнительныеКолонкиНоменклатурыКочетов()
	
КонецПроцедуры

&НаСервере
Процедура КочетовПриСозданииНаСервереПеред(Отказ, СтандартнаяОбработка)
	
	список.Параметры.УстановитьЗначениеПараметра("КрасныйЦенник",Справочники.ххх_Справочник.КрасныйЦенник.Значение);
	ОбновитьСписокНоменклатуры();
			
	возврат;

КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокНоменклатуры()
	Список.Параметры.УстановитьЗначениеПараметра("Родитель",Родитель);
КонецПроцедуры

&НаКлиенте
Процедура КочетовГруппСписокПриАктивизацииСтрокиВместо(Элемент)
	тд = Элементы.СписокГрупп.ТекущиеДанные;
	Если НЕ тд = Неопределено Тогда
		Родитель = тд.Ссылка;
		ОбновитьСписокНоменклатуры();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Поиск(Команда)
	ОткрытьФорму("ОбщаяФорма.ххх_ФормаПоиска",,ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ЗначениеЗаполнено(ВыбранноеЗначение) 
			и не ПроверитьНаГруппу(ВыбранноеЗначение) тогда
		Элементы.СписокГрупп.ТекущаяСтрока=ПолучитьРодителя(выбранноеЗначение);
		Элементы.Список.ТекущаяСтрока=выбранноеЗначение;
	ИначеЕсли ЗначениеЗаполнено(ВыбранноеЗначение) тогда
		Элементы.СписокГрупп.ТекущаяСтрока=выбранноеЗначение;
	КонецЕсли;
	//Элементы.СписокГрупп.Развернуть(СписокГрупп.ПолучитьЭлементы()[0].ПолучитьИдентификатор(), Истина);
КонецПроцедуры

Функция ПроверитьНаГруппу(ВыбранноеЗначение)
	возврат ВыбранноеЗначение.ЭтоГруппа;
КонецФункции

Функция ПолучитьРодителя(ВыбранноеЗначение)
	возврат ВыбранноеЗначение.Родитель;
КонецФункции

//&Вместо("ОповещениеПоискаПоШтрихкоду")
//&НаКлиенте
//Процедура ОповещениеПоискаПоШтрихкодуКочетов(Штрихкод, ДополнительныеПараметры) Экспорт
//	Если НЕ ПустаяСтрока(Штрихкод) Тогда
//		СтруктураПараметровКлиента = ПолученШтрихкодИзСШК(Штрихкод);
//		если СтруктураПараметровКлиента.ЗначенияПоиска.Количество()<>0 тогда
//			ОбработатьДанныеПоКодуКлиент(СтруктураПараметровКлиента);
//			Для каждого эл из СтруктураПараметровКлиента.ЗначенияПоиска Цикл
//				оповеститьОВыборе(эл.Номенклатура);
//			КонецЦикла;
//			//ОбработкаВыбора(СтруктураПараметровКлиента.ЗначенияПоиска[0].Номенклатура,);
//		КонецЕсли;
//		//Zorius
//		ПоискПоШтрихкоду("");
//	КонецЕсли;
//КонецПроцедуры

&Вместо("ОповещениеПоискаПоШтрихкоду")
&НаКлиенте
Процедура ОповещениеПоискаПоШтрихкодуКочетов(Структура, ДополнительныеПараметры) Экспорт	
	Если ЗначениеЗаполнено(Структура) Тогда
		штрихкод=Структура.штрихкод;
		Если Структура.ПоискПоВесовомуТовару=Ложь тогда
			СтруктураПараметровКлиента = ПолученШтрихкодИзСШК(Штрихкод);
			если СтруктураПараметровКлиента.ЗначенияПоиска.Количество()<>0 тогда
				ОбработатьДанныеПоКодуКлиент(СтруктураПараметровКлиента);
				Для каждого эл из СтруктураПараметровКлиента.ЗначенияПоиска Цикл
					оповеститьОВыборе(эл.Номенклатура);
				КонецЦикла;
			КонецЕсли;
		Иначе			
			номка=ПоискПоВесовомуШтрихКоду(штрихкод);
			Если значениеЗаполнено(номка) тогда
				оповеститьОВыборе(номка);
			КонецЕсли;
			//ТоварыНоменклатураПриИзменении("");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Функция ПоискПоВесовомуШтрихКоду(штрихкод)
	номка=ххх_Сервер.ПолучитьВесовойШтрихкод(штрихкод);
	Если значениеЗаполнено(номка) Тогда
		элементы.Список.ТекущаяСтрока=номка;
		возврат (номка);
	Иначе
		Сообщить("Данные по коду не найдены: "+штрихкод);
		возврат (Неопределено);
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура КочетовСписокГруппВыборВместо(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СообщитьОВыборе(ВыбраннаяСтрока);
	ОповеститьОВыборе(ВыбраннаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура КочетовСписокВыборВместо(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СообщитьОВыборе(ВыбраннаяСтрока);
	ОповеститьОВыборе(ВыбраннаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура СообщитьОВыборе(ВыбраннаяСтрока)
	Сообщить("Вы выбрали: "+Строка(ВыбраннаяСтрока));
КонецПроцедуры

&НаКлиенте
Процедура КочетовПриОткрытииПосле(Отказ)
	//Если Параметры.Свойство("РазрешеныЗакупки")Тогда
	//	ВидСравненияДляОтбора = ВидСравненияКомпоновкиДанных.Равно;
	//	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
	//		ЭтаФорма.Список,
	//		"РазрешеныЗакупки",
	//		истина,
	//		истина, ВидСравненияДляОтбора);
	//КонецЕсли;
КонецПроцедуры















