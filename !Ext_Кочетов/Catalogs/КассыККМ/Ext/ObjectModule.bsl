
процедура СверитьКассы(смена) экспорт
	Запрос=Новый запрос;
	Запрос.УстановитьПараметр("смена",смена);
	Запрос.УстановитьПараметр("Касса",ЭтотОбъект.Ссылка);
	Запрос.Текст="ВЫБРАТЬ
	             |	СУММА(ЧекККМ.СуммаДокумента) КАК СуммаДокумента
	             |ИЗ
	             |	Документ.ЧекККМ КАК ЧекККМ
	             |ГДЕ
	             |	ЧекККМ.НомерСменыККМ = &Смена
	             |	И ЧекККМ.КассаККМ = &Касса
	             |	И ЧекККМ.Проведен";
	выборка=Запрос.Выполнить().Выбрать();
	если выборка.Следующий() Тогда
		сумма=выборка.суммаДокумента;
	Иначе
		сумма=0;
	КонецЕсли;
	//Если сумма =ВнешниеИсточникиДанных.Касса.get_session_sum(смена)/100 Тогда
	//	Возврат;
	//КонецЕсли;
	Запрос=Новый запрос;
	запрос.УстановитьПараметр("смена",смена);
	Запрос.Текст="ВЫБРАТЬ
	             |	ВЫРАЗИТЬ(cheks.id КАК ЧИСЛО(20, 0)) КАК id,
	             |	cheks.smena КАК smena,
	             |	cheks.sum КАК sum
	             |ИЗ
	             |	ВнешнийИсточникДанных.Касса.Таблица.cheks КАК cheks
	             |ГДЕ
	             |	cheks.smena = &смена
	             |	И cheks.state <> 2
	             |	И cheks.sum <> 0";
	тч=Запрос.Выполнить().Выгрузить();
	тч.колонки.Добавить("идКассы",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15)));
	Для каждого стр из тч цикл
		стр.ИдКассы=стр.id;
		стр.id=Число(СтрЗаменить(Строка(смена)," ","")+Прав(Строка(стр.id),6));
	КонецЦикла;
	
	Запрос.УстановитьПараметр("тч",тч);
	Запрос.УстановитьПараметр("Касса",ЭтотОбъект.Ссылка);
	Запрос.Текст="ВЫБРАТЬ
	             |	тч.smena КАК smena,
	             |	тч.id КАК id,
	             |	тч.sum КАК sum,
	             |	тч.ИдКассы КАК ИдКассы
	             |ПОМЕСТИТЬ ЧекиСКассы
	             |ИЗ
	             |	&тч КАК тч
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ЧекиСКассы.id КАК id,
	             |	ЧекиСКассы.sum / 100 КАК сумма,
	             |	чекиВ1с.НомерЧекаККМ КАК НомерЧекаККМ,
	             |	чекиВ1с.СуммаДокумента КАК СуммаДокумента,
	             |	ЧекиСКассы.ИдКассы КАК ИдКассы
	             |ИЗ
	             |	ЧекиСКассы КАК ЧекиСКассы
	             |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	             |			ЧекККМ.НомерЧекаККМ КАК НомерЧекаККМ,
	             |			ЧекККМ.СуммаДокумента КАК СуммаДокумента
	             |		ИЗ
	             |			Документ.ЧекККМ КАК ЧекККМ
	             |		ГДЕ
	             |			ЧекККМ.Проведен
	             |			И ЧекККМ.НомерСменыККМ = &Смена
	             |			И ЧекККМ.КассаККМ = &Касса) КАК чекиВ1с
	             |		ПО (чекиВ1с.НомерЧекаККМ = ЧекиСКассы.id)
	             |ГДЕ
	             |	ЕСТЬNULL(чекиВ1с.СуммаДокумента, 0) <> ЧекиСКассы.sum / 100";
				                                                                         //  чекиВ1с.СуммаДокумента <> ЧекиСКассы.sum / 100
	Выборка=Запрос.Выполнить().Выбрать();  //   запрос.выполнить().выгрузить()
	пока выборка.Следующий() Цикл		
		ВнешниеИсточникиДанных.Касса.export_chek(выборка.ИдКассы);				
	КонецЦикла;
	
		
	Запрос.УстановитьПараметр("тч",тч);
	Запрос.УстановитьПараметр("Касса",ЭтотОбъект.Ссылка);
	Запрос.Текст="ВЫБРАТЬ
	             |	тч.smena КАК smena,
	             |	тч.id КАК id,
	             |	тч.sum КАК sum,
	             |	тч.ИдКассы КАК ИдКассы
	             |ПОМЕСТИТЬ ЧекиСКассы
	             |ИЗ
	             |	&тч КАК тч
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ЧекиСКассы.id КАК id,
	             |	ЧекиСКассы.sum / 100 КАК сумма,
	             |	чекиВ1с.НомерЧекаККМ КАК НомерЧекаККМ,
	             |	чекиВ1с.СуммаДокумента КАК СуммаДокумента,
	             |	ЧекиСКассы.ИдКассы КАК ИдКассы,
	             |	чекиВ1с.Ссылка КАК Чек1с
	             |ИЗ
	             |	(ВЫБРАТЬ
	             |		ЧекККМ.НомерЧекаККМ КАК НомерЧекаККМ,
	             |		ЧекККМ.СуммаДокумента КАК СуммаДокумента,
	             |		ЧекККМ.Ссылка КАК Ссылка
	             |	ИЗ
	             |		Документ.ЧекККМ КАК ЧекККМ
	             |	ГДЕ
	             |		ЧекККМ.Проведен
	             |		И ЧекККМ.НомерСменыККМ = &Смена
	             |		И ЧекККМ.КассаККМ = &Касса) КАК чекиВ1с
	             |		ЛЕВОЕ СОЕДИНЕНИЕ ЧекиСКассы КАК ЧекиСКассы
	             |		ПО чекиВ1с.НомерЧекаККМ = ЧекиСКассы.id
	             |ГДЕ
	             |	ЧекиСКассы.ИдКассы ЕСТЬ NULL";

				 
	Выборка=Запрос.Выполнить().Выбрать();
	Пока выборка.Следующий() Цикл
		чек=Выборка.Чек1с.получитьОбъект();
		чек.установитьПометкуУдаления(истина);
	КонецЦикла;

КонецПроцедуры

&После("ПриЗаписи")
Процедура КочетовПриЗаписи(Отказ)
	Если не Этоновый() и не Магазин.ххх_ИнтернетМагазин тогда  //кастыль
		узел=планыОбмена.ПланОбменаСОборудованием.НайтиПоРеквизиту("Оборудование",Ссылка);
		Если не ЗначениеЗаполнено(узел) Тогда
			узел=ПланыОбмена.ПланОбменаСОборудованием.СоздатьУзел();
		Иначе
			узел=узел.ПолучитьОбъект();
		КонецЕсли;	
		узел.Код=СокрЛп(код)+"к";
		узел.Наименование=Наименование;
		узел.Оборудование=ссылка;
		узел.ПометкаУдаления=ПометкаУдаления;
		узел.Записать();
	КонецЕсли;
КонецПроцедуры

&Вместо("ПередЗаписью")
Процедура КочетовПередЗаписью(Отказ)
	
КонецПроцедуры
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			 