

&Вместо("ЗаполнитьРеквизитыШапкиСчетФактура")
Процедура ВместоЗаполнитьРеквизитыШапкиСчетФактураКочетов(ДанныеПечати, СведенияОПоставщике, Макет, ТабличныйДокумент, ДействующиеПостановления)
	возврат;
	СведенияОПоставщике = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата);
	СведенияОПокупателе = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Контрагент, ДанныеПечати.Дата);
	
	СведенияОГрузоотправителе = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузоотправитель, ДанныеПечати.Дата);
	СведенияОГрузополучателе = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузополучатель, ДанныеПечати.Дата);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
	
	НомераДаты = Новый Структура("Номер, Дата, НомерИсправления, ДатаИсправления, НомерСчетаФактуры, ДатаСчетаФактуры, НомерИсправленияСчетаФактуры, ДатаИсправленияСчетаФактуры");
	
	НомераДаты.Номер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеПечати.Номер, Ложь, Ложь);
	Если Лев(НомераДаты.Номер, 1) = "И" Тогда
		НомераДаты.Номер = Прав(НомераДаты.Номер, СтрДлина(НомераДаты.Номер)-1);
	КонецЕсли;
	
	НомераДаты.Дата = Формат(ДанныеПечати.Дата, "ДФ='дд ММММ гггг'")+ " г.";
	НомераДаты.НомерИсправления = ?(ДанныеПечати.Исправление, ДанныеПечати.НомерИсправления, "--");
	НомераДаты.ДатаИсправления = ?(ДанныеПечати.Исправление, Формат(ДанныеПечати.ДатаИсправления, "ДФ='дд ММММ гггг'")+ " г.", "--");
	
	НомераДаты.НомерСчетаФактуры = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеПечати.НомерСчетаФактуры, Ложь, Ложь);
	Если Лев(НомераДаты.НомерСчетаФактуры, 1) = "И" Тогда
		НомераДаты.НомерСчетаФактуры = Прав(НомераДаты.НомерСчетаФактуры, СтрДлина(НомераДаты.НомерСчетаФактуры)-1);
	КонецЕсли;
	
	НомераДаты.ДатаСчетаФактуры = Формат(ДанныеПечати.ДатаСчетаФактуры, "ДФ='дд ММММ гггг'")+ " г.";
	НомераДаты.НомерИсправленияСчетаФактуры = ДанныеПечати.НомерИсправленияСчетаФактуры;
	НомераДаты.ДатаИсправленияСчетаФактуры = Формат(ДанныеПечати.ДатаИсправленияСчетаФактуры, "ДФ='дд ММММ гггг'")+ " г.";
	
	ОбластьМакета.Параметры.Заполнить(НомераДаты);
	
	// Выводим данные о поставщике.
	ПредставлениеПоставщика = "Продавец: " + СведенияОПоставщике.НаименованиеПолноеПоУчредительнымДокументам;
	Если ДействующиеПостановления.Постановление914 И СведенияОПоставщике.НаименованиеПолноеПоУчредительнымДокументам <> СведенияОПоставщике.ПолноеНаименование Тогда
		ПредставлениеПоставщика = ПредставлениеПоставщика
			+ " ("
			+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование")
			+ ")";
	КонецЕсли;
	ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
	
	ОбластьМакета.Параметры.АдресПоставщика = "Адрес: " + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "ЮридическийАдрес");
	
	КПП = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "КПП,", Ложь);
	
	ОбластьМакета.Параметры.ИННПоставщика = "ИНН/КПП продавца: " 
	+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "ИНН", Ложь)
	+ ?(Не ПустаяСтрока(КПП), "/" + КПП, "");
	
	// Выводим данные грузоотправителя.	
	ПредставлениеГрузоотправителя = "Грузоотправитель и его адрес: ";
	//Если ДанныеПечати.ТолькоУслуги 
	//	ИЛИ ДействующиеПостановления.Постановление1137 Тогда
	//	ПредставлениеГрузоотправителя = ПредставлениеГрузоотправителя + "--";
	//ИначеЕсли ДанныеПечати.Организация = ДанныеПечати.Грузоотправитель Тогда
	//	ПредставлениеГрузоотправителя = ПредставлениеГрузоотправителя + "он же";
	//Иначе
		ПредставлениеГрузоотправителя = ПредставлениеГрузоотправителя 
		+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование");
	//КонецЕсли;
	ОбластьМакета.Параметры.ПредставлениеГрузоотправителя = ПредставлениеГрузоотправителя;
	
	// Выводим данные грузополучателя и покупателя.
	ПредставлениеГрузополучателя = "Грузополучатель и его адрес: ";
	Если ДанныеПечати.ТолькоУслуги 
		//ИЛИ ДействующиеПостановления.Постановление1137
															Тогда
		ПредставлениеГрузополучателя = ПредставлениеГрузополучателя + "--";
	Иначе
		Если Не ПустаяСтрока(ДанныеПечати.АдресДоставки) Тогда
			ПредставлениеГрузополучателя = ПредставлениеГрузополучателя
			+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузополучателе, "ПолноеНаименование", Ложь)
			+ ", " + СокрЛП(ДанныеПечати.АдресДоставки)
			;
		Иначе
			ПредставлениеГрузополучателя = ПредставлениеГрузополучателя
			+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузополучателе, "ПолноеНаименование,ФактическийАдрес", Ложь);
			
		КонецЕсли;
	КонецЕсли;
	ОбластьМакета.Параметры.ПредставлениеГрузополучателя = ПредставлениеГрузополучателя;
	
	ОбластьМакета.Параметры.ПоДокументу = "К платежно-расчетному документу № ";
	Если Не ПустаяСтрока(ДанныеПечати.СтрокаПоДокументу) Тогда
		ОбластьМакета.Параметры.ПоДокументу = ОбластьМакета.Параметры.ПоДокументу + ДанныеПечати.СтрокаПоДокументу;
	Иначе
		ОбластьМакета.Параметры.ПоДокументу = ОбластьМакета.Параметры.ПоДокументу + "-- от --";
	КонецЕсли;
	
	
	
	ОбластьМакета.Параметры.ПредставлениеПокупателя = "Покупатель: " 
	+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование", Ложь);
	ОбластьМакета.Параметры.АдресПокупателя = "Адрес: "
		+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, "ЮридическийАдрес", Ложь);
		
	КПП = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, "КПП,", Ложь);
	ОбластьМакета.Параметры.ИННПокупателя = "ИНН/КПП покупателя: "
		+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, "ИНН,", Ложь)
		+ ?(Не ПустаяСтрока(КПП), "/" + КПП, "");
	
	Если ДействующиеПостановления.Постановление1137 Тогда
		ОбластьМакета.Параметры.Валюта = НСтр("ru='Валюта: наименование, код Российский рубль, 643'"); 
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
		
КонецПроцедуры

&Вместо("ЗаполнитьРеквизитыСтрокиТовара")
Процедура КочетовЗаполнитьРеквизитыСтрокиТовара(СтрокаТовары, ОбластьМакета, НомерСтроки)
	
	ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
	
	СтруктураПараметров = Новый Структура;
	
	СтруктураПараметров.Вставить("НомерСтроки", НомерСтроки);
	СтруктураПараметров.Вставить("ПредставлениеНоменклатуры", ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(
		СтрокаТовары.НоменклатураНаименование,
		СтрокаТовары.ХарактеристикаНаименование));
		
	ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);
	ОбластьМакета.Параметры.ПредставлениеНоменклатуры=СтрокаТовары.Номенклатура.ххх_НаименованиеЦенник;

КонецПроцедуры

&Вместо("ЗаполнитьТабличныйДокументУПД")
Процедура КочетовЗаполнитьТабличныйДокументУПД(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, КомплектыПечати)
	Макет 	 = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьОбщихФорм.ПФ_MXL_УниверсальныйПередаточныйДокумент");
	Макет981 = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьОбщихФорм.ПФ_MXL_УниверсальныйПередаточныйДокумент981");
	
	ДанныеПечати        = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	Пока ДанныеПечати.Следующий() Цикл
		
		// Для печати комплектов
		Если КомплектыПечати <> Неопределено И КомплектыПечати.Колонки.Найти("Ссылка") <> Неопределено Тогда
			КомплектПечатиПоСсылке = КомплектыПечати.Найти(ДанныеПечати.Ссылка,"Ссылка");
			Если КомплектПечатиПоСсылке = Неопределено Тогда
				КомплектПечатиПоСсылке = КомплектыПечати[0];
			КонецЕсли;
			Если КомплектПечатиПоСсылке.Экземпляров = 0 Тогда
				Продолжить
			КонецЕсли;
		КонецЕсли;
		
		Запрос=Новый запрос;
		Запрос.УстановитьПараметр("Орг",ДанныеПечати.Ссылка.Организация);
		//запрос.УстановитьПараметр("СистемаНалогообложения",Перечисления.СистемыНалогообложения.Общая); 
		запрос.УстановитьПараметр("СистемаНалогообложения",Перечисления.УдалитьСистемыНалогообложения.Общая);
		Запрос.УстановитьПараметр("ссылка",ДанныеПечати.ссылка);
		Запрос.Текст="ВЫБРАТЬ
		|	СистемыНалогообложенияОрганизацийСрезПоследних.СистемаНалогообложения КАК СистемаНалогообложения
		|ИЗ
		//|	РегистрСведений.СистемыНалогообложенияОрганизаций.СрезПоследних(
		|	РегистрСведений.УдалитьСистемыНалогообложенияОрганизаций.СрезПоследних(
		|			,
		|			Организация = &Орг
		|				И СистемаНалогообложения = &СистемаНалогообложения) КАК СистемыНалогообложенияОрганизацийСрезПоследних";
		Выборка=Запрос.Выполнить().Выбрать();
		
		//Если Выборка.Следующий() и ДанныеПечати.УчитыватьНДС И (ДанныеПечати.СтатусУПД = 2 ИЛИ ДанныеПечати.Номер = Неопределено) Тогда
		Если Выборка.Следующий() и ДанныеПечати.УчитыватьНДС И  ДанныеПечати.Номер = Неопределено Тогда //здесь уже ДанныеПечати.СтатусУПД = 2, но нужна другая ветка
			
			//Запрос=Новый запрос;
			//Запрос.УстановитьПараметр("Орг",ДанныеПечати.Ссылка.Организация);
			//запрос.УстановитьПараметр("СистемаНалогообложения",Перечисления.СистемыНалогообложения.Общая);
			//Запрос.УстановитьПараметр("ссылка",ДанныеПечати.ссылка);
			//Запрос.Текст="ВЫБРАТЬ
			//             |	СистемыНалогообложенияОрганизацийСрезПоследних.СистемаНалогообложения КАК СистемаНалогообложения
			//             |ИЗ
			//             |	РегистрСведений.СистемыНалогообложенияОрганизаций.СрезПоследних(
			//             |			,
			//             |			Организация = &Орг
			//             |				И СистемаНалогообложения = &СистемаНалогообложения) КАК СистемыНалогообложенияОрганизацийСрезПоследних";
			
			//Выборка=Запрос.Выполнить().Выбрать();
			//если выборка.Следующий() тогда
			
			Если ДанныеПечати.Номер = Неопределено Тогда
				Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Для документа %1 не введен %2'"),
				ДанныеПечати.Ссылка,
				ДанныеПечати.ПредставлениеДокумента);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ДанныеПечати.Ссылка,
				,
				"ТекстСчетФактура");
			Иначе
				Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Для документа %1 не заполнены данные предъявленной счет-фактуры поставщика'"),
				ДанныеПечати.Ссылка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ДанныеПечати.Ссылка,
				"ПредъявленСчетФактура");
			КонецЕсли;
		Иначе
			
			Если ДанныеПечати.Дата > '20171001' Тогда 
				Макет = Макет981;
			КонецЕсли;
			
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ПервыйДокумент = Ложь;
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			// Выводим общие реквизиты шапки.
			СведенияОбОрганизации = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата);
			СведенияОКонтрагенте  = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Контрагент,  ДанныеПечати.Дата);
			ЗаполнитьРеквизитыШапкиУПД(ДанныеПечати, СведенияОбОрганизации, СведенияОКонтрагенте, Макет, ТабличныйДокумент);
			
			// Выводим заголовок таблицы
			ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
			ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
			
			НомерСтраницы = 1;
			
			// Инициализация итогов в документе.
			ИтоговыеСуммы = СтруктураИтоговыеСуммы();
			
			// Создаем массив для проверки вывода.
			МассивВыводимыхОбластей = Новый Массив;
			
			// Выводим многострочную часть документа.
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
			ОбластьИтого  = Макет.ПолучитьОбласть("Итого");
			ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
			
			ЗаполнитьРеквизитыПодвалаУПД(ОбластьПодвал, ДанныеПечати, СведенияОбОрганизации, СведенияОКонтрагенте);
			
			СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
			ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
			
			СтрокаТовары = ВыборкаПоДокументам.Выбрать();
			КоличествоСтрок = СтрокаТовары.Количество();
			ТолькоСтавкаБезНДС = Истина;
			НомерСтроки = 0;
			Пока СтрокаТовары.Следующий() Цикл
				
				НомерСтроки = НомерСтроки + 1;
				
				ЗаполнитьРеквизитыСтрокиТовара(СтрокаТовары, ОбластьСтрока, НомерСтроки);
				
				ПроставитьПрочеркиВПустыеПоляСтроки(ОбластьСтрока);
				
				СтруктураПараметров = Новый Структура;
				Если СтрокаТовары.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
					СтруктураПараметров.Вставить("СтавкаНДС", НСтр("ru='без НДС'"));
					СтруктураПараметров.Вставить("СуммаНДС",  НСтр("ru='без НДС'"));
				ИначеЕсли СтрокаТовары.СтавкаНДС = Перечисления.СтавкиНДС.НДС0 Тогда
					СтруктураПараметров.Вставить("СуммаНДС", 0);
					ТолькоСтавкаБезНДС = Ложь;
				Иначе
					ТолькоСтавкаБезНДС = Ложь;
				КонецЕсли;
				ОбластьСтрока.Параметры.Заполнить(СтруктураПараметров);
				
				МассивВыводимыхОбластей.Очистить();
				МассивВыводимыхОбластей.Добавить(ОбластьСтрока);
				
				Если НомерСтроки = КоличествоСтрок Тогда
					МассивВыводимыхОбластей.Добавить(ОбластьИтого);
					МассивВыводимыхОбластей.Добавить(ОбластьПодвал);
				КонецЕсли;
				
				Если НомерСтроки <> 1 И НЕ ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
					НомерСтраницы = НомерСтраницы + 1;
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьСтрока);
				РассчитатьИтоговыеСуммы(ИтоговыеСуммы, СтрокаТовары);
				
			КонецЦикла;
			
			// Выводим итоги по документу
			ДобавитьИтоговыеДанныеПодвала(ИтоговыеСуммы, НомерСтроки);
			
			Если ТолькоСтавкаБезНДС Тогда
				ИтоговыеСуммы.ИтогоСуммаНДС = НСтр("ru='без НДС'");
			КонецЕсли;
			ОбластьИтого.Параметры.Заполнить(ИтоговыеСуммы);
			ПроставитьПрочеркиВПустыеПоляСтроки(ОбластьИтого);
			ТабличныйДокумент.Вывести(ОбластьИтого);
			
			КоличествоСтраниц = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Документ составлен на %1 %2'"),
			НомерСтраницы,
			ОбщегоНазначенияРТКлиентСервер.ФормаМножественногоЧисла(
			НСтр("ru = 'листе'"), НСтр("ru = 'листах'"), НСтр("ru = 'листах'"), НомерСтраницы));
			СтруктураПараметров = Новый Структура("КоличествоСтраниц", КоличествоСтраниц);
			ОбластьПодвал.Параметры.Заполнить(СтруктураПараметров);
			ТабличныйДокумент.Вывести(ОбластьПодвал);
			
			// Выведем нужное количество экземпляров (при печати комплектов).
			Если КомплектыПечати <> Неопределено
				И КомплектыПечати.Колонки.Найти("Ссылка") <> Неопределено
				И КомплектПечатиПоСсылке.Экземпляров > 1 Тогда
				
				ОбластьКопирования = ТабличныйДокумент.ПолучитьОбласть(НомерСтрокиНачало,,ТабличныйДокумент.ВысотаТаблицы);
				Для Итератор = 2 По КомплектПечатиПоСсылке.Экземпляров Цикл
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ТабличныйДокумент.Вывести(ОбластьКопирования);
				КонецЦикла;
				
			КонецЕсли;
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
				
		КонецЕсли;	
	КонецЦикла;

КонецПроцедуры

&Вместо("ЗаполнитьРеквизитыПодвалаУПД")
Процедура КочетовЗаполнитьРеквизитыПодвалаУПД(ОбластьПодвала, ДанныеПечати, СведенияОбОрганизации, СведенияОКонтрагенте)
	ОбластьПодвала.Параметры.Заполнить(ДанныеПечати);
	
	СтруктураПараметров = Новый Структура;
	
	Руководители = ФормированиеПечатныхФормСервер.ОтветственныеЛицаОрганизаций(ДанныеПечати.Организация, ДанныеПечати.Дата);
	
	Если СведенияОбОрганизации.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
		СтруктураПараметров.Вставить("ФИОРуководителя", Руководители.Руководитель);
		СтруктураПараметров.Вставить("ФИОГлавногоБухгалтера", Руководители.ГлавныйБухгалтер);
	Иначе
		СтруктураПараметров.Вставить("ФИОПБОЮЛ", Руководители.Руководитель);
		СтруктураПараметров.Вставить("Свидетельство", СведенияОбОрганизации.Свидетельство);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеПечати.Кладовщик) Тогда
		ФамилияИмяОтчество = ФормированиеПечатныхФормСервер.ФамилияИмяОтчество(ДанныеПечати.Кладовщик, ДанныеПечати.Дата);
		СтруктураПараметров.Вставить("ФИОКладовщика", ФизическиеЛицаКлиентСервер.ФамилияИнициалы(ФамилияИмяОтчество));
	Иначе
		СтруктураПараметров.Вставить("ФИОКладовщика", "");
	КонецЕсли;
	
	ПолнаяДатаДокумента = Формат(ДанныеПечати.Дата, "ДФ=""дд ММММ гггг """"года""""""");
	ДлинаСтроки = СтрДлина(ПолнаяДатаДокумента);
	ПервыйРазделитель = Найти(ПолнаяДатаДокумента, " ");
	ВторойРазделитель = Найти(Прав(ПолнаяДатаДокумента, ДлинаСтроки - ПервыйРазделитель), " ") + ПервыйРазделитель;
	СтруктураПараметров.Вставить("ДатаДокумента",
		"""" + Лев(ПолнаяДатаДокумента, ПервыйРазделитель -1 ) + """ "
		+ Сред(ПолнаяДатаДокумента, ПервыйРазделитель + 1, ВторойРазделитель - ПервыйРазделитель - 1) + " "
		+ Прав(ПолнаяДатаДокумента, ДлинаСтроки - ВторойРазделитель));
	
	КПППоставщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации, "КПП,", Ложь);
	ИННПоставщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ИНН,", Ложь);
	Если ЗначениеЗаполнено(КПППоставщика) Тогда
		ПредставлениеОрганизации = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1, ИНН/КПП %2/%3'"),
			СведенияОбОрганизации.НаименованиеПолноеПоУчредительнымДокументам,
			ИННПоставщика,
			КПППоставщика);
	ИначеЕсли ЗначениеЗаполнено(ИННПоставщика) Тогда
		ПредставлениеОрганизации = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1, ИНН %2'"),
			СведенияОбОрганизации.НаименованиеПолноеПоУчредительнымДокументам,
			ИННПоставщика);
	Иначе
		ПредставлениеОрганизации = СведенияОбОрганизации.НаименованиеПолноеПоУчредительнымДокументам;
	КонецЕсли;
	СтруктураПараметров.Вставить("ПредставлениеОрганизации", ПредставлениеОрганизации);
	
	КПППокупателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОКонтрагенте, "КПП,", Ложь);
	ИННПокупателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОКонтрагенте, "ИНН,", Ложь);
	Если ЗначениеЗаполнено(КПППокупателя) Тогда
		ПредставлениеКонтрагента = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1, ИНН/КПП %2/%3'"),
			ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОКонтрагенте, "ПолноеНаименование", Ложь),
			ИННПокупателя,
			КПППокупателя);
	ИначеЕсли ЗначениеЗаполнено(ИННПокупателя) Тогда
		ПредставлениеКонтрагента = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1, ИНН %2'"),
			ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОКонтрагенте, "ПолноеНаименование", Ложь),
			ИННПокупателя);
	Иначе
		ПредставлениеКонтрагента = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОКонтрагенте, "ПолноеНаименование", Ложь);
	КонецЕсли;
	СтруктураПараметров.Вставить("ПредставлениеКонтрагента", ПредставлениеКонтрагента);
	
	Если ЗначениеЗаполнено(ДанныеПечати.ДоверенностьНомер) И ЗначениеЗаполнено(ДанныеПечати.ДоверенностьДата)
		И (ЗначениеЗаполнено(ДанныеПечати.ДоверенностьВыдана) Или ЗначениеЗаполнено(ДанныеПечати.ДоверенностьЛицо)) Тогда
		
		ТекстОснования = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'по доверенности №%1 от %2, выданной %3 %4'"),
				ДанныеПечати.ДоверенностьНомер,
				Формат(ДанныеПечати.ДоверенностьДата, "ДФ='дд ММММ гггг'"),
				ДанныеПечати.ДоверенностьВыдана,
				ДанныеПечати.ДоверенностьЛицо)
				;
		
			КонецЕсли;
			
			
	Если ТипЗнч(ДанныеПечати.Ссылка)=Тип("ДокументСсылка.ВозвратТоваровПоставщику")Тогда
		СтруктураПараметров.Вставить("Основание", "Возврат брака");
	КонецЕсли;
	
	ОбластьПодвала.Параметры.Заполнить(СтруктураПараметров);

КонецПроцедуры

Функция СтруктураРесурсовДляНДС()
	
	Структура = Новый Структура;
	
	Структура.Вставить("СуммаБезНДС10", 0);
	Структура.Вставить("СуммаНДС10",    0);
	Структура.Вставить("СуммаСНДС10",   0);
	
	Структура.Вставить("СуммаБезНДС20", 0);
	Структура.Вставить("СуммаНДС20",    0);
	Структура.Вставить("СуммаСНДС20",   0);
	
	Структура.Вставить("СуммаБезНДС_СФ", 0);
	Структура.Вставить("СуммаНДС_СФ",    0);
	Структура.Вставить("СуммаСНДС_СФ",   0);	
	
	Возврат Структура;
	
КонецФункции

&Вместо("ЗаполнитьРеквизитыШапкиУПД")
Процедура КочетовЗаполнитьРеквизитыШапкиУПД(ДанныеПечати, СведенияОПоставщике, СведенияОПокупателе, Макет, ТабличныйДокумент)
	
	СведенияОГрузоотправителе = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузоотправитель, ДанныеПечати.Дата); 
	
	СведенияОГрузополучателе = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузополучатель, ДанныеПечати.Дата);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
	Если ДанныеПечати.Контрагент.ххх_НовыйФорматВозвратов Тогда
		
		ЕстьТара=Ложь;
		ЕстьНЕТара=Ложь;

		Для каждого стр из ДанныеПечати.ссылка.Товары  цикл
			
			Тара=Справочники.ххх_Справочник.ВидНоменклатурыТара.Значение;
			Если стр.Номенклатура.ВидНоменклатуры=тара Тогда
				ЕстьТара=истина;
			Иначе
				ЕстьНЕТара=истина;
			КонецЕсли;
			
		КонецЦикла;
		
		
		Если ЕстьТара Тогда
			ОбластьМакета.Параметры.СтатусУПД=1;
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыШапки = Новый Структура;
	
	ПараметрыШапки.Вставить("Номер",
	ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеПечати.Номер, Ложь, Ложь));
	Если Лев(ПараметрыШапки.Номер, 1) = "И" Тогда
		ПараметрыШапки.Номер = Прав(ПараметрыШапки.Номер, СтрДлина(ПараметрыШапки.Номер)-1);
	КонецЕсли;
	ПараметрыШапки.Вставить("Дата", Формат(ДанныеПечати.Дата, "ДФ='дд ММММ гггг'")+ " г.");
	
	ПараметрыШапки.Вставить("НомерИсправления", ?(ДанныеПечати.Исправление, ДанныеПечати.НомерИсправления, "--"));
	ПараметрыШапки.Вставить("ДатаИсправления",
		?(ДанныеПечати.Исправление, Формат(ДанныеПечати.ДатаИсправления, "ДФ='дд ММММ гггг'")+ " г.", "--"));
	
	// Выводим данные о поставщике.
	ПараметрыШапки.Вставить("ПредставлениеПоставщика", "Продавец: " + СведенияОПоставщике.ПолноеНаименование);
	ПараметрыШапки.Вставить("АдресПоставщика", "Адрес: "
		+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "ЮридическийАдрес"));
	
	КПП = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "КПП,", Ложь);
	ПараметрыШапки.Вставить("ИННПоставщика", "ИНН/КПП продавца: " 
		+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "ИНН", Ложь)
		+ ?(Не ПустаяСтрока(КПП), "/" + КПП, ""));
	
	// Выводим данные грузоотправителя.
	ПредставлениеГрузоотправителя = "Грузоотправитель и его адрес: ";
	Если ДанныеПечати.ТолькоУслуги ИЛИ ДанныеПечати.Грузоотправитель = Неопределено Тогда
		ПредставлениеГрузоотправителя = ПредставлениеГрузоотправителя + "--";
	ИначеЕсли ДанныеПечати.Организация = ДанныеПечати.Грузоотправитель Тогда
		ПредставлениеГрузоотправителя = ПредставлениеГрузоотправителя + "он же";
	Иначе
		ПредставлениеГрузоотправителя = ПредставлениеГрузоотправителя 
			+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузоотправителе, "ПолноеНаименование,ФактическийАдрес");
	КонецЕсли;
	ПараметрыШапки.Вставить("ПредставлениеГрузоотправителя", ПредставлениеГрузоотправителя);
	
	// Выводим данные грузополучателя и покупателя.
	ПредставлениеГрузополучателя = "Грузополучатель и его адрес: ";
	Если ДанныеПечати.ТолькоУслуги ИЛИ ДанныеПечати.Грузополучатель = Неопределено Тогда
		ПредставлениеГрузополучателя = ПредставлениеГрузополучателя + "--";
	Иначе
		Если Не ПустаяСтрока(ДанныеПечати.АдресДоставки) Тогда
			ПредставлениеГрузополучателя = ПредставлениеГрузополучателя
				+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузополучателе, "ПолноеНаименование", Ложь)
				+ ", " + СокрЛП(ДанныеПечати.АдресДоставки);
		Иначе
			ПредставлениеГрузополучателя = ПредставлениеГрузополучателя
				+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(
					СведенияОГрузополучателе,
					"ПолноеНаименование,ФактическийАдрес",
					Ложь);
		КонецЕсли;
	КонецЕсли;
	ПараметрыШапки.Вставить("ПредставлениеГрузополучателя", ПредставлениеГрузополучателя);
	
	Если Не ПустаяСтрока(ДанныеПечати.СтрокаПоДокументу) Тогда
		ПараметрыШапки.Вставить("ПоДокументу", "К платежно-расчетному документу № " + ДанныеПечати.СтрокаПоДокументу);
	Иначе
		ПараметрыШапки.Вставить("ПоДокументу", "К платежно-расчетному документу № -- от --");
	КонецЕсли;
	
	ПараметрыШапки.Вставить("ПредставлениеПокупателя", "Покупатель: " 
		+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование", Ложь));
	ПараметрыШапки.Вставить("АдресПокупателя", "Адрес: "
		+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, "ЮридическийАдрес", Ложь));
	
	КПП = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, "КПП,", Ложь);
	ПараметрыШапки.Вставить("ИННПокупателя", "ИНН/КПП покупателя: "
		+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, "ИНН,", Ложь)
		+ ?(Не ПустаяСтрока(КПП), "/" + КПП, ""));
	
	ПараметрыШапки.Вставить("Валюта", НСтр("ru='Валюта: наименование, код Российский рубль, 643'"));
	
	ОбластьМакета.Параметры.Заполнить(ПараметрыШапки);
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	Если ДанныеПечати.Дата > Дата('20171001') Тогда
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка625");
		ОбластьМакета.Параметры.ИдентификаторГосударственногоКонтракта = НСтр("ru = 'Идентификатор государственного контракта, договора (соглашения) (при наличии)'");;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
	КонецЕсли;
	
КонецПроцедуры