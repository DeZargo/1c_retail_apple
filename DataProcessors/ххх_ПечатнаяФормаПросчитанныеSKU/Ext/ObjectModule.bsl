
процедура сформировать()экспорт
	
	Запрос=Новый запрос;
	запрос.УстановитьПараметр("ДатаНачала",Период.ДатаНачала);
	запрос.УстановитьПараметр("ДатаКонца",Период.ДатаОкончания);
	запрос.УстановитьПараметр("ВидАдреса",Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации);
	//запрос.УстановитьПараметр("РасМат",Справочники.ххх_Справочник.ПапкаРасходныеМатериалы.Значение);
	Запрос.Текст="ВЫБРАТЬ
	             |	ЕСТЬNULL(ОприходованиеТоваров.СуммаДокумента, 0) КАК Излишки,
	             |	ЕСТЬNULL(СписаниеТоваров.СуммаДокумента, 0) КАК Недостачи,
	             |	ЕСТЬNULL(ОприходованиеТоваров.СуммаДокумента, 0) - ЕСТЬNULL(СписаниеТоваров.СуммаДокумента, 0) КАК Итого,
	             |	ЕСТЬNULL(СписаниеТоваров.ДокументОснование.НастройкиКомпоновкиДанных, ОприходованиеТоваров.ДокументОснование.НастройкиКомпоновкиДанных) КАК НастройкиКомпоновкиДанных,
	             |	ЕСТЬNULL(СписаниеТоваров.ДокументОснование.ПравилаОтбораТоваровИнвентаризации.ХранилищеСхемыКомпоновкиДанных, ОприходованиеТоваров.ДокументОснование.ПравилаОтбораТоваровИнвентаризации.ХранилищеСхемыКомпоновкиДанных) КАК скд,
	             |	ЕСТЬNULL(ОприходованиеТоваров.ДокументОснование, СписаниеТоваров.ДокументОснование) КАК ДокОсн
	             |ПОМЕСТИТЬ йцу
	             |ИЗ
	             |	Документ.ОприходованиеТоваров КАК ОприходованиеТоваров
	             |		ПОЛНОЕ СОЕДИНЕНИЕ Документ.СписаниеТоваров КАК СписаниеТоваров
	             |		ПО ОприходованиеТоваров.ДокументОснование = СписаниеТоваров.ДокументОснование
	             |			И (ОприходованиеТоваров.Проведен)
	             |			И (СписаниеТоваров.Проведен)
	             |ГДЕ
	             |	(ОприходованиеТоваров.ДокументОснование.Проведен
	             |			ИЛИ СписаниеТоваров.ДокументОснование.Проведен)
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	йцу.Излишки КАК Излишки,
	             |	йцу.Недостачи КАК Недостачи,
	             |	йцу.Итого КАК Итого,
	             |	йцу.НастройкиКомпоновкиДанных КАК НастройкиКомпоновкиДанных,
	             |	йцу.скд КАК скд,
	             |	ПересчетТоваров.ххх_ИдЦентр КАК Номер,
	             |	ПересчетТоваров.Дата КАК Дата,
	             |	ПересчетТоваров.Организация КАК Организация,
	             |	ОрганизацииКонтактнаяИнформация.Представление КАК Адрес,
	             |	""Итого"" КАК Итоги
	             |ИЗ
	             |	йцу КАК йцу
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПересчетТоваров КАК ПересчетТоваров
	             |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
	             |			ПО (ОрганизацииКонтактнаяИнформация.Ссылка = ПересчетТоваров.Организация)
	             |		ПО йцу.ДокОсн = ПересчетТоваров.ДокументОснование
	             |			И (ПересчетТоваров.Проведен)
	             |ГДЕ
	             |	ПересчетТоваров.Дата МЕЖДУ &ДатаНачала И &ДатаКонца
	             |	И ОрганизацииКонтактнаяИнформация.Вид.Ссылка = &ВидАдреса
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	Организация,
	             |	Дата
	             |ИТОГИ
	             |	СУММА(Излишки),
	             |	СУММА(Недостачи),
	             |	СУММА(Итого),
	             |	МАКСИМУМ(Адрес)
	             |ПО
	             |	ОБЩИЕ,
	             |	Организация";
	//Выгрузка=запрос.Выполнить().Выгрузить();
	ВыборкаИтоги=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	//Для каждого стр из Выгрузка Цикл
	//	стр.НастройкиКомпоновкиДанных=ххх_Сервер.ОписаниеПараметровНастройки(стр.скд, стр.НастройкиКомпоновкиДанных);
	//КонецЦикла
	Если ВыборкаИтоги.Следующий() Тогда
		макет=ЭтотОбъект.ПолучитьМакет("Макет");
		ОбщиеИтоги=макет.ПолучитьОбласть("ОбщиеИтоги");
		ОбщиеИтоги.Параметры.превышение = ВыборкаИтоги.Излишки;
		ОбщиеИтоги.Параметры.недостача  = ВыборкаИтоги.Недостачи;
		ОбщиеИтоги.Параметры.итого      = ВыборкаИтоги.Итого;
	Иначе
		Сообщить("В этом периоде не было ревизий!");
		возврат;
	КОнецЕсли;
	
	ВыборкаОрги=ВыборкаИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	
	РМпревышение=0;
	РМнедостача=0;
	РМитого=0;
	
	РМпревышениеОрг=0;
	РМнедостачаОрг=0;
	РМитогоОрг=0;
	
	Пока ВыборкаОрги.Следующий() Цикл
		Шапка=макет.ПолучитьОбласть("Шапка");
		Шапка.параметры.Организация=ВыборкаОрги.Организация;
		Шапка.параметры.адрес=ВыборкаОрги.Адрес;
		Шапка.параметры.дата=Период;
		//Если Год(Период.ДатаНачала)=Год(Период.ДатаОкончания) Тогда
		//	Шапка.параметры.год=Год(Период.ДатаНачала);
		//Иначе
		//	Шапка.параметры.год=Строка(Год(Период.ДатаНачала))+" - "+Строка(Год(Период.ДатаОкончания));
		//КонецЕсли;
		ТабличныйДокумент.Вывести(Шапка);
		
		ШапкаТаблицы=макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ШапкаТаблицы);
		
		ВыборкаНомка=ВыборкаОрги.Выбрать();
		//РМпревышениеОрг=0;
		//РМнедостачаОрг=0;
		//РМитогоОрг=0;
		Пока ВыборкаНомка.Следующий() Цикл
			отдел=ххх_Сервер.ОписаниеПараметровНастройки(ВыборкаНомка.скд, ВыборкаНомка.НастройкиКомпоновкиДанных);
			Если отдел="Расходные материалы " тогда //хардкод.......писяль
				РМпревышение=РМпревышение+ВыборкаНомка.Излишки;
				РМнедостача=РМнедостача+ВыборкаНомка.Недостачи;
				РМитого=РМитого+ВыборкаНомка.итого;
				
				РМпревышениеОрг=РМпревышениеОрг+ВыборкаНомка.Излишки;
				РМнедостачаОрг=РМнедостачаОрг+ВыборкаНомка.Недостачи;
				РМитогоОрг=РМитогоОрг+ВыборкаНомка.итого;
				продолжить;
			КонецЕсли;
			Строка=макет.ПолучитьОбласть("Строка");
			Строка.параметры.ДатаРевизии=Формат(ВыборкаНомка.Дата,"ДФ=dd.MM.yyyy");
			Строка.параметры.Номерревизии=ВыборкаНомка.Номер;
			Строка.параметры.отдел=отдел;
			Строка.параметры.превышение=ВыборкаНомка.Излишки;
			Строка.параметры.недостача=ВыборкаНомка.Недостачи;
			Строка.параметры.итого=ВыборкаНомка.итого;
			ТабличныйДокумент.Вывести(Строка);
		КонецЦикла;
		СтрокаИтого=макет.ПолучитьОбласть("ОбщиеИтоги");
		СтрокаИтого.параметры.превышение=ВыборкаОрги.Излишки-РМпревышениеОрг;
		СтрокаИтого.параметры.недостача=ВыборкаОрги.Недостачи-РМнедостачаОрг;
		СтрокаИтого.параметры.итого=ВыборкаОрги.итого-РМитогоОрг;
		ТабличныйДокумент.Вывести(СтрокаИтого);
		
		Подвал=макет.ПолучитьОбласть("Подвал");
	
		ТабличныйДокумент.Вывести(Подвал);

		РМпревышениеОрг=0;
		РМнедостачаОрг=0;
		РМитогоОрг=0;


	КонецЦикла;
	
	ОбщиеИтоги.Параметры.превышение=ОбщиеИтоги.Параметры.превышение-РМпревышение;
	ОбщиеИтоги.Параметры.недостача=ОбщиеИтоги.Параметры.недостача-РМнедостача;
	ОбщиеИтоги.Параметры.итого=ОбщиеИтоги.Параметры.итого-РМитого;
	
	РасхМат=Макет.ПолучитьОбласть("РасхМат");
	РасхМат.Параметры.превышение=РМпревышение;
	РасхМат.Параметры.недостача=РМнедостача;
	РасхМат.Параметры.итого=РМитого;
	
	ШапкаИтогов=Макет.ПолучитьОбласть("ШапкаИтогов");
	
	ТабличныйДокумент.Вывести(ШапкаИтогов);
	
	ТабличныйДокумент.Вывести(РасхМат);

	
	ТабличныйДокумент.Вывести(ОбщиеИтоги);
	
КонецПРоцедуры
	





















