
&НаКлиенте
Процедура ВыгрузитьОстаткиВИнтернетМагазин(Команда)
	КочетовОбменСИнтернетМагазином.ВыгрузитьХМЛ("ostInetshop");
КонецПроцедуры

&НаКлиенте
Процедура ПолнаяПрогрузкаИнтернетМагазина(Команда)
	КочетовОбменСИнтернетМагазином.ВыгрузитьХМЛ("Inetshop");
КонецПроцедуры

&НаКлиенте
Процедура ПрогрузитьИнтернетКассы(Команда)
	КочетовОбменСИнтернетМагазином.ВыгрузитьХМЛ("Inetshop");
	ПрогрузитьИнтернетКассыСервер();
КонецПроцедуры


Процедура ПрогрузитьИнтернетКассыСервер()
	//ЗАпрос=новый Запрос;
	//Запрос.Текст="ВЫБРАТЬ
	//             |	ПланОбменаСОборудованием.Ссылка КАК Ссылка
	//             |ИЗ
	//             |	ПланОбмена.ПланОбменаСОборудованием КАК ПланОбменаСОборудованием
	//             |ГДЕ
	//             |	ПланОбменаСОборудованием.Оборудование.Магазин.ххх_ИнтернетМагазин";
	//Выборка=Запрос.Выполнить().Выбрать();
	//
	//ЗАпрос=Новый запрос;
	//Запрос.Текст="ВЫБРАТЬ
	//             |	Номенклатура.Ссылка КАК Ссылка
	//             |ИЗ
	//             |	Справочник.Номенклатура КАК Номенклатура
	//             |ГДЕ
	//             |	Номенклатура.ЭтоГруппа";
	//Пока выборка.Следующий() Цикл
	//	ВидыЦен=Новый массив;
	//	ВидыЦен.Добавить(Справочники.ххх_Справочник.РозничнаяЦена.Значение);
	//	ххх_Сервер.ОтправитьЦеныНаКассы(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ссылка"), видыЦен, Выборка.ссылка)
	//КонецЦикла;
	//
	//
	ВидыЦен=Новый массив;
	ВидыЦен.Добавить(Справочники.ххх_Справочник.РозничнаяЦена.Значение);
	//Запрос=новый запрос;
	//Запрос.УстановитьПараметр("видыЦен",видыЦен);
	//Запрос.УстановитьПараметр("ЭтотУзел",ПланыОбмена.ПланОбменаСОборудованием.ЭтотУзел());
	//Запрос.Текст="ВЫБРАТЬ
	//             |	УстановкаЦенНоменклатурыТовары.Номенклатура КАК Номенклатура,
	//             |	УстановкаЦенНоменклатурыИзменения.Узел КАК Узел
	//             |ИЗ
	//             |	Документ.УстановкаЦенНоменклатуры.Изменения КАК УстановкаЦенНоменклатурыИзменения
	//             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УстановкаЦенНоменклатуры.Товары КАК УстановкаЦенНоменклатурыТовары
	//             |		ПО УстановкаЦенНоменклатурыИзменения.Ссылка = УстановкаЦенНоменклатурыТовары.Ссылка
	//             |ГДЕ
	//             |	УстановкаЦенНоменклатурыИзменения.Ссылка.Проведен
	//             |	И УстановкаЦенНоменклатурыИзменения.Узел <> &ЭтотУзел
	//             |	И УстановкаЦенНоменклатурыИзменения.Узел.Оборудование.Ссылка ССЫЛКА Справочник.КассыККМ
	//             |
	//             |СГРУППИРОВАТЬ ПО
	//             |	УстановкаЦенНоменклатурыТовары.Номенклатура,
	//             |	УстановкаЦенНоменклатурыИзменения.Узел
	//             |
	//             |ОБЪЕДИНИТЬ ВСЕ
	//             |
	//             |ВЫБРАТЬ
	//             |	ШтрихкодыИзменения.Владелец,
	//             |	ШтрихкодыИзменения.Узел
	//             |ИЗ
	//             |	РегистрСведений.Штрихкоды.Изменения КАК ШтрихкодыИзменения
	//             |ГДЕ
	//             |	ШтрихкодыИзменения.Узел <> &ЭтотУзел
	//             |	И ШтрихкодыИзменения.Штрихкод <> """"
	//             |	И НЕ ШтрихкодыИзменения.Владелец ЕСТЬ NULL
	//             |	И ШтрихкодыИзменения.Узел.Оборудование.Ссылка ССЫЛКА Справочник.КассыККМ
	//             |
	//             |СГРУППИРОВАТЬ ПО
	//             |	ШтрихкодыИзменения.Владелец,
	//             |	ШтрихкодыИзменения.Узел
	//             |
	//             |ОБЪЕДИНИТЬ ВСЕ
	//             |
	//             |ВЫБРАТЬ
	//             |	ххх_КодыНоменклатурыВесыКассыТекущееСостояниеИзменения.Номенклатура,
	//             |	ххх_КодыНоменклатурыВесыКассыТекущееСостояниеИзменения.Узел
	//             |ИЗ
	//             |	РегистрСведений.ххх_КодыНоменклатурыВесыКассыТекущееСостояние.Изменения КАК ххх_КодыНоменклатурыВесыКассыТекущееСостояниеИзменения
	//             |ГДЕ
	//             |	ххх_КодыНоменклатурыВесыКассыТекущееСостояниеИзменения.Узел <> &ЭтотУзел
	//             |	И ххх_КодыНоменклатурыВесыКассыТекущееСостояниеИзменения.Узел.Оборудование.Ссылка ССЫЛКА Справочник.КассыККМ
	//             |
	//             |СГРУППИРОВАТЬ ПО
	//             |	ххх_КодыНоменклатурыВесыКассыТекущееСостояниеИзменения.Узел,
	//             |	ххх_КодыНоменклатурыВесыКассыТекущееСостояниеИзменения.Номенклатура
	//             |
	//             |ОБЪЕДИНИТЬ ВСЕ
	//             |
	//             |ВЫБРАТЬ
	//             |	НоменклатураИзменения.Ссылка,
	//             |	НоменклатураИзменения.Узел
	//             |ИЗ
	//             |	Справочник.Номенклатура.Изменения КАК НоменклатураИзменения
	//             |ГДЕ
	//             |	НоменклатураИзменения.Узел <> &ЭтотУзел
	//             |	И НоменклатураИзменения.Узел.Оборудование.Ссылка ССЫЛКА Справочник.КассыККМ
	//             |
	//             |СГРУППИРОВАТЬ ПО
	//             |	НоменклатураИзменения.Ссылка,
	//             |	НоменклатураИзменения.Узел";
	//выгрузка=Запрос.Выполнить().Выгрузить();
	//номка=Выгрузка.Скопировать();
	//номка.свернуть("Номенклатура");
	//номка=номка.ВыгрузитьКолонку("Номенклатура");
	//выгрузка.Свернуть("Узел");
	//Узлы=выгрузка.ВыгрузитьКолонку("узел");
	
	
	Запрос=Новый запрос;
	запрос.Текст="ВЫБРАТЬ
	             |	ПланОбменаСОборудованием.Ссылка КАК узел
	             |ИЗ
	             |	ПланОбмена.ПланОбменаСОборудованием КАК ПланОбменаСОборудованием
	             |ГДЕ
	             |	ПланОбменаСОборудованием.Оборудование.Магазин.ххх_ИнтернетМагазин";
	выборка=Запрос.Выполнить().Выбрать();
	
	//узел=выборка.ссылка;
	
	
	
	Запрос=Новый запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	Номенклатура.Ссылка КАК Ссылка
	             |ИЗ
	             |	Справочник.Номенклатура КАК Номенклатура";
	номка=Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ссылка");
	
	МассивЗаданий = Новый Массив; 
	Пока выборка.Следующий() Цикл
		Если ТипЗнч(выборка.Узел.Оборудование)=Тип("СправочникСсылка.КассыККМ") и выборка.Узел.Оборудование.Магазин.ххх_ИнтернетМагазин Тогда			
		    НаборПараметров = Новый Массив; 
			НаборПараметров.Добавить(номка); 
			НаборПараметров.Добавить(ВидыЦен);
	//		НаборПараметров.Добавить(Узел); 
			//Задание = ФоновыеЗадания.Выполнить("ххх_Сервер.ОтправитьЦеныНаКассы", НаборПараметров);
			//МассивЗаданий.Добавить(Задание);
			ххх_РегламентныеЗадания.ОтправитьЦеныНаКассыХМЛ(номка,ВидыЦен,выборка.узел);
		//Иначе 
			//Оборудования=Новый массив;
			//Оборудования.Добавить(Узел.оборудование);
			//
			//НаборПараметров = Новый Массив; 
			//НаборПараметров.Добавить(номка);  
			//НаборПараметров.Добавить(ВидыЦен);
			//НаборПараметров.Добавить(Узел);
			//НаборПараметров.Добавить(Оборудования);
			//Задание = ФоновыеЗадания.Выполнить("ххх_Сервер.ОтправитьЦеныНаВесы", НаборПараметров);
			//МассивЗаданий.Добавить(Задание);

			//ххх_Сервер.ОтправитьЦеныНаВесы(номка,ВидыЦен,Узел,Оборудования);	
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьОстаткиТоваровБезЦен(Команда)
	КочетовОбменСИнтернетМагазином.ВыгрузитьХМЛ("Inetshopnoprice");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРеализациюПоступление(Команда)
	СоздатьРеализациюПоступлениеНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СоздатьРеализациюПоступлениеНаСервере()
	
	Реал=Документы.РеализацияТоваров.СоздатьДокумент();
	Реал.Дата=текущаяДата();
	Реал.Контрагент=Справочники.ххх_Справочник.КонтрагентИнтернетМагазин.Значение;
	Реал.Магазин=Справочники.ххх_Справочник.Магазин.Значение;
	Реал.Организация=Справочники.ххх_Справочник.ОрганизацияТорговлиПивом.Значение;
	Реал.ххх_АналитикаХозОперации=Справочники.ххх_Справочник.АналитикаХозОперРеализацияНаИнтернетМагазин.Значение;
	Реал.Склад=Справочники.ххх_Справочник.Магазин.Значение.СкладПродажи;
	Реал.УчитыватьНДС=Истина;
	Реал.ЦенаВключаетНДС=Истина;
	Реал.Ответственный=ПараметрыСеанса.ТекущийПользователь;
	
	Запрос=Новый запрос;
	Запрос.УстановитьПараметр("ВидЦены",Справочники.ххх_Справочник.ЗакупочнаяЦена.Значение);
	Запрос.Текст="ВЫБРАТЬ
	             |	ххх_ПродажиПоИнтернетМагазинуОстатки.Номенклатура КАК Номенклатура,
	             |	ххх_ПродажиПоИнтернетМагазинуОстатки.КоличествоОстаток КАК КоличествоОстаток,
	             |	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
	             |ИЗ
	             |	РегистрНакопления.ххх_ПродажиПоИнтернетМагазину.Остатки КАК ххх_ПродажиПоИнтернетМагазинуОстатки
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, ВидЦены = &ВидЦены) КАК ЦеныНоменклатурыСрезПоследних
	             |		ПО ххх_ПродажиПоИнтернетМагазинуОстатки.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	             |ГДЕ
	             |	ххх_ПродажиПоИнтернетМагазинуОстатки.КоличествоОстаток > 0";
	Выборка=запрос.Выполнить().Выбрать();	
	
	Пока выборка.Следующий() Цикл
		
		стр=Реал.Товары.Добавить();
		стр.Номенклатура=выборка.номенклатура;
		стр.Количество=выборка.КоличествоОстаток;
		стр.КоличествоУпаковок=выборка.КоличествоОстаток;
		стр.Цена=выборка.цена*0.07+выборка.цена;
		стр.СтавкаНДС=выборка.номенклатура.ставкаНДС;
		стр.Сумма=стр.КоличествоУпаковок*стр.Цена;
		
		Если стр.Номенклатура.ставкаНДС=Перечисления.СтавкиНДС.НДС10 Тогда
			стр.СуммаНДС=стр.сумма*10/110;	
		ИначеЕсли стр.Номенклатура.ставкаНДС=Перечисления.СтавкиНДС.НДС18 Тогда
			стр.СуммаНДС=стр.сумма*18/118;
		ИначеЕсли стр.Номенклатура.ставкаНДС=Перечисления.СтавкиНДС.НДС20 Тогда
			стр.СуммаНДС=стр.сумма*20/120;
		КонецЕсли;
		
	КонецЦикла;
	
	реал.Записать();
	
	Поступ=Документы.ПоступлениеТоваров.СоздатьДокумент();
	Поступ.Дата=ТекущаяДата();
	Поступ.Организация=Справочники.ххх_Справочник.ОрганизацияИнтернетМагазин.Значение;
	Поступ.Контрагент=Справочники.ххх_Справочник.КонтрагентМагазин.Значение;
	Поступ.Склад=Справочники.ххх_Справочник.Магазин.Значение.СкладПоступления;
	Поступ.ДатаВходящегоДокумента=Реал.Дата;
	Поступ.НомерВходящегоДокумента=Реал.Номер;
	Поступ.Магазин=Справочники.ххх_Справочник.ИнтернетМагазин.Значение;
	Поступ.ЦенаВключаетНДС=истина;
	Поступ.УчитыватьНДС=Истина;
	Поступ.Ответственный=ПараметрыСеанса.ТекущийПользователь;
	Поступ.Товары.Загрузить(реал.Товары.Выгрузить());
	
	поступ.Записать();
КонецПроцедуры


































