
#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ПодключитьОборудованиеЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Если Не РезультатВыполнения.Результат Тогда
		ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , РезультатВыполнения.ОписаниеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	НадписьОтсканируйте = НСтр("ru = 'Отсканируйте код акцизной марки'");
	ИспользоватьПодключаемоеОборудование = ЗначениеНастроекВызовСервера.ИспользоватьПодключаемоеОборудование();
	
	Если Параметры.Свойство("ТекущийКлючСвязи") Тогда
		ТекущийКлючСвязи = Параметры.ТекущийКлючСвязи;
	КонецЕсли;
	
	Если Параметры.Свойство("ПредставлениеНоменклатуры") Тогда
		ПредставлениеНоменклатуры = Параметры.ПредставлениеНоменклатуры;
		ЭтотОбъект.Заголовок = ПредставлениеНоменклатуры;
	КонецЕсли;
	
	Если Параметры.Свойство("Номенклатура") Тогда
		Номенклатура = Параметры.Номенклатура
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ПодключаемоеОборудование
	ПоддерживаемыеТипыВО = Новый Массив();
	ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
	ОповещенияПриПодключении = Новый ОписаниеОповещения("ПодключитьОборудованиеЗавершение", ЭтотОбъект);  
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПоТипу(ОповещенияПриПодключении, ЭтотОбъект, ПоддерживаемыеТипыВО);
	// Конец ПодключаемоеОборудование
	
	ЭтотОбъект.ТекущийЭлемент = Элементы.ДекорацияКартинка;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// ПодключаемоеОборудование
	ПоддерживаемыеТипыВО = Новый Массив();
	ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПоТипу(, ЭтотОбъект, ПоддерживаемыеТипыВО);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование"
		И ВводДоступен() 
		И Не ТолькоПросмотр Тогда
		Если ИмяСобытия = "ScanData" Тогда
			Если Параметр[1] = Неопределено Тогда
				КодАкцизнойМарки = Параметр[0];
			Иначе
				КодАкцизнойМарки = Параметр[1][1];
			КонецЕсли;
			
			ПодключитьОбработчикОжидания("ЗакрытьФормуПриСканировании",0.1, Истина);
			
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование

КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если ВводДоступен() Тогда
		
		ОписаниеСобытия = Новый Структура();
		ОписаниеОшибки  = "";
		ОписаниеСобытия.Вставить("Источник", Источник);
		ОписаниеСобытия.Вставить("Событие",  Событие);
		ОписаниеСобытия.Вставить("Данные",   Данные);
		
		Результат = МенеджерОборудованияКлиент.ПолучитьСобытиеОтУстройства(ОписаниеСобытия, ОписаниеОшибки);
		Если Результат = Неопределено Тогда 
			ЗаголовокСообщения = НСтр("ru = 'При обработке внешнего события от устройства произошла ошибка:'");
			ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМКУправляемой(ЗаголовокСообщения, ОписаниеОшибки);
		Иначе
			ОбработкаОповещения(Результат.ИмяСобытия, Результат.Параметр, Результат.Источник);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияКартинкаНажатие(Элемент)
	Закрыть()
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗакрытьФормуПриСканировании()
	
	Если НЕ ШтрихкодСоответствуетШаблону(КодАкцизнойМарки) Тогда
		
		ЗаголовокИнформации = НСтр("ru = 'Штрихкод не соответствует формату.'");
		ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМКУправляемой(ЗаголовокИнформации);
		Возврат;
	КонецЕсли;
	
	Если ШтрихкодМаркиПрисутствуетВЧеке() Тогда
		ЗаголовокИнформации = НСтр("ru = 'Штрихкод марки уже присутствует в чеке.'");
		ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМКУправляемой(ЗаголовокИнформации);
		Возврат;
	КонецЕсли;
	
	Закрыть(КодАкцизнойМарки);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ШтрихкодСоответствуетШаблону(Штрихкод)
	
	ТекстОшибки = "";
	ПространствоИмен = Перечисления.ВидыДокументовЕГАИС.ПространствоИмен(Перечисления.ВидыДокументовЕГАИС.ЧекККМ, Неопределено, ТекстОшибки);
	
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		Возврат Ложь;
	Иначе
		ТипШтрихкодМарки = ФабрикаXDTO.Тип(ПространствоИмен, "BK");
		Попытка
			ТипШтрихкодМарки.Проверить(Штрихкод);
		Исключение
			Возврат Ложь;
		КонецПопытки;
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

&НаКлиенте
Функция ШтрихкодМаркиПрисутствуетВЧеке()
	
	МассивАкцмзныхМарок = ВладелецФормы.Объект.АкцизныеМарки.НайтиСтроки(Новый Структура("КодАкцизнойМарки", КодАкцизнойМарки));
	
	Если МассивАкцмзныхМарок.Количество() > 0 Тогда
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("КодАкцизнойМарки", КодАкцизнойМарки);
		СтруктураПоиска.Вставить("КлючСвязи"       , ТекущийКлючСвязи);
		
		МассивАкцизныхМарокПоТекущемуКлючуСвязи = ВладелецФормы.Объект.АкцизныеМарки.НайтиСтроки(СтруктураПоиска);
		
		Если МассивАкцмзныхМарок.Количество() = МассивАкцизныхМарокПоТекущемуКлючуСвязи.Количество() Тогда
			Возврат Ложь
		Иначе
			Возврат Истина
		КонецЕсли;
	Иначе 
		Возврат Ложь
	КонецЕсли;
	
КонецФункции // ШтрихкодМаркиПрисутствуетВЧеке()

#КонецОбласти
