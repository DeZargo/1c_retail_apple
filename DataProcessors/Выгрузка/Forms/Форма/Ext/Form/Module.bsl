
&НаКлиенте
Процедура ВыгрузитьБонусы()
	
	//Если не СкорректированыОстаткиЕГАИС() Тогда
	//	Сообщить("Сперва скорректируйте остатки ЕГАИС!");
	//	возврат;
	//КонецЕсли;
	Если не РазрешеноВыгружать тогда
		возврат
	КонецЕсли;

	ВыгрузитьЧеки();
	ВыгрузитьБонусыНаСервере();
	
	ВыгрузитьПоступленияЛонг();
	ВыгрузитьРеализации();
	ВыгрузитьСписания();
	ВыгрузитьВозвраты();
	
	ОтправитьВПочтуБонусыНаСервере();

	выгрузкаВОфисХМЛ(неопределено);
	
КонецПроцедуры

Процедура ОтправитьВПочтуБонусыНаСервере()
	
	
	Запрос=Новый запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	Магазины.Ссылка КАК Магаз
	             |ИЗ
	             |	Справочник.Магазины КАК Магазины";
	Выборка=Запрос.Выполнить().Выбрать();
	
	Пока выборка.Следующий() Цикл
		
		Если выборка.Магаз.ххх_ИнтернетМагазин Тогда
			УдалитьФайлы("C:\БонусыИнетМагазин\Bonus.zip");
			УдалитьФайлы("C:\БонусыИнетМагазин\cheki.zip");

			Зап=Новый ЗаписьZipФайла("C:\БонусыИнетМагазин\Bonus.zip");

			Зап.Добавить("C:\БонусыИнетМагазин\bonus.txt");
			Зап.Добавить("C:\БонусыИнетМагазин\cheki.txt");
			Зап.Записать();
				
			Профиль = Новый ИнтернетПочтовыйПрофиль;
			Профиль.АдресСервераSMTP = выборка.Магаз.ххх_АдресСервераSMTP;
			Профиль.ПортIMAP = выборка.Магаз.ххх_ПортIMAP; 	
			Профиль.ПользовательSMTP = выборка.Магаз.ххх_МагазинскиаяПочта;	
			Профиль.ПарольSMTP = выборка.Магаз.ххх_ПарольSMTP;
			
			Сообщение = Новый ИнтернетПочтовоеСообщение ;
			Сообщение.Вложения.Добавить("C:\БонусыИнетМагазин\Bonus.zip");
			Сообщение.Получатели.Добавить(выборка.Магаз.ххх_ПочтаДляОтправвкиБонусов);
			Сообщение.Тема ="Бонусы "+ЗаголовокПисьмаИМ;
			Сообщение.ИмяОтправителя="МрРобот";
			Сообщение.Отправитель=выборка.Магаз.ххх_МагазинскиаяПочта;
			
		    Почта = Новый ИнтернетПочта();
			Почта.Подключиться(Профиль);
			Почта.Послать(Сообщение);
			Почта.Отключиться();
		Иначе
			УдалитьФайлы("C:\Бонусы\Bonus.zip");

			
			Зап=Новый ЗаписьZipФайла("C:\Бонусы\Bonus.zip");
			Зап.Добавить("C:\Бонусы\reestrp.txt");
			Зап.Добавить("C:\Бонусы\reestrp_long.txt");
			Зап.Добавить("C:\Бонусы\reestrr.txt");
			Зап.Добавить("C:\Бонусы\reestrr_long.txt");
			Зап.Добавить("C:\Бонусы\reestrreal.txt");
			Зап.Добавить("C:\Бонусы\reestrs.txt");

			Зап.Добавить("C:\Бонусы\bonus.txt");
			Зап.Добавить("C:\Бонусы\cheki.txt");
			Зап.Записать();
			
			
			Профиль = Новый ИнтернетПочтовыйПрофиль;
			Профиль.АдресСервераSMTP = выборка.Магаз.ххх_АдресСервераSMTP;
			Профиль.ПортIMAP = выборка.Магаз.ххх_ПортIMAP; 	
			Профиль.ПользовательSMTP = выборка.Магаз.ххх_МагазинскиаяПочта;	
			Профиль.ПарольSMTP = выборка.Магаз.ххх_ПарольSMTP;
			
			Сообщение = Новый ИнтернетПочтовоеСообщение ;
			Сообщение.Вложения.Добавить("C:\Бонусы\Bonus.zip");
			Сообщение.Получатели.Добавить(выборка.Магаз.ххх_ПочтаДляОтправвкиБонусов);
			Сообщение.Тема ="Бонусы "+ЗаголовокПисьма;
			Сообщение.ИмяОтправителя="МрРобот";
			Сообщение.Отправитель=выборка.Магаз.ххх_МагазинскиаяПочта;
			
		    Почта = Новый ИнтернетПочта();
			Почта.Подключиться(Профиль);
			Почта.Послать(Сообщение);
			Почта.Отключиться();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция СкорректированыОстаткиЕГАИС()
	
	запрос=Новый запрос;
	Запрос.УстановитьПараметр("ДатаНач",НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(ТекущаяДата()));
	запрос.Текст="ВЫБРАТЬ
	             |	ОстаткиЕГАИС.Ссылка КАК Ссылка
	             |ИЗ
	             |	Документ.ОстаткиЕГАИС КАК ОстаткиЕГАИС
	             |ГДЕ
	             |	ОстаткиЕГАИС.Дата МЕЖДУ &ДатаНач И &ДатаКон
	             |	И ОстаткиЕГАИС.Проведен";	
	
	Выборка=Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		возврат  истина;
	Иначе
		возврат ложь;
	КонецЕсли;
		
КонецФункции

&НаСервере
Процедура ВыгрузитьБонусыНаСервере()
	
	ДатаВыгрузкиДляРеестров=ДеньВыгрузки;
	МанагерВремТаблиц=Новый МенеджерВременныхТаблиц;
	ЗаполнитьВремТабВсеДвиженияДоков(МанагерВремТаблиц);//Бред, не получилось чо хотелось, рефактарнуть.
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МанагерВремТаблиц;	
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	розница.id_tov КАК id_tov,
        |	розница.naim КАК naim,
        |	розница.id_post КАК id_post,
        |	розница.cenz КАК cenz,
        |	розница.cenr КАК cenr,
        |	розница.ost КАК ost,
        |	розница.kolProd КАК kolProd,
        |	розница.sumsprod КАК sumsprod,
        |	розница.sumsskid КАК sumsskid
        |ИЗ
        |	ВсеДвижения КАК розница
        |ГДЕ
        |	(НЕ розница.cenz = ""0""
        |			ИЛИ НЕ розница.cenr = ""0""
        |			ИЛИ НЕ розница.ost = ""0""
        |			ИЛИ НЕ розница.kolProd = ""0""
        |			ИЛИ НЕ розница.sumsprod = ""0""
        |			ИЛИ НЕ розница.sumsskid = ""0"")
        |
        |УПОРЯДОЧИТЬ ПО
        |	розница.id_tov";
    Результат = Запрос.Выполнить();
    ТаблицаЗначений = Результат.Выгрузить();
	кодировка = КодировкаТекста.Системная;
	флаг=Ложь;
	Для каждого стр из ТаблицаЗначений Цикл
		Если стр.cenz=0 или Не ЗначениеЗаполнено(стр.cenz) Тогда
			Сообщить("По товару: "+стр.id_tov+" необходимо установить закупочную цену!");
			флаг=Истина;
		КонецЕсли;
	КонецЦикла;
	Если флаг Тогда
		возврат;
	КонецЕсли;
	ТекстовыйФайлЗапись = Новый ЗаписьТекста(Путь+"bonus.txt",Кодировка); 
	если ТаблицаЗначений.Количество()>0 тогда	
		разделитель = "|";
	    колонкиТЗ=ТаблицаЗначений.колонки;
		й=0;
		мас=Новый массив;
		мас.Добавить(10);
		мас.Добавить(50);
		мас.Добавить(10);
		мас.Добавить(10);                  
		мас.Добавить(10);
		мас.Добавить(10);
		мас.Добавить(15);
		мас.Добавить(15);
		мас.Добавить(15);
		Для каждого колонка Из колонкиТЗ Цикл
			имя=колонка.Имя;
	        стрКолонки =""+ стрКолонки + СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Имя,мас[й]," ","Справа") + разделитель;
			й=й+1;
		КонецЦикла; 
		               
			//Магазин=Справочники.ххх_Справочник.Магазин.Значение;
			ТекстовыйФайлЗапись.ЗаписатьСтроку(Магазин.Код+разделитель+Магазин.Наименование+разделитель+"*"+Строка(ДатаВыгрузкиДляРеестров)+"***********************************");
		
			текст="";
			//текст=стрКолонки+Символы.ВК;
			ТекстовыйФайлЗапись.ЗаписатьСтроку(стрКолонки);
		    для каждого запись из ТаблицаЗначений Цикл                    
		        текст = //текст
				 СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(запись.id_tov," ",""),10," ","Справа")+разделитель
				+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.naim,50," ","Справа")+разделитель
				//+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Формат(СтрЗаменить(запись.ost," ",""),"ЧРД=.; ЧРГ=''; ЧГ=0"),10," ","Справа")+разделитель
				+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(?(ЗначениеЗаполнено(запись.id_post),запись.id_post,0)," ",""),10," ","Справа")+разделитель
				+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.cenz,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),10," ","Справа")+разделитель
				+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.cenr,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),10," ","Справа")+разделитель
				//+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(запись.id_post," ",""),10," ","Справа")+разделитель
				+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.ost,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),10," ","Справа")+разделитель
				+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.kolProd,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),15," ","Справа")+разделитель
				+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.sumsprod,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),15," ","Справа")+разделитель
				+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.sumsskid,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),15," ","Справа")+разделитель;
				ТекстовыйФайлЗапись.ЗаписатьСтроку(текст);//+Символы.ВК;
			КонецЦикла;	
			//ТекстовыйФайлЗапись.ЗаписатьСтроку(текст);
			 	
	КонецЕсли;
	ТекстовыйФайлЗапись.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьЧеки()
	ВыгрузитьЧекиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьЧекиНаСервере()
	
	Если ЕстьИМ Тогда
		ВыгрузитьЧекиНаСервереИнтернет();
	КонецЕсли;
	Запрос = Новый Запрос;
	//Запрос.УстановитьПараметр("й18",Перечисления.СтавкиНДС.НДС18);
	//Запрос.УстановитьПараметр("й10",Перечисления.СтавкиНДС.НДС10);
	ДатаВыгрузкиДляРеестров=НачалоДня(НачалоДня(ДеньВыгрузки)-1);
	//Запрос.УстановитьПараметр("Кон",КонецДня(ДатаВыгрузкиДляРеестров));
	//Запрос.УстановитьПараметр("Нач",НачалоДня(ДатаВыгрузкиДляРеестров));
	Запрос.УстановитьПараметр("НомерСменыККМ",НомерСмены);
	Запрос.УстановитьПараметр("АналитикаХозяйственнойОперации",Справочники.ххх_Справочник.АналитикаХозОперРеализацияСИнтернетМагазина.Значение);
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	ЧекККМ.ххх_ИдЦентр КАК id,
        |	ЧекККМ.КассаККМ.Код КАК id_cassa,
        |	ЧекККМ.НомерЧекаККМ КАК nchek,
        |	ЧекККМ.СуммаДокумента КАК summa,
        |	ВЫБОР
        |		КОГДА ЧекККМ.ДисконтнаяКарта.ПроцентСкидки = 0
        |			ТОГДА ""0""
        |		ИНАЧЕ ЧекККМ.ДисконтнаяКарта.ПроцентСкидки
        |	КОНЕЦ КАК skid,
        |	СУММА(ЕСТЬNULL(ЧекККМСкидкиНаценки.Сумма, 0)) КАК sumskid,
        |	ВЫБОР
        |		КОГДА ЕСТЬNULL(ЧекККМ.ДисконтнаяКарта.КодКарты, """") = """"
        |			ТОГДА 0
        |		ИНАЧЕ ЧекККМ.ДисконтнаяКарта.КодКарты
        |	КОНЕЦ КАК numcard,
        |	ЧекККМ.Дата КАК vrem,
        |	ЧекККМ.Продавец.Наименование КАК naim,
        |	ЧекККМ.НомерСменыККМ КАК numsme,
        |	ЧекККМ.ВидОперации КАК ВидОперации
        |ПОМЕСТИТЬ йцу
        |ИЗ
        |	Документ.ЧекККМ КАК ЧекККМ
        |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЧекККМ.СкидкиНаценки КАК ЧекККМСкидкиНаценки
        |		ПО (ЧекККМСкидкиНаценки.Ссылка = ЧекККМ.Ссылка)
        |			И (ЧекККМСкидкиНаценки.Ссылка.Проведен = ИСТИНА)
        |			И (ЧекККМ.Проведен = ИСТИНА)
        |			И (ЧекККМ.НомерСменыККМ = &НомерСменыККМ)
        |ГДЕ
        |	ЧекККМ.Проведен = ИСТИНА
        |	И НЕ ЧекККМ.Магазин.ххх_ИнтернетМагазин
        |
        |СГРУППИРОВАТЬ ПО
        |	ЧекККМ.Дата,
        |	ЧекККМ.ххх_ИдЦентр,
        |	ЧекККМ.КассаККМ.Код,
        |	ЧекККМ.НомерЧекаККМ,
        |	ЧекККМ.НомерСменыККМ,
        |	ЧекККМ.СуммаДокумента,
        |	ЧекККМ.Номер,
        |	ЧекККМ.Продавец.Наименование,
        |	ВЫБОР
        |		КОГДА ЧекККМ.ДисконтнаяКарта.ПроцентСкидки = 0
        |			ТОГДА ""0""
        |		ИНАЧЕ ЧекККМ.ДисконтнаяКарта.ПроцентСкидки
        |	КОНЕЦ,
        |	ВЫБОР
        |		КОГДА ЕСТЬNULL(ЧекККМ.ДисконтнаяКарта.КодКарты, """") = """"
        |			ТОГДА 0
        |		ИНАЧЕ ЧекККМ.ДисконтнаяКарта.КодКарты
        |	КОНЕЦ,
        |	ЧекККМ.ВидОперации
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	йцу.id + 150000000 КАК id,
        |	йцу.id_cassa КАК id_cassa,
        |	йцу.nchek КАК nchek,
        |	йцу.summa КАК summa,
        |	йцу.skid КАК skid,
        |	ВЫБОР
        |		КОГДА йцу.sumskid = 0
        |			ТОГДА ""0""
        |		ИНАЧЕ йцу.sumskid
        |	КОНЕЦ КАК sumskid,
        |	йцу.numcard КАК numcard,
        |	йцу.vrem КАК vrem,
        |	йцу.naim КАК naim,
        |	йцу.numsme КАК numsme,
        |	йцу.ВидОперации КАК ВидОперации
        |ИЗ
        |	йцу КАК йцу
        |ГДЕ
        |	йцу.numsme = &НомерСменыККМ";
    Результат = Запрос.Выполнить();
    ТаблицаЗначений = Результат.Выгрузить();
	ТекстовыйФайлЗапись = Новый ЗаписьТекста(Путь+"cheki.txt"); 	
	если ТаблицаЗначений.Количество()>0 тогда	
		разделитель = "|";
	    колонкиТЗ=ТаблицаЗначений.колонки;
		й=0;
		мас=Новый массив;
		мас.Добавить(10);
		мас.Добавить(10);
		мас.Добавить(10);
		мас.Добавить(16);                  
		мас.Добавить(10);
		мас.Добавить(10);
		мас.Добавить(12);
		мас.Добавить(20);
		мас.Добавить(10);
		мас.Добавить(6);
		
		
		мас.Добавить(6);// хуйня левая    для  	йцу.ВидОперации КАК ВидОперации
		Для каждого колонка Из колонкиТЗ Цикл
			имя=колонка.Имя;
	        стрКолонки =""+ стрКолонки + СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Имя,мас[й]," ","Справа") + разделитель;
			й=й+1;
		КонецЦикла; 	
	  //  кодировка = КодировкаТекста.Системная;
	                			
		текст="";	
		//Магазин=Справочники.ххх_Справочник.Магазин.Значение;
		ТекстовыйФайлЗапись.ЗаписатьСтроку(Магазин.Код+разделитель+Магазин.Наименование+разделитель+"*"+Строка(ДеньВыгрузки)+"*********************************************************************************");
		ТекстовыйФайлЗапись.ЗаписатьСтроку(стрКолонки);
		для каждого запись из ТаблицаЗначений Цикл  
			Множитель=1;
			Если запись.ВидОперации=Перечисления.ВидыОперацийЧекККМ.Возврат Тогда
				Множитель=-1;
			КонецЕсли;
	        текст = //текст
			 СтроковыеФункцииКлиентСервер.ДополнитьСтроку(стрЗаменить(запись.id," ",""),10," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.id_cassa,10," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Формат(запись.nchek,"ЧРД=.; ЧРГ=' '; ЧГ=0"),10," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(Множитель*запись.summa,"ЧРД=.; ЧРГ=' '; ЧГ=0")," ",""),16," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.skid,10," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(Множитель*запись.sumskid,"ЧРД=.; ЧРГ=' '; ЧГ=0")," ",""),10," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.numcard,12," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.vrem,20," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.naim,10," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Формат(запись.numsme,"ЧРД=.; ЧРГ=' '; ЧГ=0"),6,"0","Слева")+разделитель;
			ТекстовыйФайлЗапись.ЗаписатьСтроку(текст);//+Символы.ВК;
		КонецЦикла;	
		//ТекстовыйФайлЗапись.ЗаписатьСтроку(текст);
		 	
	КонецЕсли;
	ТекстовыйФайлЗапись.Закрыть();	
КонецПроцедуры


&НаСервере
Процедура ВыгрузитьЧекиНаСервереИнтернет()
	Запрос = Новый Запрос;
	//Запрос.УстановитьПараметр("й18",Перечисления.СтавкиНДС.НДС18);
	//Запрос.УстановитьПараметр("й10",Перечисления.СтавкиНДС.НДС10);
	ДатаВыгрузкиДляРеестров=НачалоДня(НачалоДня(ДеньВыгрузки)-1);
	//Запрос.УстановитьПараметр("Кон",КонецДня(ДатаВыгрузкиДляРеестров));
	//Запрос.УстановитьПараметр("Нач",НачалоДня(ДатаВыгрузкиДляРеестров));
	Запрос.УстановитьПараметр("НомерСменыККМ",НомерСмены);
	Запрос.УстановитьПараметр("АналитикаХозяйственнойОперации",Справочники.ххх_Справочник.АналитикаХозОперРеализацияСИнтернетМагазина.Значение);
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	ЧекККМ.ххх_ИдЦентр КАК id,
        |	ЧекККМ.КассаККМ.Код КАК id_cassa,
        |	ЧекККМ.НомерЧекаККМ КАК nchek,
        |	ЧекККМ.СуммаДокумента КАК summa,
        |	ВЫБОР
        |		КОГДА ЧекККМ.ДисконтнаяКарта.ПроцентСкидки = 0
        |			ТОГДА ""0""
        |		ИНАЧЕ ЧекККМ.ДисконтнаяКарта.ПроцентСкидки
        |	КОНЕЦ КАК skid,
        |	СУММА(ЕСТЬNULL(ЧекККМСкидкиНаценки.Сумма, 0)) КАК sumskid,
        |	ВЫБОР
        |		КОГДА ЕСТЬNULL(ЧекККМ.ДисконтнаяКарта.КодКарты, """") = """"
        |			ТОГДА 0
        |		ИНАЧЕ ЧекККМ.ДисконтнаяКарта.КодКарты
        |	КОНЕЦ КАК numcard,
        |	ЧекККМ.Дата КАК vrem,
        |	ЧекККМ.Продавец.Наименование КАК naim,
        |	ЧекККМ.НомерСменыККМ КАК numsme,
        |	ЧекККМ.ВидОперации КАК ВидОперации
        |ПОМЕСТИТЬ йцу
        |ИЗ
        |	Документ.ЧекККМ КАК ЧекККМ
        |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЧекККМ.СкидкиНаценки КАК ЧекККМСкидкиНаценки
        |		ПО (ЧекККМСкидкиНаценки.Ссылка = ЧекККМ.Ссылка)
        |			И (ЧекККМСкидкиНаценки.Ссылка.Проведен = ИСТИНА)
        |			И (ЧекККМ.Проведен = ИСТИНА)
        |			И (ЧекККМ.НомерСменыККМ = &НомерСменыККМ)
        |ГДЕ
        |	ЧекККМ.Проведен = ИСТИНА
        |	И ЧекККМ.Магазин.ххх_ИнтернетМагазин
        |
        |СГРУППИРОВАТЬ ПО
        |	ЧекККМ.Дата,
        |	ЧекККМ.ххх_ИдЦентр,
        |	ЧекККМ.КассаККМ.Код,
        |	ЧекККМ.НомерЧекаККМ,
        |	ЧекККМ.НомерСменыККМ,
        |	ЧекККМ.СуммаДокумента,
        |	ЧекККМ.Номер,
        |	ЧекККМ.Продавец.Наименование,
        |	ВЫБОР
        |		КОГДА ЧекККМ.ДисконтнаяКарта.ПроцентСкидки = 0
        |			ТОГДА ""0""
        |		ИНАЧЕ ЧекККМ.ДисконтнаяКарта.ПроцентСкидки
        |	КОНЕЦ,
        |	ВЫБОР
        |		КОГДА ЕСТЬNULL(ЧекККМ.ДисконтнаяКарта.КодКарты, """") = """"
        |			ТОГДА 0
        |		ИНАЧЕ ЧекККМ.ДисконтнаяКарта.КодКарты
        |	КОНЕЦ,
        |	ЧекККМ.ВидОперации
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	йцу.id + 150000000 КАК id,
        |	йцу.id_cassa КАК id_cassa,
        |	йцу.nchek КАК nchek,
        |	йцу.summa КАК summa,
        |	йцу.skid КАК skid,
        |	ВЫБОР
        |		КОГДА йцу.sumskid = 0
        |			ТОГДА ""0""
        |		ИНАЧЕ йцу.sumskid
        |	КОНЕЦ КАК sumskid,
        |	йцу.numcard КАК numcard,
        |	йцу.vrem КАК vrem,
        |	йцу.naim КАК naim,
        |	йцу.numsme КАК numsme,
        |	йцу.ВидОперации КАК ВидОперации
        |ИЗ
        |	йцу КАК йцу
        |ГДЕ
        |	йцу.numsme = &НомерСменыККМ";
    Результат = Запрос.Выполнить();
    ТаблицаЗначений = Результат.Выгрузить();
	ТекстовыйФайлЗапись = Новый ЗаписьТекста("C:\БонусыИнетМагазин\"+"cheki.txt"); 	
	если ТаблицаЗначений.Количество()>0 тогда	
		разделитель = "|";
	    колонкиТЗ=ТаблицаЗначений.колонки;
		й=0;
		мас=Новый массив;
		мас.Добавить(10);
		мас.Добавить(10);
		мас.Добавить(10);
		мас.Добавить(16);                  
		мас.Добавить(10);
		мас.Добавить(10);
		мас.Добавить(12);
		мас.Добавить(20);
		мас.Добавить(10);
		мас.Добавить(6);
		
		
		мас.Добавить(6);// хуйня левая    для  	йцу.ВидОперации КАК ВидОперации
		Для каждого колонка Из колонкиТЗ Цикл
			имя=колонка.Имя;
	        стрКолонки =""+ стрКолонки + СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Имя,мас[й]," ","Справа") + разделитель;
			й=й+1;
		КонецЦикла; 	
	  //  кодировка = КодировкаТекста.Системная;
	                			
		текст="";	
		//Магазин=Справочники.Магазины.НайтиПоРеквизиту("ххх_ИнтернетМагазин",Истина);//Справочники.ххх_Справочник.Магазин.Значение;
		ТекстовыйФайлЗапись.ЗаписатьСтроку(Магазин.Код+разделитель+Магазин.Наименование+разделитель+"*"+Строка(ДеньВыгрузки)+"*********************************************************************************");
		ТекстовыйФайлЗапись.ЗаписатьСтроку(стрКолонки);
		для каждого запись из ТаблицаЗначений Цикл  
			Множитель=1;
			Если запись.ВидОперации=Перечисления.ВидыОперацийЧекККМ.Возврат Тогда
				Множитель=-1;
			КонецЕсли;
	        текст = //текст
			 СтроковыеФункцииКлиентСервер.ДополнитьСтроку(стрЗаменить(запись.id," ",""),10," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.id_cassa,10," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Формат(запись.nchek,"ЧРД=.; ЧРГ=' '; ЧГ=0"),10," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(Множитель*запись.summa,"ЧРД=.; ЧРГ=' '; ЧГ=0")," ",""),16," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.skid,10," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(Множитель*запись.sumskid,"ЧРД=.; ЧРГ=' '; ЧГ=0")," ",""),10," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.numcard,12," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.vrem,20," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.naim,10," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Формат(запись.numsme,"ЧРД=.; ЧРГ=' '; ЧГ=0"),6,"0","Слева")+разделитель;
			ТекстовыйФайлЗапись.ЗаписатьСтроку(текст);//+Символы.ВК;
		КонецЦикла;	
		//ТекстовыйФайлЗапись.ЗаписатьСтроку(текст);
		 	
	КонецЕсли;
	ТекстовыйФайлЗапись.Закрыть();	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьПоступления()
	ВыгрузитьПоступленияНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьПоступленияНаСервере()
	ВыгрузитьПоступленияЛонг();
	ВыгрузитьПоступленияДляБухиХМЛ();
	ВыгрузитьПоступленияДляБухи();
КонецПроцедуры

процедура ВыгрузитьПоступленияЛонг()
	ДатаВыгрузкиДляРеестров=ДеньВыгрузки;	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Кон",КонецДня(ДатаВыгрузкиДляРеестров));
	Запрос.УстановитьПараметр("Нач",НачалоДня(ДатаВыгрузкиДляРеестров));
	Запрос.УстановитьПараметр("Производители",Справочники.ххх_Справочник.КонтрагентыПапкаПРОИЗВОДИТЕЛИ.Значение);
	Запрос.УстановитьПараметр("Розн",Справочники.ххх_Справочник.Магазин.Значение.ПравилоЦенообразования.ВидЦен);
	Запрос.УстановитьПараметр("ПустаяСсылкаОргЕГАИС",Справочники.КлассификаторОрганизацийЕГАИС.ПустаяСсылка());
	Запрос.УстановитьПараметр("ВидАлкоголь",Справочники.ххх_Справочник.ВидНоменклатурыАлкоголь.Значение);
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	ЗакупкиТоваровОбороты.Регистратор.ххх_ИдЦентр КАК id,
        |	ЗакупкиТоваровОбороты.Поставщик.ххх_ИдЦентр КАК id_post,
        |	ЗакупкиТоваровОбороты.Регистратор.НомерВходящегоДокумента КАК numvxod,
        |	ЗакупкиТоваровОбороты.Регистратор.ДатаВходящегоДокумента КАК dnumvxod,
        |	ЗакупкиТоваровОбороты.Период КАК dnum,
        |	ПоступлениеТоваровТовары.Количество КАК kol,
        |	НЕОПРЕДЕЛЕНО КАК diffenition,
        |	НЕОПРЕДЕЛЕНО КАК GTD,
        |	ВЫБОР
        |		КОГДА ПоступлениеТоваровТовары.Номенклатура.ВидНоменклатуры = &ВидАлкоголь
        |			ТОГДА Контрагенты.ххх_ИдЦентр
        |		ИНАЧЕ ПоступлениеТоваровТовары.Номенклатура.Производитель.ххх_ИдЦентр
        |	КОНЕЦ КАК Id_Pro,
        |	0 КАК black,
        |	ЗакупкиТоваровОбороты.Регистратор.Ссылка КАК РегистраторСсылка,
        |	ЗакупкиТоваровОбороты.Номенклатура КАК Номенклатура,
        |	ЗакупкиТоваровОбороты.Номенклатура.ххх_ИдЦентр КАК id_tov,
        |	ПоступлениеТоваровТовары.Цена КАК cenz
        |ПОМЕСТИТЬ йцукен
        |ИЗ
        |	РегистрНакопления.ЗакупкиТоваров.Обороты(&Нач, &Кон, Регистратор, ) КАК ЗакупкиТоваровОбороты
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
        |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
        |			ПО (ВЫБОР
        |					КОГДА ПоступлениеТоваровТовары.АлкогольнаяПродукция.Импортер = &ПустаяСсылкаОргЕГАИС
        |						ТОГДА ПоступлениеТоваровТовары.АлкогольнаяПродукция.Производитель.ИНН = Контрагенты.ИНН
        |					ИНАЧЕ ПоступлениеТоваровТовары.АлкогольнаяПродукция.Импортер.ИНН = Контрагенты.ИНН
        |				КОНЕЦ)
        |				И (ВЫБОР
        |					КОГДА ПоступлениеТоваровТовары.АлкогольнаяПродукция.Импортер = &ПустаяСсылкаОргЕГАИС
        |						ТОГДА ПоступлениеТоваровТовары.АлкогольнаяПродукция.Производитель.КПП = Контрагенты.КПП
        |					ИНАЧЕ ПоступлениеТоваровТовары.АлкогольнаяПродукция.Импортер.КПП = Контрагенты.КПП
        |				КОНЕЦ)
        |				И (Контрагенты.Ссылка В ИЕРАРХИИ (&Производители))
        |				И (Контрагенты.ИНН <> """")
        |				И (Контрагенты.КПП <> """")
        |		ПО ЗакупкиТоваровОбороты.Номенклатура = ПоступлениеТоваровТовары.Номенклатура
        |			И ЗакупкиТоваровОбороты.Регистратор = ПоступлениеТоваровТовары.Ссылка
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	йцу.id КАК id,
        |	йцу.id_post КАК id_post,
        |	йцу.numvxod КАК numvxod,
        |	йцу.dnumvxod КАК dnumvxod,
        |	йцу.dnum КАК dnum,
        |	йцу.id_tov КАК id_tov,
        |	йцу.kol КАК kol,
        |	йцу.cenz КАК senz,
        |	УстановкаЦенНоменклатурыТовары.Цена КАК senr,
        |	йцу.diffenition КАК diffenition,
        |	йцу.GTD КАК GTD,
        |	йцу.Id_Pro КАК Id_Pro,
        |	йцу.black КАК black
        |ИЗ
        |	йцукен КАК йцу
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УстановкаЦенНоменклатуры.Товары КАК УстановкаЦенНоменклатурыТовары
        |		ПО йцу.РегистраторСсылка = УстановкаЦенНоменклатурыТовары.Ссылка.ДокументОснование
        |			И йцу.Номенклатура = УстановкаЦенНоменклатурыТовары.Номенклатура
        |			И (УстановкаЦенНоменклатурыТовары.ВидЦены = &Розн)
        |ГДЕ
        |	УстановкаЦенНоменклатурыТовары.Ссылка.Проведен
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	ПоступлениеТоваровТовары.Ссылка.ххх_ИдЦентр,
        |	ПоступлениеТоваровТовары.Ссылка.Контрагент.ххх_ИдЦентр,
        |	ПоступлениеТоваровТовары.Ссылка.НомерВходящегоДокумента,
        |	ПоступлениеТоваровТовары.Ссылка.ДатаВходящегоДокумента,
        |	ПоступлениеТоваровТовары.Ссылка.Дата,
        |	ПоступлениеТоваровТовары.Номенклатура.ххх_ИдЦентр,
        |	ПоступлениеТоваровТовары.Количество,
        |	0,
        |	0,
        |	НЕОПРЕДЕЛЕНО,
        |	НЕОПРЕДЕЛЕНО,
        |	ВЫБОР
        |		КОГДА ПоступлениеТоваровТовары.Номенклатура.ВидНоменклатуры = &ВидАлкоголь
        |			ТОГДА Контрагенты.ххх_ИдЦентр
        |		ИНАЧЕ ПоступлениеТоваровТовары.Номенклатура.Производитель.ххх_ИдЦентр
        |	КОНЕЦ,
        |	0
        |ИЗ
        |	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
        |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
        |		ПО (ВЫБОР
        |				КОГДА ПоступлениеТоваровТовары.АлкогольнаяПродукция.Импортер = &ПустаяСсылкаОргЕГАИС
        |					ТОГДА ПоступлениеТоваровТовары.АлкогольнаяПродукция.Производитель.ИНН = Контрагенты.ИНН
        |				ИНАЧЕ ПоступлениеТоваровТовары.АлкогольнаяПродукция.Импортер.ИНН = Контрагенты.ИНН
        |			КОНЕЦ)
        |			И (ВЫБОР
        |				КОГДА ПоступлениеТоваровТовары.АлкогольнаяПродукция.Импортер = &ПустаяСсылкаОргЕГАИС
        |					ТОГДА ПоступлениеТоваровТовары.АлкогольнаяПродукция.Производитель.КПП = Контрагенты.КПП
        |				ИНАЧЕ ПоступлениеТоваровТовары.АлкогольнаяПродукция.Импортер.КПП = Контрагенты.КПП
        |			КОНЕЦ)
        |			И (Контрагенты.Ссылка В ИЕРАРХИИ (&Производители))
        |			И (Контрагенты.ИНН <> """")
        |			И (Контрагенты.КПП <> """")
        |ГДЕ
        |	ПоступлениеТоваровТовары.Ссылка.Проведен
        |	И ПоступлениеТоваровТовары.Ссылка.ххх_ФиктивнаяНакладная
        |	И ПоступлениеТоваровТовары.Ссылка.Дата МЕЖДУ &Нач И &Кон
        |
        |УПОРЯДОЧИТЬ ПО
        |	Id_Pro";
    Результат = Запрос.Выполнить();
    ТаблицаЗначений = Результат.Выгрузить();
	кодировка = КодировкаТекста.ANSI;
	ТекстовыйФайлЗапись = Новый ЗаписьТекста(Путь+"reestrp_long.txt",Кодировка);	
	если ТаблицаЗначений.Количество()>0 тогда	
		разделитель = "|";
	    колонкиТЗ=ТаблицаЗначений.колонки;
		й=0;
		мас=Новый массив;
		мас.Добавить(10);
		мас.Добавить(10);
		мас.Добавить(20);
		мас.Добавить(10);                  
		мас.Добавить(20);
		мас.Добавить(10);
		мас.Добавить(10);
		мас.Добавить(10);
		мас.Добавить(10);
		мас.Добавить(50);
		мас.Добавить(80);
		мас.Добавить(10);
		мас.Добавить(10);
		Для каждого колонка Из колонкиТЗ Цикл
			имя=колонка.Имя;
	        стрКолонки =""+ стрКолонки + СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Имя,мас[й]," ","Справа") + разделитель;
			й=й+1;
		КонецЦикла;               
			
			//Магазин=Справочники.ххх_Справочник.Магазин.Значение;
			ТекстовыйФайлЗапись.ЗаписатьСтроку(Магазин.Код+разделитель+Магазин.Наименование+разделитель+"*"+Строка(ДатаВыгрузкиДляРеестров)+"**********************************************************************************************************************************************************************************************");	
			текст="";
			//текст=стрКолонки+Символы.ВК;
			ТекстовыйФайлЗапись.ЗаписатьСтроку(стрКолонки);
			для каждого запись из ТаблицаЗначений Цикл 
				Если Не ЗначениеЗаполнено(запись.id_post) Тогда
					Сообщить("Не заполнен производитель у карточки: "+запись.id);
				КонецЕсли;
		        текст = //текст
				 СтроковыеФункцииКлиентСервер.ДополнитьСтроку(УбитьЛишнее(запись.id),10," ","Справа")+разделитель
				+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.id_post,10," ","Справа")+разделитель
				+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.numvxod,20," ","Справа")+разделитель
				+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Формат(запись.dnumvxod,"ДФ=dd.MM.yyyy"),10," ","Справа")+разделитель
				+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.dnum,20," ","Справа")+разделитель				
				+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.id_tov,10," ","Справа")+разделитель
				+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Формат(запись.kol,"ЧРД=.; ЧРГ=''; ЧГ=0"),10," ","Справа")+разделитель
				+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Формат(запись.senz,"ЧРД=.; ЧРГ=; ЧН=; ЧГ=0"),10," ","Справа")+разделитель
				+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Формат(запись.senr,"ЧРД=.; ЧРГ=; ЧН=; ЧГ=0"),10," ","Справа")+разделитель
				+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.diffenition,50," ","Справа")+разделитель
				+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.GTD,80," ","Справа")+разделитель
				+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.Id_Pro,10," ","Справа")+разделитель
				+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.black,10," ","Справа")+разделитель;
				ТекстовыйФайлЗапись.ЗаписатьСтроку(текст);//+Символы.ВК;
			КонецЦикла;	
			//ТекстовыйФайлЗапись.ЗаписатьСтроку(текст); 	
	КонецЕсли;
	ТекстовыйФайлЗапись.Закрыть();
КонецПРоцедуры

процедура ВыгрузитьПоступленияДляБухи()
	ДатаВыгрузкиДляРеестров=ДеньВыгрузки;	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Кон",КонецДня(ДатаВыгрузкиДляРеестров));
	Запрос.УстановитьПараметр("Нач",НачалоДня(ДатаВыгрузкиДляРеестров));
	Запрос.УстановитьПараметр("Розн",Справочники.ххх_Справочник.Магазин.Значение.ПравилоЦенообразования.ВидЦен);
	Запрос.УстановитьПараметр("СтавкаБезНДС",Перечисления.СтавкиНДС.БезНДС);
	Запрос.УстановитьПараметр("Ставка18",Перечисления.СтавкиНДС.НДС18);
	Запрос.УстановитьПараметр("Ставка10",Перечисления.СтавкиНДС.НДС10);
	Запрос.УстановитьПараметр("Тара",Справочники.ххх_Справочник.ВидНоменклатурыТара.Значение);
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	ЗакупкиТоваровОбороты.Регистратор.Номер КАК id,
        |	ЗакупкиТоваровОбороты.Поставщик.ххх_ИдЦентр КАК id_post,
        |	ЗакупкиТоваровОбороты.Поставщик.Наименование КАК naim,
        |	ЗакупкиТоваровОбороты.Регистратор.НомерВходящегоДокумента КАК numvxod,
        |	ЗакупкиТоваровОбороты.Регистратор.ДатаВходящегоДокумента КАК dnumvxod,
        |	ЗакупкиТоваровОбороты.Период КАК dnum,
        |	НЕОПРЕДЕЛЕНО КАК diffenition,
        |	ЗакупкиТоваровОбороты.КоличествоОборот КАК kol,
        |	НЕОПРЕДЕЛЕНО КАК GTD,
        |	ЗакупкиТоваровОбороты.Номенклатура.Производитель.ххх_ИдЦентр КАК Id_Pro,
        |	0 КАК black,
        |	ЗакупкиТоваровОбороты.Регистратор.Ссылка КАК РегистраторСсылка,
        |	ЗакупкиТоваровОбороты.Номенклатура КАК Номенклатура,
        |	ЗакупкиТоваровОбороты.Номенклатура.ххх_ИдЦентр КАК id_tov,
        |	ПоступлениеТоваровТовары.Цена КАК senz,
        |	ВЫБОР
        |		КОГДА ПоступлениеТоваровТовары.СтавкаНДС = &СтавкаБезНДС
        |			ТОГДА ПоступлениеТоваровТовары.СуммаНДС
        |		ИНАЧЕ 0
        |	КОНЕЦ КАК sumnds0,
        |	ВЫБОР
        |		КОГДА ПоступлениеТоваровТовары.СтавкаНДС = &Ставка10
        |			ТОГДА ПоступлениеТоваровТовары.СуммаНДС
        |		ИНАЧЕ 0
        |	КОНЕЦ КАК sumnds10,
        |	ВЫБОР
        |		КОГДА ПоступлениеТоваровТовары.СтавкаНДС = &Ставка18
        |			ТОГДА ПоступлениеТоваровТовары.СуммаНДС
        |		ИНАЧЕ 0
        |	КОНЕЦ КАК sumnds18,
        |	ПоступлениеТоваровТовары.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
        |	МАКСИМУМ(ЕСТЬNULL(СчетФактураПолученныйДокументыОснования.Ссылка.Номер, """")) КАК sf,
        |	ПоступлениеТоваровТовары.Сумма КАК Сумма,
        |	ПоступлениеТоваровТовары.НомерСтроки КАК НомерСтроки
        |ПОМЕСТИТЬ йцу
        |ИЗ
        |	РегистрНакопления.ЗакупкиТоваров.Обороты(&Нач, &Кон, Регистратор, ) КАК ЗакупкиТоваровОбороты
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
        |		ПО ЗакупкиТоваровОбороты.Номенклатура = ПоступлениеТоваровТовары.Номенклатура
        |			И ЗакупкиТоваровОбороты.Регистратор = ПоступлениеТоваровТовары.Ссылка
        |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
        |		ПО ЗакупкиТоваровОбороты.Регистратор = СчетФактураПолученныйДокументыОснования.ДокументОснование
        |			И (СчетФактураПолученныйДокументыОснования.Ссылка.Проведен)
        |ГДЕ
        |	ЗакупкиТоваровОбороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваров
        |
        |СГРУППИРОВАТЬ ПО
        |	ПоступлениеТоваровТовары.Номенклатура.ВидНоменклатуры,
        |	ЗакупкиТоваровОбороты.Поставщик.ххх_ИдЦентр,
        |	ЗакупкиТоваровОбороты.Поставщик.Наименование,
        |	ЗакупкиТоваровОбороты.Период,
        |	ЗакупкиТоваровОбороты.Регистратор.Ссылка,
        |	ЗакупкиТоваровОбороты.Номенклатура,
        |	ЗакупкиТоваровОбороты.Регистратор.Номер,
        |	ЗакупкиТоваровОбороты.Регистратор.НомерВходящегоДокумента,
        |	ЗакупкиТоваровОбороты.Регистратор.ДатаВходящегоДокумента,
        |	ЗакупкиТоваровОбороты.КоличествоОборот,
        |	ЗакупкиТоваровОбороты.Номенклатура.Производитель.ххх_ИдЦентр,
        |	ЗакупкиТоваровОбороты.Номенклатура.ххх_ИдЦентр,
        |	ПоступлениеТоваровТовары.Цена,
        |	ВЫБОР
        |		КОГДА ПоступлениеТоваровТовары.СтавкаНДС = &СтавкаБезНДС
        |			ТОГДА ПоступлениеТоваровТовары.СуммаНДС
        |		ИНАЧЕ 0
        |	КОНЕЦ,
        |	ВЫБОР
        |		КОГДА ПоступлениеТоваровТовары.СтавкаНДС = &Ставка10
        |			ТОГДА ПоступлениеТоваровТовары.СуммаНДС
        |		ИНАЧЕ 0
        |	КОНЕЦ,
        |	ВЫБОР
        |		КОГДА ПоступлениеТоваровТовары.СтавкаНДС = &Ставка18
        |			ТОГДА ПоступлениеТоваровТовары.СуммаНДС
        |		ИНАЧЕ 0
        |	КОНЕЦ,
        |	ПоступлениеТоваровТовары.Сумма,
        |	ПоступлениеТоваровТовары.НомерСтроки
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	йцу.id КАК id,
        |	йцу.id_post КАК id_post,
        |	йцу.naim КАК naim,
        |	йцу.numvxod КАК numvxod,
        |	йцу.dnumvxod КАК dnumvxod,
        |	йцу.dnum КАК dnum,
        |	йцу.diffenition КАК diffenition,
        |	йцу.Сумма КАК sumz,
        |	йцу.kol * УстановкаЦенНоменклатурыТовары.Цена КАК sumr,
        |	йцу.sumnds0 КАК sumnds0,
        |	йцу.sumnds10 КАК sumnds10,
        |	йцу.sumnds18 КАК sumnds18,
        |	0 КАК tara,
        |	йцу.РегистраторСсылка.СуммаДокумента КАК РегистраторСсылкаСуммаДокумента,
        |	йцу.ВидНоменклатуры КАК ВидНоменклатуры,
        |	йцу.sf КАК sf
        |ПОМЕСТИТЬ Итог
        |ИЗ
        |	йцу КАК йцу
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УстановкаЦенНоменклатуры.Товары КАК УстановкаЦенНоменклатурыТовары
        |		ПО йцу.РегистраторСсылка = УстановкаЦенНоменклатурыТовары.Ссылка.ДокументОснование
        |			И йцу.Номенклатура = УстановкаЦенНоменклатурыТовары.Номенклатура
        |			И (УстановкаЦенНоменклатурыТовары.ВидЦены = &Розн)
        |			И (УстановкаЦенНоменклатурыТовары.Ссылка.Проведен = ИСТИНА)
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	Итог.id КАК id,
        |	Итог.id_post КАК id_post,
        |	ВЫРАЗИТЬ(Итог.naim КАК СТРОКА(50)) КАК naim,
        |	Итог.numvxod КАК numvxod,
        |	Итог.dnumvxod КАК dnumvxod,
        |	Итог.dnum КАК dnum,
        |	Итог.diffenition КАК diffenition,
        |	СУММА(Итог.sumz) КАК sumz,
        |	СУММА(Итог.sumr) КАК sumr,
        |	СУММА(Итог.sumnds0) КАК sumnds0,
        |	СУММА(Итог.sumnds10) КАК sumnds10,
        |	СУММА(Итог.sumnds18) КАК sumnds18,
        |	Итог.sf КАК sf,
        |	СУММА(ВЫБОР
        |			КОГДА Итог.ВидНоменклатуры = &Тара
        |				ТОГДА Итог.sumz
        |			ИНАЧЕ 0
        |		КОНЕЦ) КАК tara
        |ИЗ
        |	Итог КАК Итог
        |
        |СГРУППИРОВАТЬ ПО
        |	Итог.id,
        |	Итог.id_post,
        |	Итог.numvxod,
        |	Итог.dnumvxod,
        |	Итог.dnum,
        |	Итог.diffenition,
        |	Итог.sf,
        |	ВЫРАЗИТЬ(Итог.naim КАК СТРОКА(50))";
    Результат = Запрос.Выполнить();
    ТаблицаЗначений = Результат.Выгрузить();
	кодировка = КодировкаТекста.Системная;
	ТекстовыйФайлЗапись = Новый ЗаписьТекста(Путь+"reestrp.txt",Кодировка);
	если ТаблицаЗначений.Количество()>0 тогда	
		разделитель = "|";
	    колонкиТЗ=ТаблицаЗначений.колонки;
		й=0;
		мас=Новый массив;
		мас.Добавить(10);
		мас.Добавить(10);
		мас.Добавить(50);
		мас.Добавить(20);                  
		мас.Добавить(10);
		мас.Добавить(20);
		мас.Добавить(50);
		мас.Добавить(15);
		мас.Добавить(15);
		мас.Добавить(15);
		мас.Добавить(15);
		мас.Добавить(15);
		мас.Добавить(30);
		мас.Добавить(15);
		Для каждого колонка Из колонкиТЗ Цикл
			имя=колонка.Имя;
	        стрКолонки =""+ стрКолонки + СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Имя,мас[й]," ","Справа") + разделитель;
			й=й+1;
		КонецЦикла; 
	    кодировка = КодировкаТекста.ANSI;             
		
		//Магазин=Справочники.ххх_Справочник.Магазин.Значение;
		ТекстовыйФайлЗапись.ЗаписатьСтроку(Магазин.Код+разделитель+Магазин.Наименование+разделитель+"*"+Строка(ДатаВыгрузкиДляРеестров)+"**********************************************************************************************************************************************************************************************");	
		текст="";
		ТекстовыйФайлЗапись.ЗаписатьСтроку(стрКолонки); 
		й=0;
		ТаблицаЗначений=УбитьЛишнее(ТаблицаЗначений);
		для каждого запись из ТаблицаЗначений Цикл   
	        текст = //текст
			 СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Прав(запись.id,6),мас[0]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(
			?(ЗначениеЗаполнено(запись.id_post),запись.id_post,
			?(запись.naim="Бриз(База2)","1113","1114")
			),мас[1]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.naim,мас[2]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.numvxod,мас[3]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Формат(запись.dnumvxod,"ДФ=dd.MM.yyyy"),мас[4]," ","Справа")+разделитель				
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.dnum,мас[5]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.diffenition,мас[6]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.sumz,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),мас[7]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.sumr,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),мас[8]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.sumnds0,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),мас[9]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.sumnds10,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),мас[10]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.sumnds18,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),мас[11]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.sf,мас[12]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.tara,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),мас[13]," ","Справа")+разделитель;
			й=й+1;
			ТекстовыйФайлЗапись.ЗаписатьСтроку(текст);//+Символы.ВК;
		КонецЦикла;	
		//ТекстовыйФайлЗапись.ЗаписатьСтроку(текст); 	
	КонецЕсли;
	ТекстовыйФайлЗапись.Закрыть();
КонецПРоцедуры

&НаСервере
Функция ВыгрузитьПоступленияДляБухиХМЛ()	
	ДатаВыгрузкиДляРеестров=ДеньВыгрузки;
	Запрос=Новый запрос;
	Запрос.УстановитьПараметр("Кон",КонецДня(ДатаВыгрузкиДляРеестров));
	Запрос.УстановитьПараметр("Нач",НачалоДня(ДатаВыгрузкиДляРеестров));
	Запрос.УстановитьПараметр("СтавкаБезНДС",Перечисления.СтавкиНДС.БезНДС);
	Запрос.УстановитьПараметр("Ставка18",Перечисления.СтавкиНДС.НДС18);
	Запрос.УстановитьПараметр("Ставка10",Перечисления.СтавкиНДС.НДС10);
	Запрос.УстановитьПараметр("Тара",Справочники.ххх_Справочник.ВидНоменклатурыТара.Значение);

	Запрос.Текст="ВЫБРАТЬ
	             |	ПоступлениеТоваровТовары.СтавкаНДС КАК СтавкаНДС,
	             |	ПоступлениеТоваровТовары.Ссылка КАК Ссылка,
	             |	СУММА(ВЫБОР
	             |			КОГДА НЕ ПоступлениеТоваровТовары.Номенклатура.ВидНоменклатуры = &Тара
	             |				ТОГДА ПоступлениеТоваровТовары.Сумма
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК Сумма,
	             |	СУММА(ВЫБОР
	             |			КОГДА НЕ ПоступлениеТоваровТовары.Номенклатура.ВидНоменклатуры = &Тара
	             |				ТОГДА ПоступлениеТоваровТовары.СуммаНДС
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаНДС,
	             |	СчетФактураПолученныйДокументыОснования.Ссылка КАК СчетФактура,
	             |	СУММА(ВЫБОР
	             |			КОГДА ПоступлениеТоваровТовары.Номенклатура.ВидНоменклатуры = &Тара
	             |				ТОГДА ПоступлениеТоваровТовары.Сумма
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК Тара
	             |ИЗ
	             |	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
	             |		ПО ПоступлениеТоваровТовары.Ссылка = СчетФактураПолученныйДокументыОснования.ДокументОснование
	             |			И (НЕ СчетФактураПолученныйДокументыОснования.Ссылка.ПометкаУдаления)
	             |ГДЕ
	             |	ПоступлениеТоваровТовары.Ссылка.Дата МЕЖДУ &Нач И &Кон
	             |	И ПоступлениеТоваровТовары.Ссылка.Проведен
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ПоступлениеТоваровТовары.Ссылка,
	             |	СчетФактураПолученныйДокументыОснования.Ссылка,
	             |	ПоступлениеТоваровТовары.СтавкаНДС
	             |ИТОГИ
	             |	МАКСИМУМ(СчетФактура),
	             |	МАКСИМУМ(Тара)
	             |ПО
	             |	Ссылка";
	Док=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	//док = Объект.Документ;
	//УИД = док.УникальныйИдентификатор();
	ИмяВремФайла = ПолучитьИмяВременногоФайла("xml");
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл(Путь+"reestrp.xml","UTF-8");
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	магаз=справочники.Магазины.Выбрать();
	магаз.Следующий();
//	Попытка
		Документы_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","Документы"));
		Пока док.Следующий() Цикл		
			Док_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","Документ"));
			Док_XDTO.ВидОперации = ?(док.ссылка.контрагент.ххх_ИдЦентр="460",XMLСтрока("ПроизвПоступление"),XMLСтрока("Поступление"));
			Док_XDTO.Магазин = XMLСтрока(док.ссылка.магазин.Код);	// код магазина
			Док_XDTO.УИД = XMLСтрока(СокрЛП(док.Ссылка.УникальныйИдентификатор()));
			Док_XDTO.Дата = XMLСтрока(док.Ссылка.Дата);
			Док_XDTO.Номер = XMLСтрока(док.Ссылка.Номер);
			Док_XDTO.ДатаВход = XMLСтрока(док.Ссылка.ДатаВходящегоДокумента);
			Док_XDTO.НомерВход = XMLСтрока(док.Ссылка.НомерВходящегоДокумента);
			
			Организация_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","Организация"));
			Организация_XDTO.ИНН = XMLСтрока(док.Ссылка.Организация.ИНН);
			Организация_XDTO.КПП = XMLСтрока(док.Ссылка.Организация.КПП);
			Док_XDTO.Организация = Организация_XDTO;
			
			Контрагент_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","Организация"));
			Контрагент_XDTO.ИНН = XMLСтрока(док.Ссылка.Контрагент.ИНН);
			Контрагент_XDTO.КПП = XMLСтрока(док.Ссылка.Контрагент.КПП);
			Док_XDTO.Контрагент = Контрагент_XDTO;
			
			//Сумма за тару, в рублях (так как у нас один вид тары, поэтому одной суммой)
			Док_XDTO.Тара = XMLСтрока(Док.Тара);
			
			
			еСЛИ ЗначениеЗаполнено(док.СчетФактура) Тогда
				СФ_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","СчетФактура"));
				СФ_XDTO.ДатаСФ = XMLСтрока(док.СчетФактура.Дата);
				СФ_XDTO.ДатаСФВход = XMLСтрока(док.СчетФактура.ДатаСоставления);
				СФ_XDTO.НомерСФВход = XMLСтрока(док.СчетФактура.Номер);
				СФ_XDTO.НомерСФ = XMLСтрока(док.СчетФактура.Номер);
				СФ_XDTO.УИД = XMLСтрока(док.СчетФактура.УникальныйИдентификатор()); //тута должон быть УИД С/Ф
				Док_XDTO.СчетФактура = СФ_XDTO;
			КонецЕсли;

			
			Док_XDTO.СуммаДок = Док.Ссылка.СуммаДокумента;
			Док_XDTO.Комментарий = Док.Ссылка.Комментарий;
			
			ТабЧасть_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","ТабЧасть"));
			
			Товары=Док.Выбрать();
			Пока товары.Следующий() Цикл
				СтрокаТЧ_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","СтрокаТЧ"));
				СтрокаТЧ_XDTO.СтавкаНДС = XMLСтрока(ПолучитьИмяПеречисления(товары.СтавкаНДС,док.Ссылка.Дата));
				СтрокаТЧ_XDTO.СуммаНДС = XMLСтрока(товары.СуммаНДС);
				СтрокаТЧ_XDTO.Сумма = XMLСтрока(товары.Сумма);				
				ТабЧасть_XDTO.СтрокаТЧ.Добавить(СтрокаТЧ_XDTO);
			КонецЦикла;	
			Док_XDTO.ТабЧасть = ТабЧасть_XDTO;
			Документы_XDTO.ДокументЗагрузки.Добавить(Док_XDTO);
		КонецЦикла;
		ФабрикаXDTO.ЗаписатьXML(ЗаписьXML,Документы_XDTO);
	//Исключение
	//	Сообщить("Неудачка!");
	//КонецПопытки;
	ЗаписьXML.Закрыть();
	
КонецФункции


&НаСервереБезКонтекста
// Возвращает Имя значения перечисления по ссылке
// параметр - любое ПеречислениеСсылка
Функция ПолучитьИмяПеречисления(Ссылка,Дата)
	ИмяПеречисления = Ссылка.Метаданные().Имя;
	Индекс = Перечисления[ИмяПеречисления].Индекс(Ссылка);
	имя=Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления[Индекс].Имя;
	Возврат Имя;
КонецФункции

функция найтиПапкуАренда()
	Запрос=Новый запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	Номенклатура.Ссылка КАК Ссылка
	             |ИЗ
	             |	Справочник.Номенклатура КАК Номенклатура
	             |ГДЕ
	             |	Номенклатура.ЭтоГруппа = ЭтоГруппа
	             |	И Номенклатура.ххх_ИдЦентр = ""8976""";
	выборка=Запрос.Выполнить().Выбрать();
	выборка.Следующий();
	возврат выборка.ссылка;
КонецФункции

Процедура ЗаполнитьВремТабВсеДвиженияДоков(МанагерВремТаблиц)
	//Наб=РегистрыСведений.ххх_БонусыИстория.СоздатьНаборЗаписей();
	//Наб.Прочитать();
	//Наб.Очистить();
	//Наб.записать();

	Попытка
		ВыгрузитьБонусВИнтернетМагазин();
	Исключение
		
	КонецПопытки;
	
	Если не ЗначениеЗаполнено(ДеньВыгрузки) тогда
		ДеньВыгрузки=ТекущаяДата();
	КонецЕсли;
	ДеньВыгрузки1=НачалоДня(ДеньВыгрузки);//НачалоДня(ДеньВыгрузки)-1;
	
	Доки=Документы.ххх_Бонус.Выбрать(КонецДня(ДеньВыгрузки1)+1,КонецДня(ДеньВыгрузки1+1));
	Если Доки.Следующий() Тогда
		Док=Доки.Ссылка.ПолучитьОбъект();
	Иначе
		Док=Документы.ххх_Бонус.СоздатьДокумент();
		Док.Дата=КонецДня(ДеньВыгрузки1)+1+9*60*60;
		Док.Записать();
	КонецЕсли;
	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МанагерВремТаблиц;
	Запрос.УстановитьПараметр("Розничная",Справочники.ххх_Справочник.Магазин.Значение.ПравилоЦенообразования.ВидЦен);
	Запрос.УстановитьПараметр("Закуп",Справочники.ххх_Справочник.ЗакупочнаяЦена.Значение);
	//Запрос.УстановитьПараметр("Кон",КонецДня(ДеньВыгрузки1));
	Запрос.УстановитьПараметр("ДопРеквизитПоставщик",Справочники.ххх_Справочник.ДопРеквизитПоставщик.Значение);
	Запрос.УстановитьПараметр("Нач",НачалоДня(ДеньВыгрузки1)+1+9*60*60);
	Запрос.УстановитьПараметр("Утро9",КонецДня(ДеньВыгрузки1)+1+9*60*60);
	Запрос.УстановитьПараметр("Аренда",найтиПапкуАренда());
	Запрос.УстановитьПараметр("ПродажаСИнетернетМагазина",Справочники.ххх_Справочник.АналитикаХозОперРеализацияСИнтернетМагазина.Значение);
	НомерСменыККМ=Число(
		Строка(День(ДеньВыгрузки))
		+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Строка(Месяц(ДеньВыгрузки)),2,"0","Слева")
		+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Прав(Строка(Год(ДеньВыгрузки)),2),2," ","Слева")
		);
	Запрос.УстановитьПараметр("НомерСменыККМ",НомерСменыККМ);
	Запрос.УстановитьПараметр("Док",Док.Ссылка);
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	Номенклатура1.Ссылка КАК Номенклатура,
        |	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК остатокНаКонецДня
        |ПОМЕСТИТЬ Остатки
        |ИЗ
        |	Справочник.Номенклатура КАК Номенклатура1
        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&Утро9, ) КАК ТоварыНаСкладахОстатки
        |		ПО (ТоварыНаСкладахОстатки.Номенклатура = Номенклатура1.Ссылка)
        |ГДЕ
        |	Номенклатура1.Ссылка.ЭтоГруппа = ЛОЖЬ
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	ЕСТЬNULL(ПродажиОбороты.Номенклатура, Остатки.Номенклатура) КАК Номенклатура,
        |	ЕСТЬNULL(Остатки.остатокНаКонецДня, 0) КАК ost,
        |	ЕСТЬNULL(ПродажиОбороты.КоличествоОборот, 0) КАК Продано,
        |	ЕСТЬNULL(ПродажиОбороты.СтоимостьОборот, 0) КАК Сумма,
        |	ЕСТЬNULL(ПродажиОбороты.СтоимостьБезСкидокОборот - ПродажиОбороты.СтоимостьОборот, 0) КАК Скидка
        |ПОМЕСТИТЬ ОборотСуммыСкидка
        |ИЗ
        |	Остатки КАК Остатки
        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи.Обороты(
        |				,
        |				,
        |				,
        |				ДокументПродажи.НомерСменыККМ = &НомерСменыККМ
        |					И ДокументПродажи ССЫЛКА Документ.ЧекККМ
        |					И НЕ Магазин.ххх_ИнтернетМагазин) КАК ПродажиОбороты
        |		ПО (ПродажиОбороты.Номенклатура = Остатки.Номенклатура)
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	ОборотСуммыСкидка.Номенклатура КАК Номенклатура,
        |	ОборотСуммыСкидка.Продано КАК Продано,
        |	ОборотСуммыСкидка.Сумма КАК Сумма,
        |	ОборотСуммыСкидка.Скидка КАК Скидка,
        |	ЦеныНоменклатурыСрезПоследних.Цена КАК ЦенаЗакупа,
        |	ОборотСуммыСкидка.ost КАК ost
        |ПОМЕСТИТЬ закуп
        |ИЗ
        |	ОборотСуммыСкидка КАК ОборотСуммыСкидка
        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Утро9, ВидЦены = &Закуп) КАК ЦеныНоменклатурыСрезПоследних
        |		ПО (ЦеныНоменклатурыСрезПоследних.Номенклатура = ОборотСуммыСкидка.Номенклатура)
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	закуп.Номенклатура КАК Номенклатура,
        |	закуп.Продано КАК Продано,
        |	закуп.Сумма КАК Сумма,
        |	закуп.Скидка КАК Скидка,
        |	закуп.ЦенаЗакупа КАК ЦенаЗакупа,
        |	ЦеныНоменклатурыСрезПоследних.Цена КАК ЦенаРозничная,
        |	закуп.ost КАК ost
        |ПОМЕСТИТЬ розница
        |ИЗ
        |	закуп КАК закуп
        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Утро9, ВидЦены = &Розничная) КАК ЦеныНоменклатурыСрезПоследних
        |		ПО закуп.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	розница.Номенклатура.ххх_ИдЦентр КАК id_tov,
        |	ВЫРАЗИТЬ(розница.Номенклатура.Наименование КАК СТРОКА(50)) КАК naim,
        |	ВЫБОР
        |		КОГДА ЕСТЬNULL(розница.ЦенаЗакупа, 0) = 0
        |			ТОГДА ""0""
        |		ИНАЧЕ розница.ЦенаЗакупа
        |	КОНЕЦ КАК cenz,
        |	ВЫБОР
        |		КОГДА ЕСТЬNULL(розница.ЦенаРозничная, 0) = 0
        |			ТОГДА ""0""
        |		ИНАЧЕ розница.ЦенаРозничная
        |	КОНЕЦ КАК cenr,
        |	ВЫБОР
        |		КОГДА розница.Продано = 0
        |			ТОГДА ""0""
        |		ИНАЧЕ розница.Продано
        |	КОНЕЦ КАК kolProd,
        |	ВЫБОР
        |		КОГДА розница.Сумма = 0
        |			ТОГДА ""0""
        |		ИНАЧЕ розница.Сумма
        |	КОНЕЦ КАК sumsprod,
        |	ВЫБОР
        |		КОГДА розница.Скидка = 0
        |			ТОГДА ""0""
        |		ИНАЧЕ розница.Скидка
        |	КОНЕЦ КАК sumsskid,
        |	розница.Номенклатура КАК Номенклатура,
        |	ВЫБОР
        |		КОГДА розница.ost = 0
        |			ТОГДА ""0""
        |		ИНАЧЕ розница.ost
        |	КОНЕЦ КАК ost,
        |	розница.Номенклатура.ххх_Поставщик КАК Поставщик,
        |	розница.Номенклатура.ххх_Поставщик.ххх_ИдЦентр КАК id_post
        |ПОМЕСТИТЬ ВсеДвижения
        |ИЗ
        |	розница КАК розница
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	ВЫРАЗИТЬ(ВсеДвижения.cenz КАК ЧИСЛО(15, 2)) КАК ЦенаЗакупа,
        |	ВЫРАЗИТЬ(ВсеДвижения.cenr КАК ЧИСЛО(15, 2)) КАК Ценарозницы,
        |	ВЫРАЗИТЬ(ВсеДвижения.kolProd КАК ЧИСЛО(15, 3)) КАК КоличествоПродано,
        |	ВЫРАЗИТЬ(ВсеДвижения.sumsprod КАК ЧИСЛО(15, 2)) КАК СуммаПроданного,
        |	ВЫРАЗИТЬ(ВсеДвижения.sumsskid КАК ЧИСЛО(15, 2)) КАК СуммаСкидки,
        |	ВсеДвижения.Номенклатура КАК Номенклатура,
        |	ВЫРАЗИТЬ(ВсеДвижения.ost КАК ЧИСЛО(15, 3)) КАК Остаток,
        |	&Нач КАК Дата,
        |	ВсеДвижения.id_post КАК id_post,
        |	ВсеДвижения.Поставщик КАК Поставщик
        |ПОМЕСТИТЬ йцукенч
        |ИЗ
        |	ВсеДвижения КАК ВсеДвижения
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	йцу.ЦенаЗакупа КАК senz,
        |	йцу.Ценарозницы КАК senr,
        |	йцу.КоличествоПродано КАК prodkol,
        |	йцу.СуммаПроданного КАК prodsum,
        |	йцу.СуммаСкидки КАК СуммаСкидки,
        |	йцу.Номенклатура КАК Номенклатура,
        |	йцу.Остаток КАК ost,
        |	йцу.ЦенаЗакупа * йцу.Остаток КАК ostz,
        |	ВЫБОР
        |		КОГДА йцу.КоличествоПродано = 0
        |			ТОГДА 0
        |		ИНАЧЕ йцу.Остаток / йцу.КоличествоПродано
        |	КОНЕЦ КАК ЗапасВДнях,
        |	йцу.СуммаПроданного - ЕСТЬNULL(йцу.ЦенаЗакупа * йцу.КоличествоПродано, 0) КАК prib_rub,
        |	ВЫБОР
        |		КОГДА йцу.ЦенаЗакупа = 0
        |				ИЛИ йцу.КоличествоПродано = 0
        |			ТОГДА 0
        |		ИНАЧЕ йцу.СуммаПроданного / (йцу.ЦенаЗакупа * йцу.КоличествоПродано) - 1
        |	КОНЕЦ КАК prib_proc,
        |	ВЫБОР
        |		КОГДА йцу.ЦенаЗакупа = 0
        |			ТОГДА 0
        |		ИНАЧЕ (ВЫРАЗИТЬ(йцу.Ценарозницы / йцу.ЦенаЗакупа - 1 КАК ЧИСЛО(15, 2))) * 100
        |	КОНЕЦ КАК ПроцентНаценки,
        |	йцу.КоличествоПродано * йцу.ЦенаЗакупа КАК СуммаЗакупа,
        |	ВЫБОР
        |		КОГДА йцу.КоличествоПродано <> 0
        |			ТОГДА 1
        |		ИНАЧЕ 0
        |	КОНЕЦ КАК КоличествоПродаж,
        |	НАЧАЛОПЕРИОДА(йцу.Дата, ДЕНЬ) КАК dat,
        |	&Док КАК Регистратор,
        |	йцу.Номенклатура.ххх_ИдЦентр КАК id_tov,
        |	йцу.Номенклатура.Наименование КАК naim,
        |	йцу.Остаток * йцу.Ценарозницы КАК ostr,
        |	йцу.id_post КАК id_post
        |ИЗ
        |	йцукенч КАК йцу
        |ГДЕ
        |	НЕ йцу.Номенклатура В ИЕРАРХИИ (&Аренда)
        |
        |УПОРЯДОЧИТЬ ПО
        |	Номенклатура";
		//|ГДЕ
		//|	йцу.КоличествоПродано <> 0
		//|	Или йцу.Остаток <> 0
		//|	Или йцу.ЦенаЗакупа <> 0
		//|	Или йцу.Ценарозницы <> 0";
    Результат = Запрос.Выполнить();
	
	Док.Движения.ххх_БонусыИстория.записывать=Истина;
	Док.Движения.ххх_ОборотыПоБонусам.Записывать=Истина;
	
	Выгрузка=Результат.Выгрузить();
	//Выгрузка.Колонки.id_post.
	наб=ВнешниеИсточникиДанных.Пикник23.Таблицы.dbo_bonus_m.СоздатьНаборЗаписей();
	//Наб.отбор.Добавить("dat","dat","dat");
	Наб.отбор.dat.установить(ДеньВыгрузки1);
	Наб.прочитать();
	Наб.Очистить();
	Наб.записать();
	наб.Загрузить(Выгрузка);
	Наб.Записать();
	
КонецПроцедуры

процедура ВыгрузитьБонусВИнтернетМагазин()
	
	МанагерВремТаблиц=Новый МенеджерВременныхТаблиц;
	
	Если не ЗначениеЗаполнено(ДеньВыгрузки) тогда
		ДеньВыгрузки=ТекущаяДата();
	КонецЕсли;
	ДеньВыгрузки1=НачалоДня(ДеньВыгрузки);//НачалоДня(ДеньВыгрузки)-1;
	
	Доки=Документы.ххх_Бонус.Выбрать(КонецДня(ДеньВыгрузки1)+1,КонецДня(ДеньВыгрузки1+1));
	Если Доки.Следующий() Тогда
		Док=Доки.Ссылка.ПолучитьОбъект();
	Иначе
		Док=Документы.ххх_Бонус.СоздатьДокумент();
		Док.Дата=КонецДня(ДеньВыгрузки1)+1+9*60*60;
		Док.Записать();
	КонецЕсли;
	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МанагерВремТаблиц;
	Запрос.УстановитьПараметр("Розничная",Справочники.ххх_Справочник.Магазин.Значение.ПравилоЦенообразования.ВидЦен);
	Запрос.УстановитьПараметр("Закуп",Справочники.ххх_Справочник.ЗакупочнаяЦена.Значение);
	//Запрос.УстановитьПараметр("Кон",КонецДня(ДеньВыгрузки1));
	Запрос.УстановитьПараметр("ДопРеквизитПоставщик",Справочники.ххх_Справочник.ДопРеквизитПоставщик.Значение);
	Запрос.УстановитьПараметр("Нач",НачалоДня(ДеньВыгрузки1)+1+9*60*60);
	Запрос.УстановитьПараметр("Утро9",КонецДня(ДеньВыгрузки1)+1+9*60*60);
	Запрос.УстановитьПараметр("ПродажаСИнетернетМагазина",Справочники.ххх_Справочник.АналитикаХозОперРеализацияСИнтернетМагазина.Значение);
	Запрос.УстановитьПараметр("АналитикаХозОперПоступлениеНаИнтернетМагазин",Справочники.ххх_Справочник.АналитикаХозОперПоступлениеНаИнтернетМагазин.Значение);
	НомерСменыККМ=Число(
		Строка(День(ДеньВыгрузки))
		+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Строка(Месяц(ДеньВыгрузки)),2,"0","Слева")
		+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Прав(Строка(Год(ДеньВыгрузки)),2),2," ","Слева")
		);
	Запрос.УстановитьПараметр("НомерСменыККМ",НомерСменыККМ);
	Запрос.УстановитьПараметр("Док",Док.Ссылка);
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	Номенклатура1.Ссылка КАК Номенклатура,
        |	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК остатокНаКонецДня
        |ПОМЕСТИТЬ Остатки
        |ИЗ
        |	Справочник.Номенклатура КАК Номенклатура1
        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&Утро9, ) КАК ТоварыНаСкладахОстатки
        |		ПО (ТоварыНаСкладахОстатки.Номенклатура = Номенклатура1.Ссылка)
        |ГДЕ
        |	Номенклатура1.Ссылка.ЭтоГруппа = ЛОЖЬ
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	ЕСТЬNULL(ПродажиОбороты.Номенклатура, Остатки.Номенклатура) КАК Номенклатура,
        |	ЕСТЬNULL(Остатки.остатокНаКонецДня, 0) КАК ost,
        |	СУММА(ЕСТЬNULL(ПродажиОбороты.КоличествоОборот, 0)) КАК Продано,
        |	СУММА(ЕСТЬNULL(ПродажиОбороты.СтоимостьОборот, 0)) КАК Сумма,
        |	СУММА(ЕСТЬNULL(ПродажиОбороты.СтоимостьБезСкидокОборот - ПродажиОбороты.СтоимостьОборот, 0)) КАК Скидка
        |ПОМЕСТИТЬ ОборотСуммыСкидка
        |ИЗ
        |	Остатки КАК Остатки
        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи.Обороты(
        |				,
        |				,
        |				,
        |				ДокументПродажи.НомерСменыККМ = &НомерСменыККМ
        |						И ДокументПродажи ССЫЛКА Документ.ЧекККМ
        |						И Магазин.ххх_ИнтернетМагазин
        |					ИЛИ ДокументПродажи.Дата МЕЖДУ &Нач И &Утро9
        |						И ДокументПродажи.ххх_АналитикаХозОперации = &ПродажаСИнетернетМагазина) КАК ПродажиОбороты
        |		ПО (ПродажиОбороты.Номенклатура = Остатки.Номенклатура)
        |
        |СГРУППИРОВАТЬ ПО
        |	ЕСТЬNULL(ПродажиОбороты.Номенклатура, Остатки.Номенклатура),
        |	ЕСТЬNULL(Остатки.остатокНаКонецДня, 0)
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |УНИЧТОЖИТЬ Остатки
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	ОборотСуммыСкидка.Номенклатура КАК Номенклатура,
        |	ОборотСуммыСкидка.Продано КАК Продано,
        |	ОборотСуммыСкидка.Сумма КАК Сумма,
        |	ОборотСуммыСкидка.Скидка КАК Скидка,
        |	ЦеныНоменклатурыСрезПоследних.Цена КАК ЦенаЗакупа,
        |	ОборотСуммыСкидка.ost КАК ost
        |ПОМЕСТИТЬ закуп
        |ИЗ
        |	ОборотСуммыСкидка КАК ОборотСуммыСкидка
        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Утро9, ВидЦены = &Закуп) КАК ЦеныНоменклатурыСрезПоследних
        |		ПО (ЦеныНоменклатурыСрезПоследних.Номенклатура = ОборотСуммыСкидка.Номенклатура)
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	закуп.Номенклатура КАК Номенклатура,
        |	закуп.Продано КАК Продано,
        |	закуп.Сумма КАК Сумма,
        |	закуп.Скидка КАК Скидка,
        |	закуп.ЦенаЗакупа КАК ЦенаЗакупа,
        |	ЦеныНоменклатурыСрезПоследних.Цена КАК ЦенаРозничная,
        |	закуп.ost КАК ost
        |ПОМЕСТИТЬ розница
        |ИЗ
        |	закуп КАК закуп
        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Утро9, ВидЦены = &Розничная) КАК ЦеныНоменклатурыСрезПоследних
        |		ПО закуп.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	розница.Номенклатура.ххх_ИдЦентр КАК id_tov,
        |	ВЫРАЗИТЬ(розница.Номенклатура.Наименование КАК СТРОКА(50)) КАК naim,
        |	ВЫБОР
        |		КОГДА ЕСТЬNULL(розница.ЦенаЗакупа, 0) = 0
        |			ТОГДА ""0""
        |		ИНАЧЕ розница.ЦенаЗакупа
        |	КОНЕЦ КАК cenz,
        |	ВЫБОР
        |		КОГДА ЕСТЬNULL(розница.ЦенаРозничная, 0) = 0
        |			ТОГДА ""0""
        |		ИНАЧЕ розница.ЦенаРозничная
        |	КОНЕЦ КАК cenr,
        |	ВЫБОР
        |		КОГДА розница.Продано = 0
        |			ТОГДА ""0""
        |		ИНАЧЕ розница.Продано
        |	КОНЕЦ КАК kolProd,
        |	ВЫБОР
        |		КОГДА розница.Сумма = 0
        |			ТОГДА ""0""
        |		ИНАЧЕ розница.Сумма
        |	КОНЕЦ КАК sumsprod,
        |	ВЫБОР
        |		КОГДА розница.Скидка = 0
        |			ТОГДА ""0""
        |		ИНАЧЕ розница.Скидка
        |	КОНЕЦ КАК sumsskid,
        |	розница.Номенклатура КАК Номенклатура,
        |	ВЫБОР
        |		КОГДА розница.ost = 0
        |			ТОГДА ""0""
        |		ИНАЧЕ розница.ost
        |	КОНЕЦ КАК ost,
        |	розница.Номенклатура.ххх_Поставщик КАК Поставщик,
        |	розница.Номенклатура.ххх_Поставщик.ххх_ИдЦентр КАК id_post
        |ПОМЕСТИТЬ ВсеДвижения
        |ИЗ
        |	розница КАК розница
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |УНИЧТОЖИТЬ Розница
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |УНИЧТОЖИТЬ Закуп
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	ВЫРАЗИТЬ(ВсеДвижения.cenz КАК ЧИСЛО(15, 2)) КАК ЦенаЗакупа,
        |	ВЫРАЗИТЬ(ВсеДвижения.cenr КАК ЧИСЛО(15, 2)) КАК Ценарозницы,
        |	ВЫРАЗИТЬ(ВсеДвижения.kolProd КАК ЧИСЛО(15, 3)) КАК КоличествоПродано,
        |	ВЫРАЗИТЬ(ВсеДвижения.sumsprod КАК ЧИСЛО(15, 2)) КАК СуммаПроданного,
        |	ВЫРАЗИТЬ(ВсеДвижения.sumsskid КАК ЧИСЛО(15, 2)) КАК СуммаСкидки,
        |	ВсеДвижения.Номенклатура КАК Номенклатура,
        |	ВЫРАЗИТЬ(ВсеДвижения.ost КАК ЧИСЛО(15, 3)) КАК Остаток,
        |	&Нач КАК Дата,
        |	ВсеДвижения.id_post КАК id_post,
        |	ВсеДвижения.Поставщик КАК Поставщик
        |ПОМЕСТИТЬ йцукенч
        |ИЗ
        |	ВсеДвижения КАК ВсеДвижения
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	йцу.ЦенаЗакупа КАК senz,
        |	йцу.Ценарозницы КАК senr,
        |	йцу.КоличествоПродано КАК prodkol,
        |	йцу.СуммаПроданного КАК prodsum,
        |	йцу.СуммаСкидки КАК СуммаСкидки,
        |	йцу.Номенклатура КАК Номенклатура,
        |	йцу.Остаток КАК ost,
        |	йцу.ЦенаЗакупа * йцу.Остаток КАК ostz,
        |	ВЫБОР
        |		КОГДА йцу.КоличествоПродано = 0
        |			ТОГДА 0
        |		ИНАЧЕ йцу.Остаток / йцу.КоличествоПродано
        |	КОНЕЦ КАК ЗапасВДнях,
        |	йцу.СуммаПроданного - ЕСТЬNULL(йцу.ЦенаЗакупа * йцу.КоличествоПродано, 0) КАК prib_rub,
        |	ВЫБОР
        |		КОГДА йцу.ЦенаЗакупа = 0
        |				ИЛИ йцу.КоличествоПродано = 0
        |			ТОГДА 0
        |		ИНАЧЕ йцу.СуммаПроданного / (йцу.ЦенаЗакупа * йцу.КоличествоПродано) - 1
        |	КОНЕЦ КАК prib_proc,
        |	ВЫБОР
        |		КОГДА йцу.ЦенаЗакупа = 0
        |			ТОГДА 0
        |		ИНАЧЕ (ВЫРАЗИТЬ(йцу.Ценарозницы / йцу.ЦенаЗакупа - 1 КАК ЧИСЛО(15, 2))) * 100
        |	КОНЕЦ КАК ПроцентНаценки,
        |	йцу.КоличествоПродано * йцу.ЦенаЗакупа КАК СуммаЗакупа,
        |	ВЫБОР
        |		КОГДА йцу.КоличествоПродано <> 0
        |			ТОГДА 1
        |		ИНАЧЕ 0
        |	КОНЕЦ КАК КоличествоПродаж,
        |	НАЧАЛОПЕРИОДА(йцу.Дата, ДЕНЬ) КАК dat,
        |	&Док КАК Регистратор,
        |	йцу.Номенклатура.ххх_ИдЦентр КАК id_tov,
        |	йцу.Номенклатура.Наименование КАК naim,
        |	йцу.Остаток * йцу.Ценарозницы КАК ostr,
        |	йцу.id_post КАК id_post
        |ИЗ
        |	йцукенч КАК йцу
        |
        |УПОРЯДОЧИТЬ ПО
        |	Номенклатура";
		//|ГДЕ
		//|	йцу.КоличествоПродано <> 0
		//|	Или йцу.Остаток <> 0
		//|	Или йцу.ЦенаЗакупа <> 0
		//|	Или йцу.Ценарозницы <> 0";
    Результат = Запрос.Выполнить();
	
	Док.Движения.ххх_БонусыИстория.записывать=Истина;
	Док.Движения.ххх_ОборотыПоБонусам.Записывать=Истина;
	
	Выгрузка=Результат.Выгрузить();
	//Выгрузка.Колонки.id_post.
	наб=ВнешниеИсточникиДанных.Пикник23.Таблицы.dbo_bonus_m_i.СоздатьНаборЗаписей();
	//Наб.отбор.Добавить("dat","dat","dat");
	Наб.отбор.dat.установить(ДеньВыгрузки1);
	Наб.прочитать();
	Наб.Очистить();
	Наб.записать();
	наб.Загрузить(Выгрузка);
	Наб.Записать();
	
	
	ДатаВыгрузкиДляРеестров=ДеньВыгрузки;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=МанагерВремТаблиц;	
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	розница.id_tov КАК id_tov,
        |	розница.naim КАК naim,
        |	розница.id_post КАК id_post,
        |	розница.cenz КАК cenz,
        |	розница.cenr КАК cenr,
        |	розница.ost КАК ost,
        |	розница.kolProd КАК kolProd,
        |	розница.sumsprod КАК sumsprod,
        |	розница.sumsskid КАК sumsskid
        |ИЗ
        |	ВсеДвижения КАК розница
        |ГДЕ
        |	(НЕ розница.cenz = ""0""
        |			ИЛИ НЕ розница.cenr = ""0""
        |			ИЛИ НЕ розница.ost = ""0""
        |			ИЛИ НЕ розница.kolProd = ""0""
        |			ИЛИ НЕ розница.sumsprod = ""0""
        |			ИЛИ НЕ розница.sumsskid = ""0"")
        |
        |УПОРЯДОЧИТЬ ПО
        |	розница.id_tov";
    Результат = Запрос.Выполнить();
    ТаблицаЗначений = Результат.Выгрузить();
	кодировка = КодировкаТекста.Системная;
	
	ТекстовыйФайлЗапись = Новый ЗаписьТекста("C:\БонусыИнетМагазин\"+"bonus.txt",Кодировка); 
	если ТаблицаЗначений.Количество()>0 тогда	
		разделитель = "|";
	    колонкиТЗ=ТаблицаЗначений.колонки;
		й=0;
		мас=Новый массив;
		мас.Добавить(10);
		мас.Добавить(50);
		мас.Добавить(10);
		мас.Добавить(10);                  
		мас.Добавить(10);
		мас.Добавить(10);
		мас.Добавить(15);
		мас.Добавить(15);
		мас.Добавить(15);
		Для каждого колонка Из колонкиТЗ Цикл
			имя=колонка.Имя;
	        стрКолонки =""+ стрКолонки + СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Имя,мас[й]," ","Справа") + разделитель;
			й=й+1;
		КонецЦикла; 
		               
			//Магазин=Справочники.Магазины.НайтиПоРеквизиту("ххх_ИнтернетМагазин",Истина);
			ТекстовыйФайлЗапись.ЗаписатьСтроку(Магазин.Код+разделитель+Магазин.Наименование+разделитель+"*"+Строка(ДатаВыгрузкиДляРеестров)+"***********************************");
		
			текст="";
			//текст=стрКолонки+Символы.ВК;
			ТекстовыйФайлЗапись.ЗаписатьСтроку(стрКолонки);
		    для каждого запись из ТаблицаЗначений Цикл                    
		        текст = //текст
				 СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(запись.id_tov," ",""),10," ","Справа")+разделитель
				+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.naim,50," ","Справа")+разделитель
				//+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Формат(СтрЗаменить(запись.ost," ",""),"ЧРД=.; ЧРГ=''; ЧГ=0"),10," ","Справа")+разделитель
				+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(?(ЗначениеЗаполнено(запись.id_post),запись.id_post,0)," ",""),10," ","Справа")+разделитель
				+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.cenz,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),10," ","Справа")+разделитель
				+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.cenr,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),10," ","Справа")+разделитель
				//+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(запись.id_post," ",""),10," ","Справа")+разделитель
				+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.ost,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),10," ","Справа")+разделитель
				+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.kolProd,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),15," ","Справа")+разделитель
				+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.sumsprod,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),15," ","Справа")+разделитель
				+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.sumsskid,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),15," ","Справа")+разделитель;
				ТекстовыйФайлЗапись.ЗаписатьСтроку(текст);//+Символы.ВК;
			КонецЦикла;	
			//ТекстовыйФайлЗапись.ЗаписатьСтроку(текст);
			 	
	КонецЕсли;
	ТекстовыйФайлЗапись.Закрыть();

	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВозвраты()
	ВыгрузитьВозвратыНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьВозвратыНаСервере()
	ВыгрузитьВозвратыЛонг();
	ВыгрузитьВозвратыДляБухи();
	ВыгрузитьВозвратыДляБухиХМЛ();
КонецПроцедуры



функция ПолучитьФорматВозврата(Контрагент,дата)
	
	УстановитьПривилегированныйРежим(Истина);	
	Отбор = Новый Структура("Контрагент", Контрагент.Ссылка);
	ДатыНовыхВозвратов = РегистрыСведений.ххх_ДатыНовыхФорматовВозвратов.СрезПоследних(Дата,Отбор);
	
	возврат ?(ДатыНовыхВозвратов.Количество()=0,ложь,ДатыНовыхВозвратов[0].Введено);
	
КонецФункции


&НаСервере
Функция ВыгрузитьВозвратыДляБухиХМЛ()	
	ДатаВыгрузкиДляРеестров=ДеньВыгрузки;
	Запрос=Новый запрос;
	Запрос.УстановитьПараметр("Кон",КонецДня(ДатаВыгрузкиДляРеестров));
	Запрос.УстановитьПараметр("Нач",НачалоДня(ДатаВыгрузкиДляРеестров));
	Запрос.УстановитьПараметр("СтавкаБезНДС",Перечисления.СтавкиНДС.БезНДС);
	Запрос.УстановитьПараметр("Ставка18",Перечисления.СтавкиНДС.НДС18);
	Запрос.УстановитьПараметр("Ставка10",Перечисления.СтавкиНДС.НДС10);
	Запрос.УстановитьПараметр("Тара",Справочники.ххх_Справочник.ВидНоменклатурыТара.Значение);

	Запрос.Текст="ВЫБРАТЬ
	             |	ВозвратТоваровПоставщикуТовары.СтавкаНДС КАК СтавкаНДС,
	             |	ВозвратТоваровПоставщикуТовары.Ссылка КАК Ссылка,
	             |	СУММА(ВЫБОР
	             |			КОГДА НЕ ВозвратТоваровПоставщикуТовары.Номенклатура.ВидНоменклатуры = &Тара
	             |				ТОГДА ВозвратТоваровПоставщикуТовары.Сумма
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК Сумма,
	             |	СУММА(ВЫБОР
	             |			КОГДА НЕ ВозвратТоваровПоставщикуТовары.Номенклатура.ВидНоменклатуры = &Тара
	             |				ТОГДА ВозвратТоваровПоставщикуТовары.СуммаНДС
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаНДС,
	             |	СУММА(ВЫБОР
	             |			КОГДА ВозвратТоваровПоставщикуТовары.Номенклатура.ВидНоменклатуры = &Тара
	             |				ТОГДА ВозвратТоваровПоставщикуТовары.Сумма
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК Тара,
	             |	СчетФактураВыданный.Ссылка КАК СчетФактура
	             |ИЗ
	             |	Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
	             |		ПО ВозвратТоваровПоставщикуТовары.Ссылка = СчетФактураВыданный.ДокументОснование
	             |			И (СчетФактураВыданный.Проведен)
	             |ГДЕ
	             |	ВозвратТоваровПоставщикуТовары.Ссылка.Дата МЕЖДУ &Нач И &Кон
	             |	И ВозвратТоваровПоставщикуТовары.Ссылка.Проведен
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ВозвратТоваровПоставщикуТовары.Ссылка,
	             |	ВозвратТоваровПоставщикуТовары.СтавкаНДС,
	             |	СчетФактураВыданный.Ссылка
	             |ИТОГИ
	             |	МАКСИМУМ(Тара),
	             |	МАКСИМУМ(СчетФактура)
	             |ПО
	             |	Ссылка";
	Док=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	//док = Объект.Документ;
	//УИД = док.УникальныйИдентификатор();
	ИмяВремФайла = ПолучитьИмяВременногоФайла("xml");
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл(путь+"reestrr.xml","UTF-8");
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	магаз=справочники.Магазины.Выбрать();
	магаз.Следующий();
//	Попытка
		Документы_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","Документы"));
		Пока док.Следующий() Цикл
			Если не ПолучитьФорматВозврата(док.Ссылка.Контрагент,док.Ссылка.дата) или док.тара<>0 Тогда
				//продолжить;
				Док_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","Документ"));
				Док_XDTO.ВидОперации = ?(док.Ссылка.Контрагент=КОНСТАНТЫ.ххх_ОрганизацияПринимающаяяПроизводство.Получить().Ссылка,XMLСтрока("ПроизвВозврат"),XMLСтрока("Возврат"));
				Док_XDTO.Магазин = XMLСтрока(магаз.Код);	// код магазина
				Док_XDTO.УИД = XMLСтрока(СокрЛП(док.Ссылка.УникальныйИдентификатор()));
				Док_XDTO.Дата = XMLСтрока(док.Ссылка.Дата);
				Док_XDTO.Номер = XMLСтрока(док.Ссылка.Номер);
				//Док_XDTO.ДатаВход = XMLСтрока(док.Ссылка.ДатаВходящегоДокумента);
				//Док_XDTO.НомерВход = XMLСтрока(док.Ссылка.НомерВходящегоДокумента);
				
				Организация_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","Организация"));
				Организация_XDTO.ИНН = XMLСтрока(док.Ссылка.Организация.ИНН);
				Организация_XDTO.КПП = XMLСтрока(док.Ссылка.Организация.КПП);
				Док_XDTO.Организация = Организация_XDTO;
				
				Контрагент_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","Организация"));
				Контрагент_XDTO.ИНН = XMLСтрока(док.Ссылка.Контрагент.ИНН);
				Контрагент_XDTO.КПП = XMLСтрока(док.Ссылка.Контрагент.КПП);
				Док_XDTO.Контрагент = Контрагент_XDTO;
				
				//Сумма за тару, в рублях (так как у нас один вид тары, поэтому одной суммой)
				Док_XDTO.Тара = XMLСтрока(Док.Тара);
				
				
				еСЛИ ЗначениеЗаполнено(док.СчетФактура) Тогда
					СФ_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","СчетФактура"));
					СФ_XDTO.ДатаСФ = XMLСтрока(док.СчетФактура.Дата);
					СФ_XDTO.НомерСФ = XMLСтрока(док.СчетФактура.Номер);
					СФ_XDTO.УИД = XMLСтрока(док.СчетФактура.УникальныйИдентификатор()); //тута должон быть УИД С/Ф
					Док_XDTO.СчетФактура = СФ_XDTO;
				КонецЕсли;

				
				Док_XDTO.СуммаДок = Док.Ссылка.СуммаДокумента;
				Док_XDTO.Комментарий = Док.Ссылка.Комментарий;
				
				ТабЧасть_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","ТабЧасть"));
				
				Товары=Док.Выбрать();
				Пока товары.Следующий() Цикл
					СтрокаТЧ_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","СтрокаТЧ"));
					СтрокаТЧ_XDTO.СтавкаНДС = XMLСтрока(ПолучитьИмяПеречисления(товары.СтавкаНДС,док.Ссылка.Дата));
					СтрокаТЧ_XDTO.СуммаНДС = XMLСтрока(товары.СуммаНДС);
					СтрокаТЧ_XDTO.Сумма = XMLСтрока(товары.Сумма);				
					ТабЧасть_XDTO.СтрокаТЧ.Добавить(СтрокаТЧ_XDTO);
				КонецЦикла;	
				Док_XDTO.ТабЧасть = ТабЧасть_XDTO;
				Документы_XDTO.ДокументЗагрузки.Добавить(Док_XDTO);
				
			Иначе
			
				Док_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","Документ"));
				Док_XDTO.ВидОперации = XMLСтрока("ВозвратКорректировочный");
				Док_XDTO.Магазин = XMLСтрока(магаз.Код);	// код магазина
				Док_XDTO.УИД = XMLСтрока(СокрЛП(док.Ссылка.УникальныйИдентификатор()));
				Док_XDTO.Дата = XMLСтрока(док.Ссылка.Дата);
				Док_XDTO.Номер = XMLСтрока(док.Ссылка.Номер);
				//Док_XDTO.ДатаВход = XMLСтрока(док.Ссылка.ДатаВходящегоДокумента);
				//Док_XDTO.НомерВход = XMLСтрока(док.Ссылка.НомерВходящегоДокумента);
				
				Организация_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","Организация"));
				Организация_XDTO.ИНН = XMLСтрока(док.Ссылка.Организация.ИНН);
				Организация_XDTO.КПП = XMLСтрока(док.Ссылка.Организация.КПП);
				Док_XDTO.Организация = Организация_XDTO;
				
				Контрагент_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","Организация"));
				Контрагент_XDTO.ИНН = XMLСтрока(док.Ссылка.Контрагент.ИНН);
				Контрагент_XDTO.КПП = XMLСтрока(док.Ссылка.Контрагент.КПП);
				Док_XDTO.Контрагент = Контрагент_XDTO;
				
				
				Партии_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","Партии"));
				
				Док_XDTO.партии=Партии_XDTO;
				
				партия="";
				
				товары=док.Ссылка.товары.выгрузить();
				
				ПартииДок=товары.скопировать();
				ПартииДок.свернуть("Партия","Сумма");
				
				товары.свернуть("СтавкаНДС,Партия","Сумма,СуммаНДС");
				товары.сортировать("Партия");

				
				Для каждого партия из ПартииДок цикл
				
					Партия_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","Документ"));
					Партия_XDTO.УИД = XMLСтрока(СокрЛП(партия.партия.УникальныйИдентификатор()));
					//Партия_XDTO.Ид = партия.партия.ххх_ИдЦентр;
					Партия_XDTO.Дата = XMLСтрока(партия.Партия.Ссылка.Дата);
					Партия_XDTO.Номер = XMLСтрока(партия.Партия.Ссылка.Номер);
					Партия_XDTO.ДатаВход = XMLСтрока(партия.Партия.Ссылка.ДатаВходящегоДокумента);
					Партия_XDTO.НомерВход = XMLСтрока(партия.Партия.Ссылка.НомерВходящегоДокумента);


					Партии_XDTO.Партия.Добавить(Партия_XDTO);
					
					Отбор=Новый структура;
					Отбор.Вставить("Партия",партия.партия);
					ТоварыПоПартии=Товары.найтиСтроки(Отбор);
					
					Док_XDTO.СуммаДок = партия.Сумма;
					
					ТабЧасть_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","ТабЧасть"));
					
					//Товары=Док.Выбрать();
					Для каждого стр из ТоварыПоПартии Цикл
						СтрокаТЧ_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","СтрокаТЧ"));
						СтрокаТЧ_XDTO.СтавкаНДС = XMLСтрока(ПолучитьИмяПеречисления(стр.СтавкаНДС,док.Ссылка.Дата));
						СтрокаТЧ_XDTO.СуммаНДС = XMLСтрока(стр.СуммаНДС);
						СтрокаТЧ_XDTO.Сумма = XMLСтрока(стр.Сумма);				
						ТабЧасть_XDTO.СтрокаТЧ.Добавить(СтрокаТЧ_XDTO);
					КонецЦикла;	
					
					Партия_XDTO.ТабЧасть = ТабЧасть_XDTO;
					
				КонецЦикла;
				
				Документы_XDTO.ДокументЗагрузки.Добавить(Док_XDTO);
				
			КонецЕсли;
		
		КонецЦикла;
		ФабрикаXDTO.ЗаписатьXML(ЗаписьXML,Документы_XDTO);
	//Исключение
	//	Сообщить("Неудачка!");
	//КонецПопытки;
	ЗаписьXML.Закрыть();

	
КонецФункции

&НаСервере
Функция ВыгрузитьРеализацииДляБухиХМЛ()	
	ДатаВыгрузкиДляРеестров=ДеньВыгрузки;
	Запрос=Новый запрос;
	Запрос.УстановитьПараметр("Кон",КонецДня(ДатаВыгрузкиДляРеестров));
	Запрос.УстановитьПараметр("Нач",НачалоДня(ДатаВыгрузкиДляРеестров));
	Запрос.УстановитьПараметр("СтавкаБезНДС",Перечисления.СтавкиНДС.БезНДС);
	Запрос.УстановитьПараметр("Ставка18",Перечисления.СтавкиНДС.НДС18);
	Запрос.УстановитьПараметр("Ставка10",Перечисления.СтавкиНДС.НДС10);
	Запрос.УстановитьПараметр("Тара",Справочники.ххх_Справочник.ВидНоменклатурыТара.Значение);

	Запрос.Текст="ВЫБРАТЬ
	             |	РеализацияТоваровТовары.СтавкаНДС КАК СтавкаНДС,
	             |	РеализацияТоваровТовары.Ссылка КАК Ссылка,
	             |	СУММА(ВЫБОР
	             |			КОГДА НЕ РеализацияТоваровТовары.Номенклатура.ВидНоменклатуры = &Тара
	             |				ТОГДА РеализацияТоваровТовары.Сумма
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК Сумма,
	             |	СУММА(ВЫБОР
	             |			КОГДА НЕ РеализацияТоваровТовары.Номенклатура.ВидНоменклатуры = &Тара
	             |				ТОГДА РеализацияТоваровТовары.СуммаНДС
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК СуммаНДС,
	             |	СУММА(ВЫБОР
	             |			КОГДА РеализацияТоваровТовары.Номенклатура.ВидНоменклатуры = &Тара
	             |				ТОГДА РеализацияТоваровТовары.Сумма
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК Тара,
	             |	СчетФактураВыданный.Ссылка КАК СчетФактура
	             |ИЗ
	             |	Документ.РеализацияТоваров.Товары КАК РеализацияТоваровТовары
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
	             |		ПО РеализацияТоваровТовары.Ссылка = СчетФактураВыданный.ДокументОснование
	             |			И (СчетФактураВыданный.Проведен)
	             |ГДЕ
	             |	РеализацияТоваровТовары.Ссылка.Дата МЕЖДУ &Нач И &Кон
	             |	И РеализацияТоваровТовары.Ссылка.Проведен
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	РеализацияТоваровТовары.Ссылка,
	             |	РеализацияТоваровТовары.СтавкаНДС,
	             |	СчетФактураВыданный.Ссылка
	             |ИТОГИ
	             |	МАКСИМУМ(Тара),
	             |	МАКСИМУМ(СчетФактура)
	             |ПО
	             |	Ссылка";
	Док=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	//док = Объект.Документ;
	//УИД = док.УникальныйИдентификатор();
	ИмяВремФайла = ПолучитьИмяВременногоФайла("xml");
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл(Путь+"reestrreal.xml","UTF-8");
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	магаз=справочники.Магазины.Выбрать();
	магаз.Следующий();
//	Попытка
		Документы_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","Документы"));
		Пока док.Следующий() Цикл		
			Док_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","Документ"));
			Док_XDTO.ВидОперации = ?(Док.ссылка.ххх_АналитикаХозОперации=Справочники.ххх_Справочник.АналитикаХозОперРеализацияНаИнтернетМагазин.Значение или
			    Док.ссылка.ххх_АналитикаХозОперации=Справочники.ххх_Справочник.АналитикаХозОперРеализацияСИнтернетМагазина.Значение, XMLСтрока("Реализация"),
				XMLСтрока("РеализацияВнутр"));
			Док_XDTO.Магазин = XMLСтрока(магаз.Код);	// код магазина
			Док_XDTO.УИД = XMLСтрока(СокрЛП(док.Ссылка.УникальныйИдентификатор()));
			Док_XDTO.Дата = XMLСтрока(док.Ссылка.Дата);
			Док_XDTO.Номер = XMLСтрока(док.Ссылка.Номер);
			//Док_XDTO.ДатаВход = XMLСтрока(док.Ссылка.ДатаВходящегоДокумента);
			//Док_XDTO.НомерВход = XMLСтрока(док.Ссылка.НомерВходящегоДокумента);
			
			Организация_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","Организация"));
			Организация_XDTO.ИНН = XMLСтрока(док.Ссылка.Организация.ИНН);
			Организация_XDTO.КПП = XMLСтрока(док.Ссылка.Организация.КПП);
			Док_XDTO.Организация = Организация_XDTO;
			
			Контрагент_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","Организация"));
			Контрагент_XDTO.ИНН = XMLСтрока(док.Ссылка.Контрагент.ИНН);
			Контрагент_XDTO.КПП = XMLСтрока(док.Ссылка.Контрагент.КПП);
			Док_XDTO.Контрагент = Контрагент_XDTO;
			
			//Сумма за тару, в рублях (так как у нас один вид тары, поэтому одной суммой)
			Док_XDTO.Тара = XMLСтрока(Док.Тара);
			
			
			еСЛИ ЗначениеЗаполнено(док.СчетФактура) Тогда
				СФ_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","СчетФактура"));
				СФ_XDTO.ДатаСФ = XMLСтрока(док.СчетФактура.Дата);
				СФ_XDTO.НомерСФ = XMLСтрока(док.СчетФактура.Номер);
				СФ_XDTO.УИД = XMLСтрока(док.СчетФактура.УникальныйИдентификатор()); //тута должон быть УИД С/Ф
				Док_XDTO.СчетФактура = СФ_XDTO;
			КонецЕсли;

			
			Док_XDTO.СуммаДок = Док.Ссылка.СуммаДокумента;
			Док_XDTO.Комментарий = Док.Ссылка.Комментарий;
			
			ТабЧасть_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","ТабЧасть"));
			
			Товары=Док.Выбрать();
			Пока товары.Следующий() Цикл
				СтрокаТЧ_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","СтрокаТЧ"));
				СтрокаТЧ_XDTO.СтавкаНДС = XMLСтрока(ПолучитьИмяПеречисления(товары.СтавкаНДС,док.Ссылка.Дата));
				СтрокаТЧ_XDTO.СуммаНДС = XMLСтрока(товары.СуммаНДС);
				СтрокаТЧ_XDTO.Сумма = XMLСтрока(товары.Сумма);				
				ТабЧасть_XDTO.СтрокаТЧ.Добавить(СтрокаТЧ_XDTO);
			КонецЦикла;	
			Док_XDTO.ТабЧасть = ТабЧасть_XDTO;
			Документы_XDTO.ДокументЗагрузки.Добавить(Док_XDTO);
		КонецЦикла;
		ФабрикаXDTO.ЗаписатьXML(ЗаписьXML,Документы_XDTO);
	//Исключение
	//	Сообщить("Неудачка!");
	//КонецПопытки;
	ЗаписьXML.Закрыть();
	
КонецФункции


процедура ВыгрузитьВозвратыЛонг()
	ДатаВыгрузкиДляРеестров=ДеньВыгрузки;	
	МанагерВремТаблиц=Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Кон",КонецДня(ДатаВыгрузкиДляРеестров));
	Запрос.УстановитьПараметр("Нач",НачалоДня(ДатаВыгрузкиДляРеестров));
	Запрос.УстановитьПараметр("Производители",Справочники.ххх_Справочник.КонтрагентыПапкаПРОИЗВОДИТЕЛИ.Значение);
	Запрос.УстановитьПараметр("ВидАлкоголь",Справочники.ххх_Справочник.ВидНоменклатурыАлкоголь.Значение);
	//Запрос.МенеджерВременныхТаблиц=МанагерВремТаблиц;	
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	ЗакупкиТоваровОбороты.Регистратор.ххх_ИдЦентр КАК id,
        |	ЗакупкиТоваровОбороты.Поставщик.ххх_ИдЦентр КАК id_post,
        |	ЗакупкиТоваровОбороты.Регистратор.Комментарий КАК opis,
        |	ЗакупкиТоваровОбороты.Период КАК vrem,
        |	ЗакупкиТоваровОбороты.Период КАК dnumd,
        |	ВЫБОР
        |		КОГДА ЗакупкиТоваровОбороты.СуммаОборот < 0
        |			ТОГДА -ЗакупкиТоваровОбороты.СуммаОборот
        |		ИНАЧЕ ЗакупкиТоваровОбороты.СуммаОборот
        |	КОНЕЦ КАК summ,
        |	ЗакупкиТоваровОбороты.Номенклатура.ххх_ИдЦентр КАК id_tov,
        |	ВЫБОР
        |		КОГДА ЗакупкиТоваровОбороты.КоличествоОборот < 0
        |			ТОГДА -ЗакупкиТоваровОбороты.КоличествоОборот
        |		ИНАЧЕ ЗакупкиТоваровОбороты.КоличествоОборот
        |	КОНЕЦ КАК kol,
        |	ВЫРАЗИТЬ(ЗакупкиТоваровОбороты.СуммаОборот / ЗакупкиТоваровОбороты.КоличествоОборот КАК ЧИСЛО(10, 2)) КАК senz,
        |	ЗакупкиТоваровОбороты.Номенклатура.Производитель.ххх_ИдЦентр КАК Id_Pro,
        |	ЗакупкиТоваровОбороты.Регистратор.Номер КАК out_ref_number
        |ИЗ
        |	РегистрНакопления.ЗакупкиТоваров.Обороты(&Нач, &Кон, Регистратор, ) КАК ЗакупкиТоваровОбороты
        |ГДЕ
        |	ЗакупкиТоваровОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику";
    Результат = Запрос.Выполнить();
    ТаблицаЗначений = Результат.Выгрузить();
	кодировка = КодировкаТекста.ANSI;
	ТекстовыйФайлЗапись = Новый ЗаписьТекста(Путь+"reestrr_long.txt",Кодировка);  	
	если ТаблицаЗначений.Количество()>0 тогда	
		разделитель = "|";
	    колонкиТЗ=ТаблицаЗначений.колонки;
		й=0;
		мас=Новый массив;
		мас.Добавить(10);
		мас.Добавить(10);
		мас.Добавить(50);
		мас.Добавить(10);                  
		мас.Добавить(20);
		мас.Добавить(20);
		мас.Добавить(10);
		мас.Добавить(10);
		мас.Добавить(10);
		мас.Добавить(10);
		мас.Добавить(14);
		Для каждого колонка Из колонкиТЗ Цикл
			имя=колонка.Имя;
	        стрКолонки =""+ стрКолонки + СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Имя,мас[й]," ","Справа") + разделитель;
			й=й+1;
		КонецЦикла;            
		
		//Магазин=Справочники.ххх_Справочник.Магазин.Значение;
		ТекстовыйФайлЗапись.ЗаписатьСтроку(Магазин.Код+разделитель+Магазин.Наименование+разделитель+"*"+Строка(ДатаВыгрузкиДляРеестров)+"**********************************************************************************************************************************************************************************************");	
		текст="";
		ТекстовыйФайлЗапись.ЗаписатьСтроку(стрКолонки);
		для каждого запись из ТаблицаЗначений Цикл   
	        текст = //текст
			 СтроковыеФункцииКлиентСервер.ДополнитьСтроку(УбитьЛишнее(запись.id),мас[0]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.id_post,мас[1]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Лев(СтрЗаменить(запись.opis,Символы.ПС," "),50),мас[2]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Формат(запись.vrem,"ДФ=dd.MM.yyyy"),мас[3]," ","Справа")+разделитель	
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Формат(запись.dnumd,"ДФ=dd.MM.yyyy"),мас[4]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.summ,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),мас[5]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.id_tov,мас[6]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.kol,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),мас[7]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.senz,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),мас[8]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.id_Pro,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),мас[9]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.out_ref_number,мас[10]," ","Справа")+разделитель;
			ТекстовыйФайлЗапись.ЗаписатьСтроку(текст);//+Символы.ВК;
		КонецЦикла;	
		//ТекстовыйФайлЗапись.ЗаписатьСтроку(текст); 	
	КонецЕсли;
	ТекстовыйФайлЗапись.Закрыть();
КонецПРоцедуры

процедура ВыгрузитьВозвратыДляБухи()
	ДатаВыгрузкиДляРеестров=ДеньВыгрузки;	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Кон",КонецДня(ДатаВыгрузкиДляРеестров));
	Запрос.УстановитьПараметр("Нач",НачалоДня(ДатаВыгрузкиДляРеестров));
	Запрос.УстановитьПараметр("СтавкаБезНДС",Перечисления.СтавкиНДС.БезНДС);
	Запрос.УстановитьПараметр("Ставка18",Перечисления.СтавкиНДС.НДС18);
	Запрос.УстановитьПараметр("Ставка10",Перечисления.СтавкиНДС.НДС10);
	Запрос.УстановитьПараметр("Тара",Справочники.ххх_Справочник.ВидНоменклатурыТара.Значение);
	Запрос.Текст = 
	    "ВЫБРАТЬ
	    |	ВозвратТоваровПоставщикуТовары.Номенклатура КАК Номенклатура,
	    |	ВозвратТоваровПоставщикуТовары.Ссылка КАК Ссылка,
	    |	СУММА(ВозвратТоваровПоставщикуТовары.Сумма) КАК Сумма,
	    |	ВозвратТоваровПоставщикуТовары.СтавкаНДС КАК СтавкаНДС,
	    |	СУММА(ВозвратТоваровПоставщикуТовары.СуммаНДС) КАК СуммаНДС,
	    |	ВозвратТоваровПоставщикуТовары.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры
	    |ПОМЕСТИТЬ ГрупированноеТелоВозврата
	    |ИЗ
	    |	Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
	    |ГДЕ
	    |	ВозвратТоваровПоставщикуТовары.Ссылка.Проведен = ИСТИНА
	    |	И ВозвратТоваровПоставщикуТовары.Ссылка.Дата МЕЖДУ &Нач И &Кон
	    |
	    |СГРУППИРОВАТЬ ПО
	    |	ВозвратТоваровПоставщикуТовары.Номенклатура,
	    |	ВозвратТоваровПоставщикуТовары.Ссылка,
	    |	ВозвратТоваровПоставщикуТовары.Номенклатура.ВидНоменклатуры,
	    |	ВозвратТоваровПоставщикуТовары.СтавкаНДС
	    |;
	    |
	    |////////////////////////////////////////////////////////////////////////////////
	    |ВЫБРАТЬ
	    |	ЗакупкиТоваровОбороты.Регистратор.Номер КАК id,
	    |	ЗакупкиТоваровОбороты.Поставщик.ххх_ИдЦентр КАК id_post,
	    |	ЗакупкиТоваровОбороты.Поставщик.Наименование КАК naim,
	    |	ЗакупкиТоваровОбороты.Период КАК vrem,
	    |	ВЫРАЗИТЬ(ЗакупкиТоваровОбороты.Регистратор.Комментарий КАК СТРОКА(200)) КАК opis,
	    |	СУММА(ВЫБОР
	    |			КОГДА ГрупированноеТелоВозврата.ВидНоменклатуры <> &Тара
	    |				ТОГДА -ЗакупкиТоваровОбороты.СуммаОборот
	    |			ИНАЧЕ 0
	    |		КОНЕЦ) КАК summ,
	    |	ЗакупкиТоваровОбороты.Период КАК dnumd,
	    |	СУММА(ВЫБОР
	    |			КОГДА ГрупированноеТелоВозврата.СтавкаНДС = &СтавкаБезНДС
	    |				ТОГДА ГрупированноеТелоВозврата.СуммаНДС
	    |			ИНАЧЕ 0
	    |		КОНЕЦ) КАК sumnds0,
	    |	СУММА(ВЫБОР
	    |			КОГДА ГрупированноеТелоВозврата.СтавкаНДС = &Ставка10
	    |				ТОГДА ГрупированноеТелоВозврата.СуммаНДС
	    |			ИНАЧЕ 0
	    |		КОНЕЦ) КАК sumnds10,
	    |	СУММА(ВЫБОР
	    |			КОГДА ГрупированноеТелоВозврата.СтавкаНДС = &Ставка18
	    |				ТОГДА ГрупированноеТелоВозврата.СуммаНДС
	    |			ИНАЧЕ 0
	    |		КОНЕЦ) КАК sumnds18,
	    |	СУММА(ВЫБОР
	    |			КОГДА ГрупированноеТелоВозврата.ВидНоменклатуры = &Тара
	    |				ТОГДА -ЗакупкиТоваровОбороты.СуммаОборот
	    |			ИНАЧЕ 0
	    |		КОНЕЦ) КАК tara,
	    |	СчетФактураВыданный.Номер КАК numsf
	    |ИЗ
	    |	РегистрНакопления.ЗакупкиТоваров.Обороты(&Нач, &Кон, Регистратор, ) КАК ЗакупкиТоваровОбороты
	    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ГрупированноеТелоВозврата КАК ГрупированноеТелоВозврата
	    |		ПО ЗакупкиТоваровОбороты.Номенклатура = ГрупированноеТелоВозврата.Номенклатура
	    |			И ЗакупкиТоваровОбороты.Регистратор = ГрупированноеТелоВозврата.Ссылка
	    |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
	    |		ПО ЗакупкиТоваровОбороты.Регистратор = СчетФактураВыданный.ДокументОснование
	    |			И (СчетФактураВыданный.Проведен)
	    |ГДЕ
	    |	ЗакупкиТоваровОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	    |
	    |СГРУППИРОВАТЬ ПО
	    |	ВЫРАЗИТЬ(ЗакупкиТоваровОбороты.Регистратор.Комментарий КАК СТРОКА(200)),
	    |	ЗакупкиТоваровОбороты.Поставщик.ххх_ИдЦентр,
	    |	ЗакупкиТоваровОбороты.Поставщик.Наименование,
	    |	ЗакупкиТоваровОбороты.Период,
	    |	ЗакупкиТоваровОбороты.Регистратор.Номер,
	    |	СчетФактураВыданный.Номер,
	    |	ЗакупкиТоваровОбороты.Период";
	
		//Запрос.Текст = 
		//"ВЫБРАТЬ
		//|	ЗакупкиТоваровОбороты.Регистратор.ххх_ИдЦентр КАК id,
		//|	ЗакупкиТоваровОбороты.Поставщик.ххх_ИдЦентр КАК id_post,
		//|	ЗакупкиТоваровОбороты.Регистратор.Комментарий КАК opis,
		//|	ЗакупкиТоваровОбороты.Период КАК vrem,
		//|	ЗакупкиТоваровОбороты.Период КАК dnumd,
		//|	-ЗакупкиТоваровОбороты.СуммаОборот КАК summ,
		//|	ЗакупкиТоваровОбороты.Номенклатура.ххх_ИдЦентр КАК id_tov,
		//|	ЗакупкиТоваровОбороты.Поставщик.Наименование КАК naim,
		//|	ВЫБОР
		//|		КОГДА ВозвратТоваровПоставщикуТовары.СтавкаНДС = &СтавкаБезНДС
		//|			ТОГДА ВозвратТоваровПоставщикуТовары.СуммаНДС
		//|		ИНАЧЕ 0
		//|	КОНЕЦ КАК sumnds0,
		//|	ВЫБОР
		//|		КОГДА ВозвратТоваровПоставщикуТовары.СтавкаНДС = &Ставка10
		//|			ТОГДА ВозвратТоваровПоставщикуТовары.СуммаНДС
		//|		ИНАЧЕ 0
		//|	КОНЕЦ КАК sumnds10,
		//|	ВЫБОР
		//|		КОГДА ВозвратТоваровПоставщикуТовары.СтавкаНДС = &Ставка18
		//|			ТОГДА ВозвратТоваровПоставщикуТовары.СуммаНДС
		//|		ИНАЧЕ 0
		//|	КОНЕЦ КАК sumnds18,
		//|	0 КАК tara,
		//|	0 КАК numsf
		//|ИЗ
		//|	РегистрНакопления.ЗакупкиТоваров.Обороты(&Нач, &Кон, Регистратор, ) КАК ЗакупкиТоваровОбороты
		//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
		//|		ПО ЗакупкиТоваровОбороты.Номенклатура = ВозвратТоваровПоставщикуТовары.Номенклатура
		//|			И ЗакупкиТоваровОбороты.Регистратор = ВозвратТоваровПоставщикуТовары.Ссылка
		//|ГДЕ
		//|	ЗакупкиТоваровОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику";

    Результат = Запрос.Выполнить();
    ТаблицаЗначений = Результат.Выгрузить();
	кодировка = КодировкаТекста.Системная;
	ТекстовыйФайлЗапись = Новый ЗаписьТекста(Путь+"reestrr.txt",Кодировка);
	если ТаблицаЗначений.Количество()>0 тогда	
		разделитель = "|";
	    колонкиТЗ=ТаблицаЗначений.колонки;
		й=0;
		мас=Новый массив;
		мас.Добавить(10);
		мас.Добавить(10);
		мас.Добавить(50);
		мас.Добавить(20);                  
		мас.Добавить(50);
		мас.Добавить(15);
		мас.Добавить(10);
		мас.Добавить(15);
		мас.Добавить(15);
		мас.Добавить(15);
		мас.Добавить(15);
		мас.Добавить(10);
		Для каждого колонка Из колонкиТЗ Цикл
			имя=колонка.Имя;
	        стрКолонки =""+ стрКолонки + СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Имя,мас[й]," ","Справа") + разделитель;
			й=й+1;
		КонецЦикла; 
	    кодировка = КодировкаТекста.ANSI;
	                
		
		//Магазин=Справочники.ххх_Справочник.Магазин.Значение;
		ТекстовыйФайлЗапись.ЗаписатьСтроку(Магазин.Код+разделитель+Магазин.Наименование+разделитель+"*"+Строка(ДатаВыгрузкиДляРеестров)+"**********************************************************************************************************************************************************************************************");	
		текст="";
		ТекстовыйФайлЗапись.ЗаписатьСтроку(стрКолонки);
		й=0;
		ТаблицаЗначений=УбитьЛишнее(ТаблицаЗначений);
		для каждого запись из ТаблицаЗначений Цикл   
	        текст = //текст
			 СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Прав(запись.id,6),мас[0]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(
			?(ЗначениеЗаполнено(запись.id_post),запись.id_post,
			?(запись.naim="Бриз(База2)","1113","1114")
			),мас[1]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.naim,мас[2]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Формат(запись.vrem,"ДФ=dd.MM.yyyy"),мас[3]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.opis,мас[4]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.summ,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),мас[5]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.dnumd,"ДФ=dd.MM.yyyy")," ",""),мас[6]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.sumnds0,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),мас[7]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.sumnds10,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),мас[8]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.sumnds18,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),мас[9]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.tara,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),мас[10]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.numsf,мас[11]," ","Справа")+разделитель;
			ТекстовыйФайлЗапись.ЗаписатьСтроку(текст);//+Символы.ВК;
			й=й+1;
		КонецЦикла;	
		//ТекстовыйФайлЗапись.ЗаписатьСтроку(текст);
	КонецЕсли;
	ТекстовыйФайлЗапись.Закрыть();
КонецПРоцедуры

&НаКлиенте
Процедура ВыгрузитьСписания()
	ВыгрузитьСписанияНаСервере();
	ВыгрузитьСписанияДляБухиХМЛ();
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьСписанияНаСервере()
	ДатаВыгрузкиДляРеестров=ДеньВыгрузки;	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Кон",КонецДня(ДатаВыгрузкиДляРеестров));
	Запрос.УстановитьПараметр("Нач",НачалоДня(ДатаВыгрузкиДляРеестров));
	Запрос.УстановитьПараметр("Производство",Справочники.ххх_Справочник.СписаниеНаПроизводствоАналитикаХозОпер.Значение);	
	Запрос.УстановитьПараметр("СписаниеПОРевизии",Перечисления.ХозяйственныеОперации.СписаниеПоИнвентаризации);
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	СписаниеТоваров.номер КАК id,
        |	СписаниеТоваров.Ответственный КАК user,
        |	СписаниеТоваров.Дата КАК vrem,
        |	СписаниеТоваров.Комментарий КАК opis,
        |	СписаниеТоваров.СуммаДокумента КАК summ,
        |	СписаниеТоваров.Дата КАК dnumd
        |ИЗ
        |	Документ.СписаниеТоваров КАК СписаниеТоваров
        |ГДЕ
        |	СписаниеТоваров.Дата МЕЖДУ &нач И &кон
        |	И СписаниеТоваров.Проведен = ИСТИНА
        |	И СписаниеТоваров.АналитикаХозяйственнойОперации.ХозяйственнаяОперация <> &СписаниеПОРевизии";
    Результат = Запрос.Выполнить();
    ТаблицаЗначений = Результат.Выгрузить();
	кодировка = КодировкаТекста.Системная;
	ТекстовыйФайлЗапись = Новый ЗаписьТекста(Путь+"reestrs.txt",Кодировка); 
	
	если ТаблицаЗначений.Количество()>0 тогда	
		разделитель = "|";
	    колонкиТЗ=ТаблицаЗначений.колонки;
		й=0;
		мас=Новый массив;
		мас.Добавить(10);
		мас.Добавить(20);
		мас.Добавить(20);
		мас.Добавить(50);                  
		мас.Добавить(15);
		мас.Добавить(10);
		Для каждого колонка Из колонкиТЗ Цикл
			имя=колонка.Имя;
	        стрКолонки =""+ стрКолонки + СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Имя,мас[й]," ","Справа") + разделитель;
			й=й+1;
		КонецЦикла; 
	    кодировка = КодировкаТекста.ANSI;            
		
		//Магазин=Справочники.ххх_Справочник.Магазин.Значение;
		ТекстовыйФайлЗапись.ЗаписатьСтроку(Магазин.Код+разделитель+Магазин.Наименование+разделитель+"*"+Строка(ДатаВыгрузкиДляРеестров)+"**********************************************************************************************************************************************************************************************");	
		текст="";
		ТекстовыйФайлЗапись.ЗаписатьСтроку(стрКолонки);
		й=0;
		ТаблицаЗначений=УбитьЛишнее(ТаблицаЗначений);
		для каждого запись из ТаблицаЗначений Цикл   
	        текст = //текст
			 СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Прав(запись.id,6),мас[0]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.user,мас[1]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.vrem,мас[2]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(запись.opis,Символы.ВК, " "),мас[3]," ","Справа")+разделитель	
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.summ,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),мас[4]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Формат(запись.dnumd,"ДФ=dd.MM.yyyy"),мас[5]," ","Справа")+разделитель;
			ТекстовыйФайлЗапись.ЗаписатьСтроку(текст);//+Символы.ВК;
			й=й+1;
		КонецЦикла;	
		//ТекстовыйФайлЗапись.ЗаписатьСтроку(текст); 	
	КонецЕсли;
	ТекстовыйФайлЗапись.Закрыть(); 	
КонецПроцедуры

&НаСервере
Функция ВыгрузитьСписанияДляБухиХМЛ()	
	ДатаВыгрузкиДляРеестров=ДеньВыгрузки;
	Запрос=Новый запрос;
	Запрос.УстановитьПараметр("Кон",КонецДня(ДатаВыгрузкиДляРеестров));
	Запрос.УстановитьПараметр("Нач",НачалоДня(ДатаВыгрузкиДляРеестров));
	Запрос.УстановитьПараметр("СтавкаБезНДС",Перечисления.СтавкиНДС.БезНДС);
	Запрос.УстановитьПараметр("Ставка18",Перечисления.СтавкиНДС.НДС18);
	Запрос.УстановитьПараметр("Ставка10",Перечисления.СтавкиНДС.НДС10);
	Запрос.УстановитьПараметр("Тара",Справочники.ххх_Справочник.ВидНоменклатурыТара.Значение);

	Запрос.Текст="ВЫБРАТЬ
	             |	СписаниеТоваровТовары.Ссылка КАК Ссылка,
	             |	СУММА(ВЫБОР
	             |			КОГДА НЕ СписаниеТоваровТовары.Номенклатура.ВидНоменклатуры = &Тара
	             |				ТОГДА СписаниеТоваровТовары.Сумма
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК Сумма,
	             |	СУММА(ВЫБОР
	             |			КОГДА СписаниеТоваровТовары.Номенклатура.ВидНоменклатуры = &Тара
	             |				ТОГДА СписаниеТоваровТовары.Сумма
	             |			ИНАЧЕ 0
	             |		КОНЕЦ) КАК Тара,
	             |	СписаниеТоваровТовары.Номенклатура.СтавкаНДС КАК СтавкаНДС
	             |ИЗ
	             |	Документ.СписаниеТоваров.Товары КАК СписаниеТоваровТовары
	             |ГДЕ
	             |	СписаниеТоваровТовары.Ссылка.Дата МЕЖДУ &Нач И &Кон
	             |	И СписаниеТоваровТовары.Ссылка.Проведен
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	СписаниеТоваровТовары.Ссылка,
	             |	СписаниеТоваровТовары.Номенклатура.СтавкаНДС
	             |ИТОГИ
	             |	МАКСИМУМ(Тара)
	             |ПО
	             |	Ссылка";
	Док=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	//док = Объект.Документ;
	//УИД = док.УникальныйИдентификатор();
	ИмяВремФайла = ПолучитьИмяВременногоФайла("xml");
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл(Путь+"reestrs.xml","UTF-8");
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	магаз=справочники.Магазины.Выбрать();
	магаз.Следующий();
//	Попытка
		Документы_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","Документы"));
		Пока док.Следующий() Цикл		
			Док_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","Документ"));
			Док_XDTO.ВидОперации = ?(док.ссылка.АналитикаХозяйственнойОперации=справочники.ххх_Справочник.СписаниеНаПроизводствоАналитикаХозОпер.Значение,
					XMLСтрока("ПроизвСписание"),
					XMLСтрока("Списание"));
			Док_XDTO.Магазин = XMLСтрока(магаз.Код);	// код магазина
			Док_XDTO.УИД = XMLСтрока(СокрЛП(док.Ссылка.УникальныйИдентификатор()));
			Док_XDTO.Дата = XMLСтрока(док.Ссылка.Дата);
			Док_XDTO.Номер = XMLСтрока(док.Ссылка.Номер);
			//Док_XDTO.ДатаВход = XMLСтрока(док.Ссылка.ДатаВходящегоДокумента);
			//Док_XDTO.НомерВход = XMLСтрока(док.Ссылка.НомерВходящегоДокумента);
			
			Организация_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","Организация"));
			Организация_XDTO.ИНН = XMLСтрока(док.Ссылка.Организация.ИНН);
			Организация_XDTO.КПП = XMLСтрока(док.Ссылка.Организация.КПП);
			Док_XDTO.Организация = Организация_XDTO;
			//
			//Контрагент_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","Организация"));
			//Контрагент_XDTO.ИНН = XMLСтрока(док.Ссылка.Контрагент.ИНН);
			//Контрагент_XDTO.КПП = XMLСтрока(док.Ссылка.Контрагент.КПП);
			//Док_XDTO.Контрагент = Контрагент_XDTO;
			
			//Сумма за тару, в рублях (так как у нас один вид тары, поэтому одной суммой)
			Док_XDTO.Тара = XMLСтрока(Док.Тара);
			
			//
			//еСЛИ ЗначениеЗаполнено(док.СчетФактура) Тогда
			//	СФ_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","СчетФактура"));
			//	СФ_XDTO.ДатаСФ = XMLСтрока(док.СчетФактура.Дата);
			//	СФ_XDTO.НомерСФ = XMLСтрока(док.СчетФактура.Номер);
			//	СФ_XDTO.УИД = XMLСтрока(док.СчетФактура.УникальныйИдентификатор()); //тута должон быть УИД С/Ф
			//	Док_XDTO.СчетФактура = СФ_XDTO;
			//КонецЕсли;

			
			Док_XDTO.СуммаДок = Док.Ссылка.СуммаДокумента;
			Док_XDTO.Комментарий = Док.Ссылка.Комментарий+" Аналитика: "+Строка(док.ссылка.АналитикаХозяйственнойОперации);
			
			ТабЧасть_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","ТабЧасть"));
			
			Товары=Док.Выбрать();
			Пока товары.Следующий() Цикл
				СтрокаТЧ_XDTO = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("Яблоко.Розница","СтрокаТЧ"));
				Если док.Ссылка.Дата>='20190101' Тогда
					СтрокаТЧ_XDTO.СтавкаНДС = XMLСтрока(ПолучитьИмяПеречисления(товары.СтавкаНДС,док.Ссылка.Дата));
				ИначеЕсли товары.СтавкаНДС=Перечисления.СтавкиНДС.НДС20 и док.Ссылка.Дата<'20190101' Тогда
					СтрокаТЧ_XDTO.СтавкаНДС = XMLСтрока(ПолучитьИмяПеречисления(перечисления.СтавкиНДС.НДС18,док.Ссылка.Дата));
				Иначе
					СтрокаТЧ_XDTO.СтавкаНДС = XMLСтрока(ПолучитьИмяПеречисления(товары.СтавкаНДС,док.Ссылка.Дата));
				КонецЕсли;
//				СтрокаТЧ_XDTO.СуммаНДС = XMLСтрока(товары.СуммаНДС);
				СтрокаТЧ_XDTO.Сумма = XMLСтрока(товары.Сумма);				
				ТабЧасть_XDTO.СтрокаТЧ.Добавить(СтрокаТЧ_XDTO);
			КонецЦикла;	
			Док_XDTO.ТабЧасть = ТабЧасть_XDTO;
			Документы_XDTO.ДокументЗагрузки.Добавить(Док_XDTO);
		КонецЦикла;
		ФабрикаXDTO.ЗаписатьXML(ЗаписьXML,Документы_XDTO);
	//Исключение
	//	Сообщить("Неудачка!");
	//КонецПопытки;
	ЗаписьXML.Закрыть();
	
КонецФункции

&НаКлиенте
Процедура ВыгрузитьРеализации()
	ВыгрузитьРеализацииНаСервере();
	ВыгрузитьРеализацииДляБухиХМЛ();
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьРеализацииНаСервере()
	ДатаВыгрузкиДляРеестров=ДеньВыгрузки;	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Кон",КонецДня(ДатаВыгрузкиДляРеестров));
	Запрос.УстановитьПараметр("Нач",НачалоДня(ДатаВыгрузкиДляРеестров));
	Запрос.УстановитьПараметр("Розн",Справочники.ххх_Справочник.Магазин.Значение.ПравилоЦенообразования.ВидЦен);
	Запрос.УстановитьПараметр("СтавкаБезНДС",Перечисления.СтавкиНДС.БезНДС);
	Запрос.УстановитьПараметр("Ставка18",Перечисления.СтавкиНДС.НДС18);
	Запрос.УстановитьПараметр("Ставка10",Перечисления.СтавкиНДС.НДС10);	
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	ПродажиОбороты.Регистратор.Номер КАК id,
        |	РеализацияТоваровТовары.Ссылка.Контрагент.ххх_ИдЦентр КАК id_post,
        |	РеализацияТоваровТовары.Ссылка.Контрагент.Наименование КАК naim,
        |	ПродажиОбороты.Период КАК vrem,
        |	ВЫРАЗИТЬ(РеализацияТоваровТовары.Ссылка.Комментарий КАК СТРОКА(50)) КАК opis,
        |	СУММА(РеализацияТоваровТовары.Сумма) КАК summ,
        |	ПродажиОбороты.Период КАК dnumd,
        |	СУММА(ВЫБОР
        |			КОГДА РеализацияТоваровТовары.СтавкаНДС = &СтавкаБезНДС
        |				ТОГДА РеализацияТоваровТовары.СуммаНДС
        |			ИНАЧЕ 0
        |		КОНЕЦ) КАК sumnds0,
        |	СУММА(ВЫБОР
        |			КОГДА РеализацияТоваровТовары.СтавкаНДС = &Ставка10
        |				ТОГДА РеализацияТоваровТовары.СуммаНДС
        |			ИНАЧЕ 0
        |		КОНЕЦ) КАК sumnds10,
        |	СУММА(ВЫБОР
        |			КОГДА РеализацияТоваровТовары.СтавкаНДС = &Ставка18
        |				ТОГДА РеализацияТоваровТовары.СуммаНДС
        |			ИНАЧЕ 0
        |		КОНЕЦ) КАК sumnds18
        |ИЗ
        |	РегистрНакопления.Продажи.Обороты(&Нач, &Кон, Регистратор, ) КАК ПродажиОбороты
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваров.Товары КАК РеализацияТоваровТовары
        |		ПО ПродажиОбороты.Номенклатура = РеализацияТоваровТовары.Номенклатура
        |			И ПродажиОбороты.Регистратор = РеализацияТоваровТовары.Ссылка
        |
        |СГРУППИРОВАТЬ ПО
        |	ВЫРАЗИТЬ(РеализацияТоваровТовары.Ссылка.Комментарий КАК СТРОКА(50)),
        |	РеализацияТоваровТовары.Ссылка.Контрагент.Наименование,
        |	РеализацияТоваровТовары.Ссылка.Контрагент.ххх_ИдЦентр,
        |	ПродажиОбороты.Период,
        |	ПродажиОбороты.Регистратор.Номер,
        |	ПродажиОбороты.Период";
    Результат = Запрос.Выполнить();
    ТаблицаЗначений = Результат.Выгрузить();
	кодировка = КодировкаТекста.Системная;
	ТекстовыйФайлЗапись = Новый ЗаписьТекста(Путь+"reestrreal.txt",Кодировка); 
	
	если ТаблицаЗначений.Количество()>0 тогда	
		разделитель = "|";
	    колонкиТЗ=ТаблицаЗначений.колонки;
		й=0;
		мас=Новый массив;
		мас.Добавить(10);
		мас.Добавить(10);
		мас.Добавить(50);
		мас.Добавить(20);                  
		мас.Добавить(50);
		мас.Добавить(15);
		мас.Добавить(10);
		мас.Добавить(15);
		мас.Добавить(15);
		мас.Добавить(15);
		Для каждого колонка Из колонкиТЗ Цикл
			имя=колонка.Имя;
	        стрКолонки =""+ стрКолонки + СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Имя,мас[й]," ","Справа") + разделитель;
			й=й+1;
		КонецЦикла; 
	    кодировка = КодировкаТекста.ANSI;
	                
		
		//Магазин=Справочники.ххх_Справочник.Магазин.Значение;
		ТекстовыйФайлЗапись.ЗаписатьСтроку(Магазин.Код+разделитель+Магазин.Наименование+разделитель+"*"+Строка(ДатаВыгрузкиДляРеестров)+"**********************************************************************************************************************************************************************************************");	
		текст="";
		ТекстовыйФайлЗапись.ЗаписатьСтроку(стрКолонки);
		й=0;
		ТаблицаЗначений=УбитьЛишнее(ТаблицаЗначений);
		для каждого запись из ТаблицаЗначений Цикл   
	        текст = //текст
			 СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Прав(запись.id,6),мас[0]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.id_post,мас[1]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.naim,мас[2]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(запись.vrem,мас[3]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(запись.opis,Символы.ПС," "),мас[4]," ","Справа")+разделитель				
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.summ,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),мас[5]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.dnumd,"ДФ=dd.MM.yyyy")," ",""),мас[6]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.sumnds0,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),мас[7]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.sumnds10,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),мас[8]," ","Справа")+разделитель
			+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗаменить(Формат(запись.sumnds18,"ЧРД=.; ЧРГ=''; ЧГ=0")," ",""),мас[9]," ","Справа")+разделитель;
			й=й+1;
			ТекстовыйФайлЗапись.ЗаписатьСтроку(текст);//+Символы.ВК;
		КонецЦикла;	
		//ТекстовыйФайлЗапись.ЗаписатьСтроку(текст);
		
	КонецЕсли;
	ТекстовыйФайлЗапись.Закрыть(); 	

КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьДляБухгалтерии()
	Если не РазрешеноВыгружать тогда
		возврат
	КонецЕсли;

	ВыгрузитьПоступления();
	ВыгрузитьРеализации();
	ВыгрузитьСписания();
	ВыгрузитьВозвраты();
	ОтправитьВПочтуДляБухгалтерииНаСервере()
КонецПроцедуры

Процедура ОтправитьВПочтуДляБухгалтерииНаСервере()
	УдалитьФайлы("C:\Бонусы\Reestr.zip");
	
	Зап=Новый ЗаписьZipФайла("C:\Бонусы\Reestr.zip");
	Зап.Добавить("C:\Бонусы\reestrp.txt");
	Зап.Добавить("C:\Бонусы\reestrp.xml");
	Зап.Добавить("C:\Бонусы\reestrp_long.txt");
	Зап.Добавить("C:\Бонусы\reestrr.txt");
	Зап.Добавить("C:\Бонусы\reestrr.xml");
	Зап.Добавить("C:\Бонусы\reestrr_long.txt");
	Зап.Добавить("C:\Бонусы\reestrreal.txt");
	Зап.Добавить("C:\Бонусы\reestrreal.xml");
	Зап.Добавить("C:\Бонусы\reestrs.txt");
	Зап.Добавить("C:\Бонусы\reestrs.xml");
	Зап.Записать();
		
	Магаз=Справочники.Магазины.Выбрать();
	Магаз.Следующий();
	
	Профиль = Новый ИнтернетПочтовыйПрофиль;
	Профиль.АдресСервераSMTP = Магаз.ххх_АдресСервераSMTP;
	Профиль.ПортIMAP = Магаз.ххх_ПортIMAP; 	
	Профиль.ПользовательSMTP = Магаз.ххх_МагазинскиаяПочта;	
	Профиль.ПарольSMTP = Магаз.ххх_ПарольSMTP;
	
	Сообщение = Новый ИнтернетПочтовоеСообщение ;
	Сообщение.Вложения.Добавить("C:\Бонусы\Reestr.zip");
	Сообщение.Получатели.Добавить(Магаз.ххх_ПочтаДляОтправвкиРеестров);
	Сообщение.Тема ="Реестры "+ЗаголовокПисьма;
	Сообщение.ИмяОтправителя="МрРобот";
	Сообщение.Отправитель=Магаз.ххх_МагазинскиаяПочта;
	

	
    Почта = Новый ИнтернетПочта();
	Почта.Подключиться(Профиль);
	Почта.Послать(Сообщение);
	Почта.Отключиться();

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если РольДоступна("ПолныеПрава") Тогда
		Элементы.ВыгрузитьВОфис.Видимость=истина;
	КонецЕсли;
	Запрос=Новый запрос;
	Запрос.Текст="ВЫБРАТЬ
	       |	Магазины.Ссылка КАК Ссылка
	       |ИЗ
	       |	Справочник.Магазины КАК Магазины
	       |ГДЕ
	       |	Магазины.ххх_ИнтернетМагазин";
	Выборка=запрос.Выполнить().Выбрать();
	Если выборка.Следующий() Тогда
		ЕстьИМ=Истина;
	КонецЕсли;
	Если не ЕстьИМ Тогда
		Элементы.ЗаголовокПисьмаИМ.Видимость=Ложь;
	КонецЕсли;
	Путь=Справочники.ххх_Справочник.ПутьДляВыгрузкиБонусовБух.значение;
	ЗаголовокПисьма=Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy")+". ";	
	РазрешеноВыгружать=Ложь;
	магазин=Справочники.ххх_Справочник.Магазин.Значение;
КонецПроцедуры

Функция УбитьЛишнее(Объект)
	Если ТипЗнч(Объект)=Тип("ТаблицаЗначений") Тогда
		тз=Объект;
		й=0;
		Для каждого стр из Тз Цикл
			Й=0;
			для каждого ячейка из стр Цикл
				стр[Й]=Стрзаменить(СокрлП(ячейка)," ","");
				стр[Й]=Стрзаменить(СокрлП(ячейка)," ","");
				стр[Й]=Стрзаменить(СокрлП(ячейка)," ","");
				й=й+1;
			КонецЦикла
		КонецЦикла;
		возврат Тз;
	ИначеЕСли ТипЗнч(Объект)=Тип("Число") Тогда
		
		Объект1=Строка(Объект);
		Объект1=Стрзаменить(СокрлП(Объект1)," ","");
		Объект1=Стрзаменить(СокрлП(Объект1)," ","");
		Объект1=Стрзаменить(СокрлП(Объект1)," ","");
		Возврат Объект1;
		
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ВыгрузитьВсе1(Команда)
	Если не РазрешеноВыгружать тогда
		возврат
	КонецЕсли;
	//ВыгрузитьДляБухгалтерии();
	//ВыгрузитьБонусы();
КонецПроцедуры

&НаКлиенте
Процедура НомерСменыВидимыйКостыльОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	Попытка 
		йцу=Число(СокрЛП(Текст));
	Исключение
		Сообщить("В номере смены не может быть букв!");
		возврат;
	КонецПопытки;
	НомерСмены=Число(СокрЛП(Текст));
	НомерСменыВидимыйКостыльМестныйПарам=СокрЛП(Текст);
	ДеньВыгрузки=Дата("20"+Прав(НомерСменыВидимыйКостыльМестныйПарам,2),Лев(Прав(НомерСменыВидимыйКостыльМестныйПарам,4),2),Лев(НомерСменыВидимыйКостыльМестныйПарам,2));
	НомерСменыВидимыйКостыль=Текст;
	РазрешеноВыгружать=Истина;
КонецПроцедуры


процедура выгрузкаВОфисХМЛ(Знач ИмяФайла)
	
	ЗаписьXML = Новый ЗаписьXML;
	Если не ЗначениеЗаполнено(ИмяФайла) Тогда
		ИмяФайла=Формат(ТекущаяДата(),"ДФ=yyMMddHHmmss")+".xml";
	КонецЕсли;
	ЗаписьXML.ОткрытьФайл("C:\"+ИмяФайла,"UTF-8");

	//	
	НашПакет=ФабрикаXDTO.пакеты.получить("url:\\apple-office.ru");
	//		
	СвойствоRoot=НашПакет.КорневыеСвойства.Получить("root");
	СвойствоChecks=СвойствоRoot.Тип.Свойства.Получить("checks");
	СвойствоCheck=СвойствоChecks.Тип.Свойства.Получить("check");
	СвойствоDocuments=СвойствоRoot.Тип.Свойства.Получить("documents");
	СвойствоDocument=СвойствоDocuments.Тип.Свойства.Получить("document");

	
	
	rootXDTO = ФабрикаXDTO.Создать(СвойствоRoot.Тип);
	documentsXDTO=ФабрикаXDTO.Создать(СвойствоDocuments.Тип);
	rootXDTO.documents=documentsXDTO;
	
	ChecksXDTO=ФабрикаXDTO.Создать(СвойствоChecks.Тип);
	rootXDTO.checks=ChecksXDTO;


	
	выгрузитьПоступленияХМЛ(documentsXDTO,СвойствоDocument);
	выгрузитьВозвратыХМЛ(documentsXDTO,СвойствоDocument);
	выгрузитьЧекиХМЛ(ChecksXDTO,СвойствоCheck);
	
	
	ФабрикаXDTO.ЗаписатьXML(ЗаписьXML,rootXDTO,"root");
	ЗаписьXML.Закрыть();
	
	АдресСайта = "79.172.36.38/" ;
	Логин = "1c";
	Пароль = "!MegaRoot";

	ИмяКаталога = Магазин.ххх_КаталогФТПВыгрузки;
	FTPСоединение = Новый FTPСоединение(АдресСайта,,Логин,Пароль,,,,);
	FTPСоединение.УстановитьТекущийКаталог(ИмяКаталога);
	
	FTPСоединение.Записать(
        "C:\"+ИмяФайла, // что записываем
        ИмяФайла // куда записываем
    );


КонецПроцедуры

процедура выгрузитьПоступленияХМЛ(documentsXDTO,СвойствоDocument)
	
	ДатаВыгрузкиДляРеестров=ДеньВыгрузки;	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Кон",КонецДня(ДатаВыгрузкиДляРеестров));
	Запрос.УстановитьПараметр("Нач",НачалоДня(ДатаВыгрузкиДляРеестров));
	Запрос.УстановитьПараметр("Производители",Справочники.ххх_Справочник.КонтрагентыПапкаПРОИЗВОДИТЕЛИ.Значение);
	Запрос.УстановитьПараметр("Розн",Справочники.ххх_Справочник.Магазин.Значение.ПравилоЦенообразования.ВидЦен);
	Запрос.УстановитьПараметр("ПустаяСсылкаОргЕГАИС",Справочники.КлассификаторОрганизацийЕГАИС.ПустаяСсылка());
	Запрос.УстановитьПараметр("ВидАлкоголь",Справочники.ххх_Справочник.ВидНоменклатурыАлкоголь.Значение);
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	ЗакупкиТоваровОбороты.Регистратор.ххх_ИдЦентр КАК id,
        |	ЗакупкиТоваровОбороты.Поставщик.ххх_ИдЦентр КАК id_post,
        |	ЗакупкиТоваровОбороты.Регистратор.НомерВходящегоДокумента КАК numvxod,
        |	ЗакупкиТоваровОбороты.Регистратор.ДатаВходящегоДокумента КАК dnumvxod,
        |	ЗакупкиТоваровОбороты.Период КАК dnum,
        |	ПоступлениеТоваровТовары.Количество КАК kol,
        |	НЕОПРЕДЕЛЕНО КАК diffenition,
        |	НЕОПРЕДЕЛЕНО КАК GTD,
        |	ВЫБОР
        |		КОГДА ПоступлениеТоваровТовары.Номенклатура.ВидНоменклатуры = &ВидАлкоголь
        |			ТОГДА Контрагенты.ххх_ИдЦентр
        |		ИНАЧЕ ПоступлениеТоваровТовары.Номенклатура.Производитель.ххх_ИдЦентр
        |	КОНЕЦ КАК Id_Pro,
        |	0 КАК black,
        |	ЗакупкиТоваровОбороты.Регистратор.Ссылка КАК РегистраторСсылка,
        |	ЗакупкиТоваровОбороты.Номенклатура КАК Номенклатура,
        |	ЗакупкиТоваровОбороты.Номенклатура.ххх_ИдЦентр КАК id_tov,
        |	ПоступлениеТоваровТовары.Цена КАК cenz,
        |	ПоступлениеТоваровТовары.Ссылка КАК Ссылка,
        |	ПоступлениеТоваровТовары.Сумма КАК Сумма,
        |	ПоступлениеТоваровТовары.НомерСтроки КАК НомерСтроки
        |ПОМЕСТИТЬ йцукен
        |ИЗ
        |	РегистрНакопления.ЗакупкиТоваров.Обороты(&Нач, &Кон, Регистратор, ) КАК ЗакупкиТоваровОбороты
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
        |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
        |			ПО (ВЫБОР
        |					КОГДА ПоступлениеТоваровТовары.АлкогольнаяПродукция.Импортер = &ПустаяСсылкаОргЕГАИС
        |						ТОГДА ПоступлениеТоваровТовары.АлкогольнаяПродукция.Производитель.ИНН = Контрагенты.ИНН
        |					ИНАЧЕ ПоступлениеТоваровТовары.АлкогольнаяПродукция.Импортер.ИНН = Контрагенты.ИНН
        |				КОНЕЦ)
        |				И (ВЫБОР
        |					КОГДА ПоступлениеТоваровТовары.АлкогольнаяПродукция.Импортер = &ПустаяСсылкаОргЕГАИС
        |						ТОГДА ПоступлениеТоваровТовары.АлкогольнаяПродукция.Производитель.КПП = Контрагенты.КПП
        |					ИНАЧЕ ПоступлениеТоваровТовары.АлкогольнаяПродукция.Импортер.КПП = Контрагенты.КПП
        |				КОНЕЦ)
        |				И (Контрагенты.Ссылка В ИЕРАРХИИ (&Производители))
        |				И (Контрагенты.ИНН <> """")
        |				И (Контрагенты.КПП <> """")
        |		ПО ЗакупкиТоваровОбороты.Номенклатура = ПоступлениеТоваровТовары.Номенклатура
        |			И ЗакупкиТоваровОбороты.Регистратор = ПоступлениеТоваровТовары.Ссылка
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	йцу.id + 150000000 КАК id,
        |	йцу.id_post КАК id_post,
        |	йцу.numvxod КАК numvxod,
        |	йцу.dnumvxod КАК dnumvxod,
        |	йцу.dnum КАК dnum,
        |	йцу.id_tov КАК id_tov,
        |	йцу.kol КАК kol,
        |	йцу.cenz КАК senz,
        |	МАКСИМУМ(УстановкаЦенНоменклатурыТовары.Цена) КАК senr,
        |	йцу.diffenition КАК diffenition,
        |	йцу.GTD КАК GTD,
        |	ЕСТЬNULL(йцу.Id_Pro, 0) КАК Id_Pro,
        |	йцу.black КАК black,
        |	йцу.Ссылка КАК Поступление,
        |	йцу.Сумма КАК Сумма,
        |	йцу.НомерСтроки КАК НомерСтроки
        |ИЗ
        |	йцукен КАК йцу
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УстановкаЦенНоменклатуры.Товары КАК УстановкаЦенНоменклатурыТовары
        |		ПО йцу.РегистраторСсылка = УстановкаЦенНоменклатурыТовары.Ссылка.ДокументОснование
        |			И йцу.Номенклатура = УстановкаЦенНоменклатурыТовары.Номенклатура
        |			И (УстановкаЦенНоменклатурыТовары.ВидЦены = &Розн)
        |ГДЕ
        |	УстановкаЦенНоменклатурыТовары.Ссылка.Проведен
        |
        |СГРУППИРОВАТЬ ПО
        |	йцу.GTD,
        |	йцу.Ссылка,
        |	йцу.dnum,
        |	йцу.id_post,
        |	йцу.diffenition,
        |	йцу.dnumvxod,
        |	йцу.id_tov,
        |	йцу.numvxod,
        |	йцу.id + 150000000,
        |	йцу.kol,
        |	йцу.cenz,
        |	ЕСТЬNULL(йцу.Id_Pro, 0),
        |	йцу.black,
        |	йцу.Сумма,
        |	йцу.НомерСтроки
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	ПоступлениеТоваровТовары.Ссылка.ххх_ИдЦентр + 150000000,
        |	ПоступлениеТоваровТовары.Ссылка.Контрагент.ххх_ИдЦентр,
        |	ПоступлениеТоваровТовары.Ссылка.НомерВходящегоДокумента,
        |	ПоступлениеТоваровТовары.Ссылка.ДатаВходящегоДокумента,
        |	ПоступлениеТоваровТовары.Ссылка.Дата,
        |	ПоступлениеТоваровТовары.Номенклатура.ххх_ИдЦентр,
        |	ПоступлениеТоваровТовары.Количество,
        |	0,
        |	0,
        |	НЕОПРЕДЕЛЕНО,
        |	НЕОПРЕДЕЛЕНО,
        |	ЕСТЬNULL(ВЫБОР
        |			КОГДА ПоступлениеТоваровТовары.Номенклатура.ВидНоменклатуры = &ВидАлкоголь
        |				ТОГДА Контрагенты.ххх_ИдЦентр
        |			ИНАЧЕ ПоступлениеТоваровТовары.Номенклатура.Производитель.ххх_ИдЦентр
        |		КОНЕЦ, 0),
        |	0,
        |	ПоступлениеТоваровТовары.Ссылка,
        |	ПоступлениеТоваровТовары.Сумма,
        |	NULL
        |ИЗ
        |	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
        |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
        |		ПО (ВЫБОР
        |				КОГДА ПоступлениеТоваровТовары.АлкогольнаяПродукция.Импортер = &ПустаяСсылкаОргЕГАИС
        |					ТОГДА ПоступлениеТоваровТовары.АлкогольнаяПродукция.Производитель.ИНН = Контрагенты.ИНН
        |				ИНАЧЕ ПоступлениеТоваровТовары.АлкогольнаяПродукция.Импортер.ИНН = Контрагенты.ИНН
        |			КОНЕЦ)
        |			И (ВЫБОР
        |				КОГДА ПоступлениеТоваровТовары.АлкогольнаяПродукция.Импортер = &ПустаяСсылкаОргЕГАИС
        |					ТОГДА ПоступлениеТоваровТовары.АлкогольнаяПродукция.Производитель.КПП = Контрагенты.КПП
        |				ИНАЧЕ ПоступлениеТоваровТовары.АлкогольнаяПродукция.Импортер.КПП = Контрагенты.КПП
        |			КОНЕЦ)
        |			И (Контрагенты.Ссылка В ИЕРАРХИИ (&Производители))
        |			И (Контрагенты.ИНН <> """")
        |			И (Контрагенты.КПП <> """")
        |ГДЕ
        |	ПоступлениеТоваровТовары.Ссылка.Проведен
        |	И ПоступлениеТоваровТовары.Ссылка.ххх_ФиктивнаяНакладная
        |	И ПоступлениеТоваровТовары.Ссылка.Дата МЕЖДУ &Нач И &Кон
        |
        |УПОРЯДОЧИТЬ ПО
        |	Id_Pro
        |ИТОГИ ПО
        |	Поступление";
    Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	Пока выборка.Следующий() Цикл
		
		documentXDTO=ФабрикаXDTO.Создать(СвойствоDocument.Тип);
		
		СвойствоСontractor=СвойствоDocument.Тип.Свойства.получить("contractor");
		СвойствоInvoice=СвойствоDocument.Тип.Свойства.получить("invoice");
		СвойствоItems=СвойствоDocument.Тип.Свойства.получить("items");
		СвойствоOrganization=СвойствоDocument.Тип.Свойства.получить("organization");
		СвойствоShop=СвойствоDocument.Тип.Свойства.получить("shop");
		
		
		СontractorXDTO=ФабрикаXDTO.Создать(СвойствоСontractor.Тип);
		InvoiceXDTO=ФабрикаXDTO.Создать(СвойствоInvoice.Тип);
		ItemsXDTO=ФабрикаXDTO.Создать(СвойствоItems.Тип);
		OrganizationXDTO=ФабрикаXDTO.Создать(СвойствоOrganization.Тип);
		ShopXDTO=ФабрикаXDTO.Создать(СвойствоShop.Тип);

		documentXDTO.Items=ItemsXDTO;
		documentXDTO.Shop=ShopXDTO;
		documentXDTO.contractor=СontractorXDTO;

		documentXDTO.black=выборка.Поступление.ххх_ФиктивнаяНакладная;
		documentXDTO.comment=выборка.Поступление.Комментарий;
		documentXDTO.date=выборка.Поступление.Дата;
		documentXDTO.dateIn=выборка.Поступление.ДатаВходящегоДокумента;
		documentXDTO.docAmount=выборка.Поступление.СуммаДокумента;
		documentXDTO.guid=Строка(выборка.Поступление.УникальныйИдентификатор());
		documentXDTO.number1C=выборка.Поступление.номер;
		documentXDTO.numberIn=выборка.Поступление.НомерВходящегоДокумента;
		documentXDTO.operationType="Поступление";
		
		СontractorXDTO.id=выборка.Поступление.контрагент.ххх_ИдЦентр;
		ShopXDTO.id=выборка.Поступление.Магазин.код;
		
		Товары=Выборка.Выбрать();
		
		СвойствоItem=СвойствоItems.Тип.Свойства.получить("item");
		
		Пока товары.Следующий() Цикл
			
			ItemXDTO=ФабрикаXDTO.Создать(СвойствоItem.Тип);

			ItemXDTO.Id=товары.id;
			ItemXDTO.amount=товары.сумма;
			ItemXDTO.idManufacturer=товары.id_pro;
			ItemXDTO.itemId=товары.id_tov;
			ItemXDTO.pricePurchase=товары.senz;
			ItemXDTO.priceRetail=товары.senr;
			ItemXDTO.quantity=товары.kol;
			
			ItemsXDTO.item.добавить(ItemXDTO);
		КонецЦикла;
		
		documentsXDTO.document.добавить(documentXDTO);
		
	КонецЦикла;
		
КонецПроцедуры



процедура выгрузитьЧекиХМЛ(ChecksXDTO,СвойствоCheck)
	
Запрос = Новый Запрос;
	//Запрос.УстановитьПараметр("й18",Перечисления.СтавкиНДС.НДС18);
	//Запрос.УстановитьПараметр("й10",Перечисления.СтавкиНДС.НДС10);
	ДатаВыгрузкиДляРеестров=НачалоДня(НачалоДня(ДеньВыгрузки)-1);
	//Запрос.УстановитьПараметр("Кон",КонецДня(ДатаВыгрузкиДляРеестров));
	//Запрос.УстановитьПараметр("Нач",НачалоДня(ДатаВыгрузкиДляРеестров));
	Запрос.УстановитьПараметр("НомерСменыККМ",НомерСмены);
	Запрос.УстановитьПараметр("Магазин",магазин);
	Запрос.УстановитьПараметр("АналитикаХозяйственнойОперации",Справочники.ххх_Справочник.АналитикаХозОперРеализацияСИнтернетМагазина.Значение);
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	ЧекККМ.ххх_ИдЦентр КАК id,
        |	ЧекККМ.КассаККМ.Код КАК id_cassa,
        |	ЧекККМ.НомерЧекаККМ КАК nchek,
        |	ЧекККМ.СуммаДокумента КАК summa,
        |	ВЫБОР
        |		КОГДА ЧекККМ.ДисконтнаяКарта.ПроцентСкидки = 0
        |			ТОГДА ""0""
        |		ИНАЧЕ ЧекККМ.ДисконтнаяКарта.ПроцентСкидки
        |	КОНЕЦ КАК skid,
        |	СУММА(ЕСТЬNULL(ЧекККМСкидкиНаценки.Сумма, 0)) КАК sumskid,
        |	ВЫБОР
        |		КОГДА ЕСТЬNULL(ЧекККМ.ДисконтнаяКарта.КодКарты, """") = """"
        |			ТОГДА 0
        |		ИНАЧЕ ЧекККМ.ДисконтнаяКарта.КодКарты
        |	КОНЕЦ КАК numcard,
        |	ЧекККМ.Дата КАК vrem,
        |	ЧекККМ.Продавец.Наименование КАК naim,
        |	ЧекККМ.НомерСменыККМ КАК numsme,
        |	ЧекККМ.ВидОперации КАК ВидОперации,
        |	ЧекККМ.Ссылка КАК Ссылка
        |ПОМЕСТИТЬ йцу
        |ИЗ
        |	Документ.ЧекККМ КАК ЧекККМ
        |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЧекККМ.СкидкиНаценки КАК ЧекККМСкидкиНаценки
        |		ПО (ЧекККМСкидкиНаценки.Ссылка = ЧекККМ.Ссылка)
        |			И (ЧекККМСкидкиНаценки.Ссылка.Проведен = ИСТИНА)
        |			И (ЧекККМ.Проведен = ИСТИНА)
        |			И (ЧекККМ.НомерСменыККМ = &НомерСменыККМ)
        |ГДЕ
        |	ЧекККМ.Проведен = ИСТИНА
        |	И ЧекККМ.Магазин = &Магазин
        |
        |СГРУППИРОВАТЬ ПО
        |	ЧекККМ.Дата,
        |	ЧекККМ.ххх_ИдЦентр,
        |	ЧекККМ.КассаККМ.Код,
        |	ЧекККМ.НомерЧекаККМ,
        |	ЧекККМ.НомерСменыККМ,
        |	ЧекККМ.СуммаДокумента,
        |	ЧекККМ.Номер,
        |	ЧекККМ.Продавец.Наименование,
        |	ВЫБОР
        |		КОГДА ЧекККМ.ДисконтнаяКарта.ПроцентСкидки = 0
        |			ТОГДА ""0""
        |		ИНАЧЕ ЧекККМ.ДисконтнаяКарта.ПроцентСкидки
        |	КОНЕЦ,
        |	ВЫБОР
        |		КОГДА ЕСТЬNULL(ЧекККМ.ДисконтнаяКарта.КодКарты, """") = """"
        |			ТОГДА 0
        |		ИНАЧЕ ЧекККМ.ДисконтнаяКарта.КодКарты
        |	КОНЕЦ,
        |	ЧекККМ.ВидОперации,
        |	ЧекККМ.Ссылка
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |	йцу.id + 150000000 КАК id,
        |	йцу.id_cassa КАК id_cassa,
        |	йцу.nchek КАК nchek,
        |	йцу.summa КАК summa,
        |	йцу.skid КАК skid,
        |	ВЫБОР
        |		КОГДА йцу.sumskid = 0
        |			ТОГДА ""0""
        |		ИНАЧЕ йцу.sumskid
        |	КОНЕЦ КАК sumskid,
        |	йцу.numcard КАК numcard,
        |	йцу.vrem КАК vrem,
        |	йцу.naim КАК naim,
        |	йцу.numsme КАК numsme,
        |	йцу.ВидОперации КАК ВидОперации,
        |	йцу.Ссылка КАК Чек
        |ИЗ
        |	йцу КАК йцу
        |ГДЕ
        |	йцу.numsme = &НомерСменыККМ";

    Выборка = Запрос.Выполнить().Выбрать();
	
	Пока выборка.Следующий() Цикл
		
		ЧекXDTO=ФабрикаXDTO.Создать(СвойствоCheck.Тип);
		                
		ЧекXDTO.amount=выборка.summa;
		ЧекXDTO.cardNumber=выборка.numcard;
		ЧекXDTO.date=выборка.vrem;
		ЧекXDTO.discount=выборка.skid;
		ЧекXDTO.discountValue=выборка.sumskid;
		ЧекXDTO.guid=Строка(выборка.Чек.УникальныйИдентификатор());
		ЧекXDTO.idCashdesk=выборка.Чек.КассаККМ.код;
		ЧекXDTO.name=выборка.naim;
		ЧекXDTO.number=выборка.id;
		ЧекXDTO.number1C=выборка.Чек.номер;
		ЧекXDTO.numberCashdesk=выборка.Чек.НомерЧекаККМ;
		ЧекXDTO.shiftNumber=выборка.numsme;
		
		ChecksXDTO.check.добавить(ЧекXDTO);
		
	КонецЦикла;
		
КонецПроцедуры



процедура выгрузитьВозвратыХМЛ(documentsXDTO,СвойствоDocument)
	
	ДатаВыгрузкиДляРеестров=ДеньВыгрузки;	
	МанагерВремТаблиц=Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Кон",КонецДня(ДатаВыгрузкиДляРеестров));
	Запрос.УстановитьПараметр("Нач",НачалоДня(ДатаВыгрузкиДляРеестров));
	Запрос.УстановитьПараметр("Производители",Справочники.ххх_Справочник.КонтрагентыПапкаПРОИЗВОДИТЕЛИ.Значение);
	Запрос.УстановитьПараметр("ВидАлкоголь",Справочники.ххх_Справочник.ВидНоменклатурыАлкоголь.Значение);
	//Запрос.МенеджерВременныхТаблиц=МанагерВремТаблиц;	
    Запрос.Текст = 
        "ВЫБРАТЬ
        |	ЗакупкиТоваровОбороты.Регистратор.ххх_ИдЦентр + 150000000 КАК id,
        |	ЗакупкиТоваровОбороты.Поставщик.ххх_ИдЦентр КАК id_post,
        |	ЗакупкиТоваровОбороты.Регистратор.Комментарий КАК opis,
        |	ЗакупкиТоваровОбороты.Период КАК vrem,
        |	ЗакупкиТоваровОбороты.Период КАК dnumd,
        |	ВЫБОР
        |		КОГДА ЗакупкиТоваровОбороты.СуммаОборот < 0
        |			ТОГДА -ЗакупкиТоваровОбороты.СуммаОборот
        |		ИНАЧЕ ЗакупкиТоваровОбороты.СуммаОборот
        |	КОНЕЦ КАК summ,
        |	ЗакупкиТоваровОбороты.Номенклатура.ххх_ИдЦентр КАК id_tov,
        |	ВЫБОР
        |		КОГДА ЗакупкиТоваровОбороты.КоличествоОборот < 0
        |			ТОГДА -ЗакупкиТоваровОбороты.КоличествоОборот
        |		ИНАЧЕ ЗакупкиТоваровОбороты.КоличествоОборот
        |	КОНЕЦ КАК kol,
        |	ВЫРАЗИТЬ(ЗакупкиТоваровОбороты.СуммаОборот / ЗакупкиТоваровОбороты.КоличествоОборот КАК ЧИСЛО(10, 2)) КАК senz,
        |	ЗакупкиТоваровОбороты.Номенклатура.Производитель.ххх_ИдЦентр КАК Id_Pro,
        |	ЗакупкиТоваровОбороты.Регистратор.Номер КАК out_ref_number,
        |	ЗакупкиТоваровОбороты.Регистратор КАК Регистратор
        |ИЗ
        |	РегистрНакопления.ЗакупкиТоваров.Обороты(&Нач, &Кон, Регистратор, ) КАК ЗакупкиТоваровОбороты
        |ГДЕ
        |	ЗакупкиТоваровОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
        |ИТОГИ ПО
        |	Регистратор";

    Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	Пока выборка.Следующий() Цикл
		
		documentXDTO=ФабрикаXDTO.Создать(СвойствоDocument.Тип);
		
		СвойствоСontractor=СвойствоDocument.Тип.Свойства.получить("contractor");
		СвойствоInvoice=СвойствоDocument.Тип.Свойства.получить("invoice");
		СвойствоItems=СвойствоDocument.Тип.Свойства.получить("items");
		СвойствоOrganization=СвойствоDocument.Тип.Свойства.получить("organization");
		СвойствоShop=СвойствоDocument.Тип.Свойства.получить("shop");
		
		
		СontractorXDTO=ФабрикаXDTO.Создать(СвойствоСontractor.Тип);
		InvoiceXDTO=ФабрикаXDTO.Создать(СвойствоInvoice.Тип);
		ItemsXDTO=ФабрикаXDTO.Создать(СвойствоItems.Тип);
		OrganizationXDTO=ФабрикаXDTO.Создать(СвойствоOrganization.Тип);
		ShopXDTO=ФабрикаXDTO.Создать(СвойствоShop.Тип);
		
		documentXDTO.Shop=ShopXDTO;
		documentXDTO.contractor=СontractorXDTO;
		documentXDTO.Items=ItemsXDTO;

//		documentXDTO.black=выборка.Поступление.ххх_ФиктивнаяНакладная;
		documentXDTO.comment=выборка.Регистратор.Комментарий;
		documentXDTO.date=выборка.Регистратор.Дата;
		//documentXDTO.dateIn=выборка.Поступление.ДатаВходящегоДокумента;
		documentXDTO.docAmount=выборка.Регистратор.СуммаДокумента;
		documentXDTO.guid=Строка(выборка.Регистратор.УникальныйИдентификатор());
		documentXDTO.number1C=выборка.Регистратор.номер;
		//documentXDTO.numberIn=выборка.Поступление.НомерВходящегоДокумента;
		documentXDTO.operationType="Возврат";
		                 
		СontractorXDTO.id=выборка.Регистратор.контрагент.ххх_ИдЦентр;
		ShopXDTO.id=выборка.Регистратор.Магазин.код;
		
		Товары=Выборка.Выбрать();
		
		СвойствоItem=СвойствоItems.Тип.Свойства.получить("item");
		
		Пока товары.Следующий() Цикл
			
			ItemXDTO=ФабрикаXDTO.Создать(СвойствоItem.Тип);

			ItemXDTO.amount=товары.summ;
			ItemXDTO.idManufacturer=товары.id_pro;
			ItemXDTO.itemId=товары.id_tov;
			ItemXDTO.Id=товары.id;
			ItemXDTO.pricePurchase=товары.senz;
			//ItemXDTO.priceRetail=товары.senr;
			ItemXDTO.quantity=товары.kol;
			
			ItemsXDTO.item.добавить(ItemXDTO);
		КонецЦикла;
		
		documentsXDTO.document.добавить(documentXDTO);
		
	КонецЦикла;
	
	
    ///ТаблицаЗначений = Результат.Выгрузить();
	//кодировка = КодировкаТекста.ANSI;
	//ТекстовыйФайлЗапись = Новый ЗаписьТекста(Путь+"reestrp_long.txt",Кодировка);
	
	
	//ЗаписьXML = Новый ЗаписьXML;
	//ЗаписьXML.ОткрытьФайл("C:\"+"exchange.xml","UTF-8");

	////	
	//НашПакет=ФабрикаXDTO.пакеты.получить("url:\\apple-office.ru");
	////		
	//СвойствоRoot=НашПакет.КорневыеСвойства.Получить("root");
	//СвойствоGoods=СвойствоRoot.Тип.Свойства.Получить("documents");
	//СвойствоItem=СвойствоGoods.Тип.Свойства.Получить("document");
	//СвойствоBarcode=СвойствоItem.Тип.Свойства.Получить("barcode");

	//
	//rootXDTO = ФабрикаXDTO.Создать(СвойствоRoot.Тип);
	//GoodsXDTO=ФабрикаXDTO.Создать(СвойствоGoods.Тип);
	//rootXDTO.Goods=GoodsXDTO;
	//Пока Выборка.Следующий() Цикл
	//	ItemXDTO=ФабрикаXDTO.Создать(СвойствоItem.Тип);
	//	ItemXDTO.code=Выборка.id_tov;
	//	ItemXDTO.do_discount=?(Выборка.s=0,"yes","no");
	//	ItemXDTO.price=выборка.sen;
	//	ItemXDTO.name=Выборка.naim;
	//	ItemXDTO.nds=Выборка.nds;
	//	ItemXDTO.sale_limit=?(Выборка.A=1,"yes","no");
	//	ItemXDTO.mrc=Выборка.МРЦ;
	//	ItemXDTO.tnved=выборка.тнвед;
	//	
	//	штрихи=выборка.Выбрать();
	//	
	//	Пока штрихи.Следующий() Цикл		
	//		barcode_XDTO = ФабрикаXDTO.Создать(СвойствоBarcode.Тип);
	//		barcode_XDTO.value=?(штрихи.ФлагПрисутсвияВМатрице=1,
	//			"23"+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтрЗАменить(Строка(штрихи.Штрихкод)," ",""),5,"0","Слева"),
	//			штрихи.Штрихкод); 
	//		barcode_XDTO.kind=штрихи.kind; 
	//		barcode_XDTO.status=штрихи.status;
	//		ItemXDTO.barcode.добавить(barcode_XDTO);
	//	КонецЦикла;

	//	GoodsXDTO.item.добавить(ItemXDTO);
	//КонецЦикла;
	//

	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВОфис(Команда)
	
	выгрузкаВОфисХМЛ(неопределено);
	
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьВПочтуНаСервере()
	ИмяФайла=Формат(ТекущаяДата(),"ДФ=ddMMyyHHmmss")+".xml";
	выгрузкаВОфисХМЛ(ИмяФайла);
	
	Запрос=Новый запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	Магазины.Ссылка КАК Магаз
	             |ИЗ
	             |	Справочник.Магазины КАК Магазины";
	Выборка=Запрос.Выполнить().Выбрать();
	
	Пока выборка.Следующий() Цикл
		
		Если не выборка.Магаз.ххх_ИнтернетМагазин Тогда
			Профиль = Новый ИнтернетПочтовыйПрофиль;
			Профиль.АдресСервераSMTP = выборка.Магаз.ххх_АдресСервераSMTP;
			Профиль.ПортIMAP = выборка.Магаз.ххх_ПортIMAP; 	
			Профиль.ПользовательSMTP = выборка.Магаз.ххх_МагазинскиаяПочта;	
			Профиль.ПарольSMTP = выборка.Магаз.ххх_ПарольSMTP;
			
			Сообщение = Новый ИнтернетПочтовоеСообщение ;
			Сообщение.Вложения.Добавить("C:\"+ИмяФайла);
			Сообщение.Получатели.Добавить(выборка.Магаз.ххх_ПочтаДляОтправвкиБонусов);
			Сообщение.Тема ="Бонусы "+ЗаголовокПисьмаИМ;
			Сообщение.ИмяОтправителя="МрРобот";
			Сообщение.Отправитель=выборка.Магаз.ххх_МагазинскиаяПочта;
			
		    Почта = Новый ИнтернетПочта();
			Почта.Подключиться(Профиль);
			Почта.Послать(Сообщение);
			Почта.Отключиться();
		КОнецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВПочту(Команда)
	ВыгрузитьВПочтуНаСервере();
КонецПроцедуры

