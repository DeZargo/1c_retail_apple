#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает параметры указания серий для товаров, указанных в документе.
//
// Параметры:
//	Объект - ДокументОбъект или ДанныеФормыСтруктура - документ, для которого нужно сформировать параметры проверки.
//
// Возвращаемое значение:
//	Структура - Состав полей определяется требованиями функции
//	            ОбработкаТабличнойЧастиСервер.ЗаполнитьСтатусыУказанияСерий.
//
Функция ПараметрыУказанияСерий(Объект)Экспорт
	
	ПоляСвязи = Новый Массив;
	
	ПараметрыУказанияСерий = Новый Структура;
	ИспользованиеСерийСклад = Ложь;
	
	ИспользованиеСерийСклад = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	
	ПараметрыУказанияСерий.Вставить("ИспользоватьСерииНоменклатуры", ИспользованиеСерийСклад);
	ПараметрыУказанияСерий.Вставить("ПоляСвязи",ПоляСвязи);
	ПараметрыУказанияСерий.Вставить("ЭтоОрдер", Истина);
	ПараметрыУказанияСерий.Вставить("ЭтоОбработка", Истина);
	ПараметрыУказанияСерий.Вставить("ПроцедураЗаполненияСерий","РаспределениеТоваровПоСкладам");
	
	ПараметрыУказанияСерий.Вставить("ИмяКолонкиКоличество"        , "КоличествоФакт");
	ПараметрыУказанияСерий.Вставить("ИмяКолонкиКоличествоУпаковок", "КоличествоУпаковокФакт");
	
	СкладскиеОперации = Новый Массив;
	Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ПоступлениеТоваров")
	 ИЛИ ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаОтПоставщика);
	ИначеЕсли ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		Если Объект.Режим = "ПриходТовара" Тогда
			СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаПоПеремещению);
		Иначе
			СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаПоПеремещению);
		КонецЕсли;
	ИначеЕсли ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваров") Тогда
		СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаКлиенту);
	Иначе
		СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаОтПоставщика);
	КонецЕсли;
	
	ПараметрыУказанияСерий.Вставить("СкладскиеОперации", СкладскиеОперации);
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Процедура заполняет статусы указания серий в строках ТЧ товары (комментарий содержит описание подсистемы серий).
//
// Возможные статусы указания серий:
//
//  0 - Серии указывать не требуется
//  нечетные статусы - количество по сериям не совпадает с количеством товаров
//  четные статусы   - количество по сериям не совпадает с количеством товаров
//		 1,2  - серии указываются справочно
//       3,4  - по сериям учитываются остатки, серии указываются по факту отбора
//       5,6  - по сериям учитываются остатки, серии указываются при планировании отбора,
//					заполняются по FEFO (используются только в документах отгрузки товаров)
//       7,8  - по сериям учитываются остатки, серии указываются при планировании отбора
//       9,10 - по сериям учитываются остатки, серии указываются при планировании отгрузки,
//				по сериям формируются движения по регистру СвободныеОстатки (как при приходе, так и при расходе)
//  11 - серии не указаны, указание не обязательно (используется только в заказах).
//
// Параметры процедуры:
//
//		Объект - объект, в котором нужно заполнить статусы. Тип: ДанныеФормыСтруктура или ДокументОбъект.
//
//      ПараметрыУказанияСерий - структура параметров указания серий, возвращаемая соотвествующей процедурой модуля
//                               менеджера документа (обработки).
//			Содержит свойства:
//				ОБЯЗАТЕЛЬНЫЕ:
//					ИспользоватьСерииНоменклатуры - признак, нужно ли в документе заполнять статусы указания серий.
//					ПоляСвязиСерий - массив с именами реквизитов ТЧ Товары и ТЧ Серии, по которым устанавливается
//									 связь между табличными частями (поля связи "Номенклатура" и "Характеристика" 
//									 присутсвуют всегда, их отдельно указывать не нужно).
//					СкладскиеОперации - массив значений ПеречислениеСсылка.СкладскиеОперации - складские операции, оформляемые
//					                    документом НЕОБЯЗАТЕЛЬНЫЕ:
//                  ТолькоПросмотр - признак того, что серии в документе можно только просматривать (значение по
//                                   умолчанию ЛОЖЬ).
//					ТоварВШапке - признак, что параметры указания серий определены для товара в шапке (иначе - для товара в ТЧ)
//					              (значение по умолчанию ЛОЖЬ).
//					БлокироватьДанныеФормы - признак того, что перед открытием форму указания серий, нужно заблокировать форму
//					                         документа (значение по умолчанию ИСТИНА) если ТолькоПросмотр = Истина, то данные формы
//					                         не блокируются.
//              	
//					ИмяТЧТовары - имя табличной части со списком товаров (значение по умолчанию - "Товары").
//              	ИмяТЧСерии - имя табличной части со списком серий (значение по умолчанию - "Серии").
//              	ИмяПоляКоличество - имя поля в ТЧ "Товары", в котором пользователь редактирует количество (значение по
//              	                    умолчанию - "КоличествоУпаковок").
//              	ИмяПоляСклад     - имя реквизита склада (значение по умолчанию - "Склад").
//					ИмяПоляПомещение - имя реквизита помещения, если не задано, значит в документе нет помещений.
//              	
//					ПроцедураЗаполненияСерий - содержит имя документа: если параметр задан, то заполнение статусов указания серий
//					                           делается одноименной процедурой, размещенной в модуле менеджера документа.
//					
//					ЭтоОрдер - признак того, что документ является ордером (значение по умолчанию ЛОЖЬ).
//					ЭтоЗаказ - признак того, что документ является заказом (значение по умолчанию ЛОЖЬ).
//					ЭтоНакладная - признак того, что документ является накладной (значение по умолчанию ЛОЖЬ).
//					
//					ПроверкаОтбора       - на адресном скакладе перед проверкой должны быть заполнены все серии, по которым ведется
//					                       учет остатков.
//
//      СтрокиТоваровДляОбработки - массив строк товаров, в которых нужно заполнить статусы указания серий,
//									если передано "Неопределено", то статусы заполняются во всех строках товаров.
//      
//		СтрокиСерийДляОбработки - массив строк серий, по данным которых нужно заполнить статусы указания серий,
//									если передано "Неопределено", то учитываются все строки серий.
//
Процедура ЗаполнитьСтатусыУказанияСерий(Объект,ПараметрыУказанияСерий,СтрокиТоваровДляОбработки = Неопределено, СтрокиСерийДляОбработки = Неопределено) Экспорт
	
	ТоварВШапке    = Ложь;
	ИмяТЧТовары    = "Товары";
	ИмяТЧСерии     = "Серии";
	ИмяПоляМагазин = "Магазин";
	
	СтрокиТоваровДляОбработки = Неопределено;
	СтрокиСерийДляОбработки   = Неопределено;

	Если Не (ТоварВШапке
		Или Объект[ИмяТЧТовары].Количество() <> 0 ) Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоЗаказ = Ложь;
	ЕстьОтменаСтроки = Ложь;
	
	Если Не ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры Тогда
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры") Тогда
			Для Каждого СтрТабл Из Объект[ИмяТЧТовары] Цикл
				СтрТабл.СтатусУказанияСерий = 0;
			КонецЦикла;
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	ТекстПоляВыбораТовары = "";
	ТекстПоляВыбораСерии = "";
	ТекстПоляСвязиСоединениеТоварыСерии = "";
	ТекстПоляСвязиСоединениеТоварыВсеТовары = "";
	ТекстПоляСвязиВыгружаемыеКолонкиТовары = "";
	ТекстПоляСвязиВыгружаемыеКолонкиСерии = "";
	
	Для Каждого СтрокаМассива Из ПараметрыУказанияСерий.ПоляСвязи Цикл
		ТекстПоляВыбораТовары = ТекстПоляВыбораТовары + "
		|	ТаблицаТоваров." + СтрокаМассива + ",";
		ТекстПоляВыбораСерии = ТекстПоляВыбораСерии + "
		|	ТаблицаСерий." + СтрокаМассива + ",";
		ТекстПоляСвязиСоединениеТоварыСерии = ТекстПоляСвязиСоединениеТоварыСерии + "
	|			И ТаблицаТоваровДляЗапроса."+СтрокаМассива+" = ТаблицаСерийДляЗапроса."+СтрокаМассива;
		ТекстПоляСвязиСоединениеТоварыВсеТовары = ТекстПоляСвязиСоединениеТоварыВсеТовары + "
	|			И ТаблицаТоваров."+СтрокаМассива+" = ТаблицаТоваровДляЗапроса." + СтрокаМассива;
		ТекстПоляСвязиВыгружаемыеКолонкиТовары = ТекстПоляСвязиВыгружаемыеКолонкиТовары + ", " + СтрокаМассива;
		ТекстПоляСвязиВыгружаемыеКолонкиСерии = ТекстПоляСвязиВыгружаемыеКолонкиСерии + ", " + СтрокаМассива;
	КонецЦикла;
	
	Если ЕстьОтменаСтроки Тогда
		ТекстПоляВыбораТовары = ТекстПоляВыбораТовары + "
		|	ТаблицаТоваров.Отменено,";
		ТекстПоляСвязиВыгружаемыеКолонкиТовары = ТекстПоляСвязиВыгружаемыеКолонкиТовары + ", Отменено";
		УсловиеПоОтмененнойСтроке = "		КОГДА ТаблицаТоваров.Отменено 
									|			ТОГДА 0 ";
	Иначе
		УсловиеПоОтмененнойСтроке = "		КОГДА ЛОЖЬ 
									|			ТОГДА 0 ";
	КонецЕсли;
	
	ТекстПоляСвязиСоединениеМагазин = " ПО (МагазиныПолитикиУчетаСерий.Магазин = &Магазин)";

	ТекстЗапроса = 
	"ВЫБРАТЬ " +
	ТекстПоляВыбораТовары + "
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Характеристика,
	|	ТаблицаТоваров.КоличествоФакт,
	|	ТаблицаТоваров.СтатусУказанияСерий,
	|	ТаблицаТоваров.НомерСтроки
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ " +
	ТекстПоляВыбораТовары + "
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Характеристика,
	|	СУММА(ТаблицаТоваров.КоличествоФакт) КАК КоличествоФакт,
	|	ТаблицаТоваров.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТаблицаТоваровДляЗапроса
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров ";
	Если ЕстьОтменаСтроки Тогда
	ТекстЗапроса = ТекстЗапроса + "
	|ГДЕ
	|	НЕ ТаблицаТоваров.Отменено ";
	КонецЕсли;	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|СГРУППИРОВАТЬ ПО " +
	ТекстПоляВыбораТовары + "
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Характеристика,
	|	ТаблицаТоваров.Номенклатура.ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ " +
	ТекстПоляВыбораСерии + "
	|	ТаблицаСерий.Номенклатура,
	|	ТаблицаСерий.Характеристика,
	|	ТаблицаСерий.Количество
	|ПОМЕСТИТЬ ТаблицаСерий
	|ИЗ
	|	&ТаблицаСерий КАК ТаблицаСерий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ " +
	ТекстПоляВыбораСерии + "
	|	ТаблицаСерий.Номенклатура,
	|	ТаблицаСерий.Характеристика,
	|	СУММА(ТаблицаСерий.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаСерийДляЗапроса
	|ИЗ
	|	ТаблицаСерий КАК ТаблицаСерий
	|
	|СГРУППИРОВАТЬ ПО " +
	ТекстПоляВыбораСерии + "
	|	ТаблицаСерий.Номенклатура,
	|	ТаблицаСерий.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР "+
		 УсловиеПоОтмененнойСтроке + "
	|		ИНАЧЕ ВЫБОР
	|				КОГДА МагазиныПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|					ТОГДА 0
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ((&ЭтоОрдер
	|									ИЛИ (НЕ Магазины.ИспользоватьОрдернуюСхемуПриОтгрузке)
	|										И &ЭтоНакладная)
	|									И (МагазиныПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеКлиенту
	|											И &ОтгрузкаКлиенту
	|										ИЛИ МагазиныПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеВРозницу
	|											И &ОтгрузкаВРозницу
	|										ИЛИ МагазиныПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеКомплектующихДляСборки
	|											И &ОтгрузкаКомплектующихДляСборки
	|											И ((НЕ &ТоварВШапке)
	|												ИЛИ &ЭтоОрдер)
	|										ИЛИ МагазиныПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеКомплектовДляРазборки
	|											И &ОтгрузкаКомплектовДляРазборки
	|											И (&ТоварВШапке
	|												ИЛИ &ЭтоОрдер)
	|										ИЛИ МагазиныПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеПоВозвратуПоставщику
	|											И &ОтгрузкаПоВозвратуПоставщику
	|										ИЛИ МагазиныПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеПоПеремещению
	|											И &ОтгрузкаПоперемещению))
	|							ТОГДА ВЫБОР
	|											КОГДА ТаблицаТоваровДляЗапроса.КоличествоФакт = ЕСТЬNULL(ТаблицаСерийДляЗапроса.Количество, 0)
	|													И ТаблицаТоваровДляЗапроса.КоличествоФакт > 0
	|												ТОГДА 2
	|											ИНАЧЕ 1
	|									КОНЕЦ
	|						КОГДА МагазиныПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемке
	|								И (НЕ &ЭтоЗаказ)
	|								И (&ЭтоОрдер
	|									ИЛИ (НЕ Магазины.ИспользоватьОрдернуюСхемуПриПоступлении)
	|										И &ЭтоНакладная)
	|								И (МагазиныПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеОтПоставщика
	|										И &ПриемкаОтПоставщика
	|									ИЛИ МагазиныПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеПоВозвратуОтКлиента
	|										И &ПриемкаПоВозвратуОтКлиента
	|									ИЛИ МагазиныПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеПоПеремещению
	|										И &ПриемкаПоПеремещению
	|									ИЛИ МагазиныПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеКомплектующихПослеРазборки
	|										И &ПриемкаКомплектующихПослеРазборки
	|										И ((НЕ &ТоварВШапке)
	|											ИЛИ &ЭтоОрдер)
	|									ИЛИ МагазиныПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеСобранныхКомплектов
	|										И &ПриемкаСобранныхКомплектов
	|										И (&ТоварВШапке
	|											ИЛИ &ЭтоОрдер))
	|							ТОГДА ВЫБОР
	|											КОГДА ТаблицаТоваровДляЗапроса.КоличествоФакт = ЕСТЬNULL(ТаблицаСерийДляЗапроса.Количество, 0)
	|													И ТаблицаТоваровДляЗапроса.КоличествоФакт > 0
	|												ТОГДА 2
	|											ИНАЧЕ 1
	|									КОНЕЦ
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ ТаблицаСтатусов
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаТоваровДляЗапроса КАК ТаблицаТоваровДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСерийДляЗапроса КАК ТаблицаСерийДляЗапроса
	|			ПО ТаблицаТоваровДляЗапроса.Номенклатура = ТаблицаСерийДляЗапроса.Номенклатура
	|				И ТаблицаТоваровДляЗапроса.Характеристика = ТаблицаСерийДляЗапроса.Характеристика " +
					ТекстПоляСвязиСоединениеТоварыСерии + "
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК МагазиныПолитикиУчетаСерий
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Магазины КАК Магазины
	|				ПО МагазиныПолитикиУчетаСерий.Магазин = Магазины.Ссылка" +
				ТекстПоляСвязиСоединениеМагазин + "
	|			И ТаблицаТоваровДляЗапроса.ВидНоменклатуры = МагазиныПолитикиУчетаСерий.Ссылка
	|		ПО ТаблицаТоваров.Номенклатура = ТаблицаТоваровДляЗапроса.Номенклатура
	|			И ТаблицаТоваров.Характеристика = ТаблицаТоваровДляЗапроса.Характеристика" +
				ТекстПоляСвязиСоединениеТоварыВсеТовары + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСтатусов.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	ТаблицаСтатусов КАК ТаблицаСтатусов
	|ГДЕ
	|	ТаблицаСтатусов.СтатусУказанияСерий <> ТаблицаСтатусов.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;

	Запрос.УстановитьПараметр("Магазин", Объект[ИмяПоляМагазин]);
	
	Запрос.УстановитьПараметр("ТоварВШапке", ТоварВШапке);
	
 	ОбработкаТабличнойЧастиТоварыСервер.УстановитьПараметрыЗапросаПоПараметрамУказанияСерий(Запрос,ПараметрыУказанияСерий);
	
	Если СтрокиСерийДляОбработки <> Неопределено
		И СтрокиТоваровДляОбработки <> Неопределено Тогда
		Запрос.УстановитьПараметр("ТаблицаТоваров", Объект[ИмяТЧТовары].Выгрузить(СтрокиТоваровДляОбработки,"Номенклатура, Характеристика, КоличествоФакт, НомерСтроки, СтатусУказанияСерий" + ТекстПоляСвязиВыгружаемыеКолонкиТовары));
		Запрос.УстановитьПараметр("ТаблицаСерий", Объект[ИмяТЧСерии].Выгрузить(СтрокиСерийДляОбработки,"Номенклатура, Характеристика, Количество" + ТекстПоляСвязиВыгружаемыеКолонкиСерии));
	Иначе
		Запрос.УстановитьПараметр("ТаблицаТоваров", Объект[ИмяТЧТовары].Выгрузить(,"Номенклатура, Характеристика, КоличествоФакт, НомерСтроки, СтатусУказанияСерий" + ТекстПоляСвязиВыгружаемыеКолонкиТовары));
		Запрос.УстановитьПараметр("ТаблицаСерий", Объект[ИмяТЧСерии].Выгрузить(,"Номенклатура, Характеристика, Количество" + ТекстПоляСвязиВыгружаемыеКолонкиСерии));
	КонецЕсли;
	
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтрТабл = Объект[ИмяТЧТовары][Выборка.НомерСтроки - 1];
		
		СтрТабл.СтатусУказанияСерий = Выборка.СтатусУказанияСерий;
		
		Если ЭтоЗаказ Тогда
			Если (Выборка.СтатусУказанияСерий = 11
				Или Выборка.СтатусУказанияСерий = 0) Тогда
				СтрТабл.УказыватьСерии = Ложь;
			Иначе
				СтрТабл.УказыватьСерии = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
