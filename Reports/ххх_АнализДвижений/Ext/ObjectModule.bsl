
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	запрос=Новый запрос;
	Запрос.УстановитьПараметр("ДатаНач",этотОбъект.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].значение.Дата);
	Запрос.УстановитьПараметр("ДатаКон",этотОбъект.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].значение.Дата);
	Запрос.УстановитьПараметр("МассивНоменклатуры",этотОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[3].значение);
	Запрос.Текст="ВЫБРАТЬ
	             |	ТоварыНаСкладахОстаткиИОбороты.Регистратор КАК Регистратор,
	             |	ТоварыНаСкладахОстаткиИОбороты.Номенклатура КАК Номенклатура,
	             |	ТоварыНаСкладахОстаткиИОбороты.КоличествоПриход КАК Приход,
	             |	ТоварыНаСкладахОстаткиИОбороты.КоличествоРасход КАК Расход,
	             |	ТоварыНаСкладахОстаткиИОбороты.Период КАК Период,
	             |	ТоварыНаСкладахОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
	             |	ТоварыНаСкладахОстаткиИОбороты.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток,
	             |	НАЧАЛОПЕРИОДА(ТоварыНаСкладахОстаткиИОбороты.Период, ДЕНЬ) КАК День
	             |ПОМЕСТИТЬ ОстаткиИОбороты
	             |ИЗ
	             |	РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(&ДатаНач, &ДатаКон, Регистратор, , Номенклатура В ИЕРАРХИИ (&массивНоменклатуры)) КАК ТоварыНаСкладахОстаткиИОбороты
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ТоварыНаСкладахОстаткиИОбороты.Номенклатура КАК Номенклатура,
	             |	ТоварыНаСкладахОстаткиИОбороты.Период КАК Период,
	             |	ТоварыНаСкладахОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
	             |	ТоварыНаСкладахОстаткиИОбороты.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток
	             |ПОМЕСТИТЬ Остатки
	             |ИЗ
	             |	РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(&ДатаНач, &ДатаКон, День, Движения, Номенклатура В ИЕРАРХИИ (&массивНоменклатуры)) КАК ТоварыНаСкладахОстаткиИОбороты
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ТоварыНаСкладахОстаткиИОбороты.Номенклатура КАК Номенклатура,
	             |	ТоварыНаСкладахОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
	             |	ТоварыНаСкладахОстаткиИОбороты.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток
	             |ПОМЕСТИТЬ ОстаткиПериод
	             |ИЗ
	             |	РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(&ДатаНач, &ДатаКон, Период, ДвиженияИГраницыПериода, Номенклатура В ИЕРАРХИИ (&массивНоменклатуры)) КАК ТоварыНаСкладахОстаткиИОбороты
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ВЫБОР
	             |		КОГДА ОстаткиИОбороты.Регистратор = ОстаткиИОбороты.Регистратор
	             |			ТОГДА ОстаткиИОбороты.Регистратор
	             |		ИНАЧЕ ""                                       ""
	             |	КОНЕЦ КАК Регистратор,
	             |	ОстаткиИОбороты.Номенклатура КАК Номенклатура,
	             |	ОстаткиИОбороты.Приход КАК Приход,
	             |	ОстаткиИОбороты.Расход КАК Расход,
	             |	ОстаткиИОбороты.Период КАК Период,
	             |	Остатки.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстатокДень,
	             |	Остатки.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстатокДень,
	             |	ОстаткиИОбороты.День КАК Дата,
	             |	ОстаткиИОбороты.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстатокРегистратор,
	             |	ОстаткиИОбороты.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстатокРегистратор,
	             |	ОстаткиПериод.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
	             |	ОстаткиПериод.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток
	             |ИЗ
	             |	Остатки КАК Остатки
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиИОбороты КАК ОстаткиИОбороты
	             |		ПО Остатки.Номенклатура = ОстаткиИОбороты.Номенклатура
	             |			И Остатки.Период = ОстаткиИОбороты.День
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиПериод КАК ОстаткиПериод
	             |		ПО Остатки.Номенклатура = ОстаткиПериод.Номенклатура
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	ОстаткиИОбороты.Регистратор.Дата";
	
	
	выгрузка=запрос.Выполнить().Выгрузить();
	
	Если этотОбъект.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[2].значение="Краткий" Тогда
		й=0;
		Пока й<выгрузка.Количество() Цикл
			Если ТипЗнч(выгрузка[й].Регистратор)=Тип("ДокументСсылка.ЧекККМ") Тогда 
				выгрузка[й].Регистратор="Чеки     "+выгрузка[й].период;
				КоличествоНачальныйОстатокРегистратор=выгрузка[й].КоличествоНачальныйОстатокРегистратор;
				приход=выгрузка[й].приход;
				расход=выгрузка[й].расход;
				Дата=выгрузка[й].Дата;
				Пока (й+1)<Выгрузка.Количество() и ТипЗнч(выгрузка[й+1].Регистратор)=Тип("ДокументСсылка.ЧекККМ") и Дата=выгрузка[й+1].Дата цикл
					приход=приход+выгрузка[й+1].приход;
					расход=расход+выгрузка[й+1].расход;
					КоличествоКонечныйОстатокРегистратор=выгрузка[й+1].КоличествоКонечныйОстатокРегистратор;
					Выгрузка.Удалить(выгрузка[й+1]);
				КонецЦикла;
				выгрузка[й].приход=приход;
				выгрузка[й].расход=расход;
				выгрузка[й].КоличествоКонечныйОстатокРегистратор=КоличествоКонечныйОстатокРегистратор;
			КонецЕсли;
		й=й+1;
		КонецЦикла;
	КонецЕсли;
	
	ВнешниеНаборыДанных = Новый Структура;	
	ВнешниеНаборыДанных.Вставить("ТзИтого",выгрузка);
	ПроцессорКомпоновкиДанных=Новый ПроцессорКомпоновкиДанных;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновкиДанных   = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, ЭтотОбъект.КомпоновщикНастроек.ПолучитьНастройки(),ДанныеРасшифровки);
	
	ТабличныйДокумент=ДокументРезультат;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных,ВнешниеНаборыДанных,ДанныеРасшифровки);
	вывод=Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	вывод.УстановитьДокумент(ТабличныйДокумент);
	вывод.Вывести(ПроцессорКомпоновкиДанных,истина);
	

	//Запрос=ЗАпрос.Выполнить();
	//Тз=Запрос.выгрузить();
	//Тз.очистить();
	//ТзИтого=Неопределено;
	//
	//Периоды=ЗАпрос.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	//Пока Периоды.Следующий()Цикл
	//	Выборка=Периоды.Выбрать();
	//	Пока выборка.Следующий()Цикл
	//		стр=Тз.добавить();
	//		ЗаполнитьЗначенияСВойств(стр,выборка);
	//	КонецЦикла;
	//		
	//	Запрос=Новый запрос;
	//	Запрос.УстановитьПараметр("тз",тз);
	//	запрос.УстановитьПараметр("период",периоды.период+1);     
	//	запрос.УстановитьПараметр("НачалоДня",НачалоДня(периоды.период));
	//	запрос.УстановитьПараметр("КонецДня",КонецДня(периоды.период));
	//	если этотОбъект.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[2].значение="Полный" Тогда
	//		Запрос.Текст="ВЫБРАТЬ
	//		             |	тз.Регистратор КАК Регистратор,
	//		             |	тз.Номенклатура КАК Номенклатура,
	//		             |	тз.Приход КАК Приход,
	//		             |	тз.Расход КАК Расход,
	//		             |	тз.Период КАК Период,
	//		             |	НАЧАЛОПЕРИОДА(тз.Период, ДЕНЬ) КАК Дата
	//		             |ПОМЕСТИТЬ Обороты
	//		             |ИЗ
	//		             |	&тз КАК тз
	//		             |;
	//		             |
	//		             |////////////////////////////////////////////////////////////////////////////////
	//		             |ВЫБРАТЬ
	//		             |	Обороты.Регистратор КАК Регистратор,
	//		             |	Обороты.Номенклатура КАК Номенклатура,
	//		             |	СУММА(Обороты.Приход) КАК Приход,
	//		             |	СУММА(Обороты.Расход) КАК Расход,
	//		             |	Обороты.Период КАК Период,
	//		             |	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК Остаток,
	//		             |	Обороты.Дата КАК Дата,
	//		             |	ЕСТЬNULL(ОстаткиНачалоДня.КоличествоОстаток, 0) КАК ОстатокНачалоДня,
	//		             |	ЕСТЬNULL(ОстаткиКонецДня.КоличествоОстаток, 0) КАК остатокКонецДня
	//		             |ИЗ
	//		             |	Обороты КАК Обороты
	//		             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&период, ) КАК ТоварыНаСкладахОстатки
	//		             |		ПО Обороты.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	//		             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки КАК ОстаткиНачалоДня
	//		             |		ПО Обороты.Номенклатура = ОстаткиНачалоДня.Номенклатура
	//		             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&НачалоДня, &КонецДня) КАК ОстаткиКонецДня
	//		             |		ПО Обороты.Номенклатура = ОстаткиКонецДня.Номенклатура
	//		             |
	//		             |СГРУППИРОВАТЬ ПО
	//		             |	Обороты.Период,
	//		             |	Обороты.Регистратор,
	//		             |	Обороты.Дата,
	//		             |	Обороты.Номенклатура,
	//		             |	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0),
	//		             |	ЕСТЬNULL(ОстаткиНачалоДня.КоличествоОстаток, 0),
	//		             |	ЕСТЬNULL(ОстаткиКонецДня.КоличествоОстаток, 0)
	//		             |
	//		             |УПОРЯДОЧИТЬ ПО
	//		             |	Период";
	//	Иначе
	//		Запрос.Текст="ВЫБРАТЬ
	//		             |	тз.Регистратор КАК Регистратор,
	//		             |	тз.Номенклатура КАК Номенклатура,
	//		             |	тз.Приход КАК Приход,
	//		             |	тз.Расход КАК Расход,
	//		             |	тз.Период КАК Период
	//		             |ПОМЕСТИТЬ Обороты
	//		             |ИЗ
	//		             |	&тз КАК тз
	//		             |;
	//		             |
	//		             |////////////////////////////////////////////////////////////////////////////////
	//		             |ВЫБРАТЬ
	//		             |	ВЫБОР
	//		             |		КОГДА Обороты.Регистратор ССЫЛКА Документ.ЧекККМ
	//		             |			ТОГДА ТИПЗНАЧЕНИЯ(Обороты.Регистратор)
	//		             |		ИНАЧЕ Обороты.Регистратор
	//		             |	КОНЕЦ КАК Регистратор,
	//		             |	Обороты.Номенклатура КАК Номенклатура,
	//		             |	СУММА(Обороты.Приход) КАК Приход,
	//		             |	СУММА(Обороты.Расход) КАК Расход,
	//		             |	НАЧАЛОПЕРИОДА(Обороты.Период, ДЕНЬ) КАК Дата,
	//		             |	СУММА(ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0)) КАК Остаток,
	//		             |	Обороты.Период КАК Период
	//		             |ИЗ
	//		             |	Обороты КАК Обороты
	//		             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(&период, ) КАК ТоварыОрганизацийОстатки
	//		             |		ПО Обороты.Номенклатура = ТоварыОрганизацийОстатки.Номенклатура
	//		             |
	//		             |СГРУППИРОВАТЬ ПО
	//		             |	Обороты.Номенклатура,
	//		             |	Обороты.Период,
	//		             |	ВЫБОР
	//		             |		КОГДА Обороты.Регистратор ССЫЛКА Документ.ЧекККМ
	//		             |			ТОГДА ТИПЗНАЧЕНИЯ(Обороты.Регистратор)
	//		             |		ИНАЧЕ Обороты.Регистратор
	//		             |	КОНЕЦ,
	//		             |	НАЧАЛОПЕРИОДА(Обороты.Период, ДЕНЬ)
	//		             |
	//		             |УПОРЯДОЧИТЬ ПО
	//		             |	Дата";
	//	КонецЕсли;
	//	выгрузка=Запрос.Выполнить().Выгрузить();
	//	Если не значениеЗаполнено(ТзИтого) Тогда
	//			ТзИтого=выгрузка.Скопировать();
	//			ТзИтого.очистить();
	//	КонецЕсли;
	//	Для каждого СтрокаТаблицыИсточника Из выгрузка Цикл
	//	     СтрокаТаблицыПриемника = ТзИтого.Добавить();
	//	     ЗаполнитьЗначенияСвойств(СтрокаТаблицыПриемника, СтрокаТаблицыИсточника);
	//	КонецЦикла;
	//	Тз.очистить();
	//КонецЦикла;
	//
	//ВнешниеНаборыДанных = Новый Структура;	
	//ВнешниеНаборыДанных.Вставить("ТзИтого",ТзИтого);
	//ПроцессорКомпоновкиДанных=Новый ПроцессорКомпоновкиДанных;
	//
	//КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	//МакетКомпоновкиДанных   = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, ЭтотОбъект.КомпоновщикНастроек.ПолучитьНастройки(),ДанныеРасшифровки);
	//
	//ТабличныйДокумент=ДокументРезультат;
	//ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных,ВнешниеНаборыДанных,ДанныеРасшифровки);
	//вывод=Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	//вывод.УстановитьДокумент(ТабличныйДокумент);
	//вывод.Вывести(ПроцессорКомпоновкиДанных,истина);
	
КонецПроцедуры
























































