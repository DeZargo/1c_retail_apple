
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	фио=параметры.фио;
	инн=параметры.инн;
	карточка=параметры.карточка;
	
	фиоПрошлое=параметры.фио;
	иннПрошлое=параметры.инн;
	карточкаПрошлое=параметры.карточка;
	
	ДобавлениеНового=параметры.ДобавлениеНового;
	
	ФизЛицо=справочники.ФизическиеЛица.НайтиПоРеквизиту("ИНН",ИНН);

	
	//Запрос=Новый запрос;
	//запрос.УстановитьПараметр("мас",Параметры.СписокКасс);
	//Запрос.Текст="ВЫБРАТЬ
	//             |	КассыККМ.Ссылка КАК касса,
	//             |	ВЫБОР
	//             |		КОГДА КассыККМ.Ссылка В (&мас)
	//             |			ТОГДА ИСТИНА
	//             |		ИНАЧЕ ЛОЖЬ
	//             |	КОНЕЦ КАК выбрана
	//             |ИЗ
	//             |	Справочник.КассыККМ КАК КассыККМ
	//             |ГДЕ
	//             |	НЕ КассыККМ.ПометкаУдаления
	//             |
	//             |УПОРЯДОЧИТЬ ПО
	//             |	КассыККМ.Наименование";
	//
	//СписокКасс.Загрузить(Запрос.Выполнить().Выгрузить());
	
	//пока выб.Следующий() Цикл
	//	стр=СписокКасс.Добавить();
	//	стр.касса=выб.ссылка;
	//КонецЦикла;
	//
	//Для каждого стр из Параметры.СписокКасс Цикл
	//	
	//КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	//Если фио<>фиоПрошлое или
	//	 инн<>иннПрошлое или
	//	 карточка<>карточкаПрошлое Тогда
	Если не лев(карточка,1)=";" Тогда
		карточка=";"+Карточка;
	КонецЕсли;
	Если не прав(карточка,1)="?" Тогда
		карточка=Карточка+"?";
	КонецЕсли;
	
	ТекстСообщения="";
	если РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(инн,ложь,ТекстСообщения) Тогда
		ПараметрыВыбора=Новый структура;
		ПараметрыВыбора.Вставить("инн",инн);
		ПараметрыВыбора.Вставить("фио",фио);
		ПараметрыВыбора.Вставить("карточка",карточка);
		ПараметрыВыбора.Вставить("ДобавлениеНового",ДобавлениеНового);
		ОповеститьОВыборе(ПараметрыВыбора);
	Иначе
		сообщить(ТекстСообщения);
	КонецЕсли;
	//Иначе
	//		ЭтаФорма.Закрыть();
	//КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СписокКасс1ВыбранаПриИзменении(Элемент)
	//йцу();
	//й=ЭтаФорма.ВладелецФормы;
	//й.РазрешеноДобавитьЧеловека("");
КонецПроцедуры


Процедура йцу()
	
КонецПроцедуры

&НаКлиенте
Процедура ФизЛицоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ФизЛицоОбработкаВыбораСервер(ВыбранноеЗначение);
КонецПроцедуры

Процедура ФизЛицоОбработкаВыбораСервер(ВыбранноеЗначение)
	инн=ВыбранноеЗначение.ИНН;
	ФИО=ВыбранноеЗначение.Наименование;	
КонецПроцедуры



//&НаКлиенте
//Процедура записать(Команда)
//	записатьНаСервере();
//КонецПроцедуры

//&НаСервере
//Процедура записатьНаСервере()	
//	Для каждого касса из СписокКасс Цикл
//		
//		пСоед = Новый ПараметрыСоединенияВнешнегоИсточникаДанных;
//		пСоед.СтрокаСоединения = касса.Касса.ххх_СтрокаСоединения;
//		пСоед.АутентификацияОС=Ложь;
//		пСоед.АутентификацияСтандартная=Истина;
//		пСоед.ИмяПользователя=касса.Касса.ххх_ИмяПользователяКассы;
//		пСоед.СУБД=касса.Касса.ххх_ТипСубд;
//		ВнешниеИсточникиДанных.Касса.УстановитьОбщиеПараметрыСоединения(пСоед);
//		ВнешниеИсточникиДанных.Касса.УстановитьПараметрыСоединенияПользователя("Админ",пСоед);
//		ВнешниеИсточникиДанных.Касса.УстановитьСоединение();
//		
//		Запрос=Новый запрос;
//		Запрос.Текст="ВЫБРАТЬ ПЕРВЫЕ 1
//		             |	users.id КАК id
//		             |ИЗ
//		             |	ВнешнийИсточникДанных.Касса.Таблица.users КАК users
//		             |
//		             |УПОРЯДОЧИТЬ ПО
//		             |	id УБЫВ";
//		выборка=Запрос.Выполнить().Выбрать();
//		
//		Если не ЗначениеЗаполнено(id) и выборка.Следующий() тогда
//			id=выборка.id+1;
//		КонецЕсли;
//		
//		ВнешниеИсточникиДанных.Касса.cassa_change_user(id,Name,Rules,FullName);
//		
//	КонецЦикла;
//КонецПроцедуры

//&НаСервере
//Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
//	Если параметры.Свойство("СтрокаЮзерс") тогда
//		id=Параметры.СтрокаЮзерс.id;
//		Name=Параметры.СтрокаЮзерс.Name;
//		RULES=Параметры.СтрокаЮзерс.RULES;
//		FULLNAME=Параметры.СтрокаЮзерс.FULLNAME;
//		стр=СписокКасс.Добавить();
//		стр.касса=Параметры.СтрокаЮзерс.Касса;
//		Элементы.СписокКасс.ТолькоПросмотр=Истина;
//	Иначе
//		Запрос=новый запрос;
//		запрос.Текст="ВЫБРАТЬ
//		             |	КассыККМ.Ссылка КАК Ссылка
//		             |ИЗ
//		             |	Справочник.КассыККМ КАК КассыККМ
//		             |ГДЕ
//		             |	НЕ КассыККМ.ПометкаУдаления";
//		выборка=Запрос.Выполнить().Выбрать();
//		Пока выборка.Следующий()  Цикл
//			стр=СписокКасс.Добавить();
//			стр.касса=выборка.ссылка;
//		КонецЦикла;
//	КонецЕсли;
//КонецПроцедуры




















