
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ДокументОснование") Тогда
		Если ЗначениеЗаполнено(Параметры.ДокументОснование) Тогда
			ТолькоПросмотр = Истина;
			
			ТипДокумента = ТипЗнч(Параметры.ДокументОснование);
			Если ТипДокумента = Тип("ДокументСсылка.АктПостановкиНаБалансЕГАИС")
				ИЛИ ТипДокумента = Тип("ДокументСсылка.АктСписанияЕГАИС")
				ИЛИ ТипДокумента = Тип("ДокументСсылка.ВскрытиеТарыЕГАИС")
				ИЛИ ТипДокумента = Тип("ДокументСсылка.ОстаткиЕГАИС")
				ИЛИ ТипДокумента = Тип("ДокументСсылка.ПередачаВТорговыйЗалЕГАИС")
				ИЛИ ТипДокумента = Тип("ДокументСсылка.ВозвратИзТорговогоЗалаЕГАИС")
				ИЛИ ТипДокумента = Тип("ДокументСсылка.ТТНВходящаяЕГАИС")
				ИЛИ ТипДокумента = Тип("ДокументСсылка.ТТНИсходящаяЕГАИС") Тогда
				ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
					Список,
					"ДокументОснование",
					Параметры.ДокументОснование,
					Истина,
					ВидСравненияКомпоновкиДанных.Равно);
					
			ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПоступлениеТоваров")
				ИЛИ ТипДокумента = Тип("ДокументСсылка.ВозвратТоваровПоставщику")
				ИЛИ ТипДокумента = Тип("ДокументСсылка.СписаниеТоваров")
				ИЛИ ТипДокумента = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
				
				СписокСвязанныхДокументов = Новый СписокЗначений;
				СписокСвязанныхДокументов.Добавить(Параметры.ДокументОснование);
				
				Если ТипДокумента = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда
					ТТН = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.ДокументОснование, "ТТНВходящаяЕГАИС");
				ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
					ТТН = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.ДокументОснование, "ТТНИсходящаяЕГАИС");
				ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СписаниеТоваров") Тогда
					ТТН = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.ДокументОснование, "АктСписанияЕГАИС");
				ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
					СписокРеквизитов = Новый Структура;
					СписокРеквизитов.Вставить("ТТНВходящаяЕГАИС");
					СписокРеквизитов.Вставить("ТТНИсходящаяЕГАИС");
					РеквизитыПеремещения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.ДокументОснование, СписокРеквизитов);
				
					СписокСвязанныхДокументов.Добавить(РеквизитыПеремещения.ТТНВходящаяЕГАИС);
					
					ТТН = РеквизитыПеремещения.ТТНИсходящаяЕГАИС;
				КонецЕсли;
				
				СписокСвязанныхДокументов.Добавить(ТТН);
				
				ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
					Список,
					"ДокументОснование",
					СписокСвязанныхДокументов,
					Истина,
					ВидСравненияКомпоновкиДанных.ВСписке);
					
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьСписокЗапросовЕГАИС" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбработатьОтветы(Команда)
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ОбработкаОтветовИзЕГАИС_Завершение", ЭтотОбъект);
	ИнтеграцияЕГАИСКлиент.НачатьОбработкуОтветов(ОповещениеПриЗавершении);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработкаОтветовИзЕГАИС_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат.Результат Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьОповещениеПользователя(НСтр("ru = 'Обработка ответов'"),, НСтр("ru='Обработка ответов из ЕГАИС завершена.'"));
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.ПротоколОбменаЕГАИС"));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.Использование = Истина;
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("Список");
	
	ПредставлениеЭлемента = НСтр("ru = 'Получен отказ из УТМ'");
	ЭлементУсловногоОформления.Представление = ПредставлениеЭлемента;
	
	ЭлементОтбораДанных = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.ПолученОтказ");
	ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбораДанных.ПравоеЗначение = Истина;
	ЭлементОтбораДанных.Использование = Истина;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЕГАИССтатусОбработкиОшибкаПередачи);
	
КонецПроцедуры

#КонецОбласти


