
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("Идентификатор", Идентификатор);
	Параметры.Свойство("ДрайверОборудования", ДрайверОборудования);
	
	Заголовок = НСтр("ru='Оборудование:'") + Символы.НПП  + Строка(Идентификатор);
	
	ЦветТекста = ЦветаСтиля.ЦветТекстаФормы;
	ЦветОшибки = ЦветаСтиля.ЦветОтрицательногоЧисла;
	
	СписокCOMПортДО = Элементы.COMПортДО.СписокВыбора;
	Для Индекс = 1 По 32 Цикл
		СписокCOMПортДО.Добавить(Индекс, "COM" + Строка(Индекс));
	КонецЦикла;
	
	СписокСкоростьОбменаДО = Элементы.СкоростьОбменаСДО.СписокВыбора;
	СписокСкоростьОбменаДО.Добавить(9600,     "9600");
	СписокСкоростьОбменаДО.Добавить(19200,   "19200");
	СписокСкоростьОбменаДО.Добавить(38400,   "38400");
	СписокСкоростьОбменаДО.Добавить(57600,   "57600");
	СписокСкоростьОбменаДО.Добавить(115200, "115200");
	
	СписокРазмерДанныхДО = Элементы.РазмерДанныхДО.СписокВыбора;
	СписокРазмерДанныхДО.Добавить(4, "4");
	СписокРазмерДанныхДО.Добавить(5, "5");
	СписокРазмерДанныхДО.Добавить(6, "6");
	СписокРазмерДанныхДО.Добавить(7, "7");
	СписокРазмерДанныхДО.Добавить(8, "8");
	
	СписокЧетностьДО = Элементы.ЧетностьДО.СписокВыбора;
	СписокЧетностьДО.Добавить(0, "None");
	СписокЧетностьДО.Добавить(1, "Odd");
	СписокЧетностьДО.Добавить(2, "Even");
	СписокЧетностьДО.Добавить(3, "Mark");
	СписокЧетностьДО.Добавить(4, "Space");
	
	СписокСтопБитыДО = Элементы.СтопБитыДО.СписокВыбора;
	СписокСтопБитыДО.Добавить(0, НСтр("ru='1 стоп-бит'"));
	СписокСтопБитыДО.Добавить(1, НСтр("ru='1,5 стоп-бита'"));
	СписокСтопБитыДО.Добавить(2, НСтр("ru='2 стоп-бита'"));
	
	СписокУправлениеПотокомДО = Элементы.УправлениеПотокомДО.СписокВыбора;
	СписокУправлениеПотокомДО.Добавить(0, "Xon/Xoff");
	СписокУправлениеПотокомДО.Добавить(1, "Hardware");
	СписокУправлениеПотокомДО.Добавить(2, "None");
	
	СписокШиринаСлипЧека = Элементы.ШиринаСлипЧека.СписокВыбора;
	СписокШиринаСлипЧека.Добавить(24,  НСтр("ru='24 сим.'"));
	СписокШиринаСлипЧека.Добавить(32,  НСтр("ru='32 сим.'"));
	СписокШиринаСлипЧека.Добавить(36,  НСтр("ru='36 сим.'"));
	СписокШиринаСлипЧека.Добавить(40,  НСтр("ru='40 сим.'"));
	СписокШиринаСлипЧека.Добавить(48,  НСтр("ru='48 сим.'"));
	
	// Считывание значений из параметров.
	
	времАдресСА         = Неопределено;
	времПортСА          = Неопределено;
	времСкриптX25       = Неопределено;
	времТаймаутACK      = Неопределено;
	времТаймаутСА       = Неопределено;
	времЧислоNAK        = Неопределено;
	времРазмерПакета    = Неопределено;
	времТаймаутОперации = Неопределено;

	Параметры.ПараметрыОборудования.Свойство("АдресСА",         времАдресСА);
	Параметры.ПараметрыОборудования.Свойство("ПортСА",          времПортСА);
	Параметры.ПараметрыОборудования.Свойство("СкриптX25",       времСкриптX25);
	Параметры.ПараметрыОборудования.Свойство("ТаймаутACK",      времТаймаутACK);
	Параметры.ПараметрыОборудования.Свойство("ТаймаутСА",       времТаймаутСА);
	Параметры.ПараметрыОборудования.Свойство("ЧислоNAK",        времЧислоNAK);
	Параметры.ПараметрыОборудования.Свойство("РазмерПакета",    времРазмерПакета);
	Параметры.ПараметрыОборудования.Свойство("ТаймаутОперации", времТаймаутОперации);

	АдресСА         = ?(времАдресСА          = Неопределено, "127.0.0.1", времАдресСА);
	ПортСА          = ?(времПортСА           = Неопределено,           0, времПортСА);
	СкриптX25       = ?(времСкриптX25        = Неопределено,          "", времСкриптX25);
	ТаймаутACK      = ?(времТаймаутACK       = Неопределено,        5000, времТаймаутACK);
	ТаймаутСА       = ?(времТаймаутСА        = Неопределено,       45000, времТаймаутСА);
	ЧислоNAK        = ?(времЧислоNAK         = Неопределено,           3, времЧислоNAK);
	РазмерПакета    = ?(времРазмерПакета     = Неопределено,        1024, времРазмерПакета);
	ТаймаутОперации = ?(времТаймаутОперации  = Неопределено,          90, времТаймаутОперации);

	времАдресКУ                = Неопределено;
	времПортКУ                 = Неопределено;
	времТаймаутКУ              = Неопределено;
	времИдентификаторТерминала = Неопределено;
	времCOMПортДО              = Неопределено;
	времСкоростьОбменаСДО      = Неопределено;
	времРазмерДанныхДО         = Неопределено;
	времЧетностьДО             = Неопределено;
	времСтопБитыДО             = Неопределено;
	времУправлениеПотокомДО    = Неопределено;

	Параметры.ПараметрыОборудования.Свойство("АдресКУ",                времАдресКУ);
	Параметры.ПараметрыОборудования.Свойство("ПортКУ",                 времПортКУ);
	Параметры.ПараметрыОборудования.Свойство("ТаймаутКУ",              времТаймаутКУ);
	Параметры.ПараметрыОборудования.Свойство("ИдентификаторТерминала", времИдентификаторТерминала);
	Параметры.ПараметрыОборудования.Свойство("COMПортДО",              времCOMПортДО);
	Параметры.ПараметрыОборудования.Свойство("СкоростьОбменаСДО",      времСкоростьОбменаСДО);
	Параметры.ПараметрыОборудования.Свойство("РазмерДанныхДО",         времРазмерДанныхДО);
	Параметры.ПараметрыОборудования.Свойство("ЧетностьДО",             времЧетностьДО);
	Параметры.ПараметрыОборудования.Свойство("СтопБитыДО",             времСтопБитыДО);
	Параметры.ПараметрыОборудования.Свойство("УправлениеПотокомДО",    времУправлениеПотокомДО);

	АдресКУ                = ?(времАдресКУ                = Неопределено, "127.0.0.1", времАдресКУ);
	ПортКУ                 = ?(времПортКУ                 = Неопределено,           0, времПортКУ);
	ТаймаутКУ              = ?(времТаймаутКУ              = Неопределено,       60000, времТаймаутКУ);
	ИдентификаторТерминала = ?(времИдентификаторТерминала = Неопределено,          "", времИдентификаторТерминала);
	COMПортДО              = ?(времCOMПортДО              = Неопределено,           1, времCOMПортДО);
	СкоростьОбменаСДО      = ?(времСкоростьОбменаСДО      = Неопределено,       19200, времСкоростьОбменаСДО);
	РазмерДанныхДО         = ?(времРазмерДанныхДО         = Неопределено,           8, времРазмерДанныхДО);
	ЧетностьДО             = ?(времЧетностьДО             = Неопределено,           0, времЧетностьДО);
	СтопБитыДО             = ?(времСтопБитыДО             = Неопределено,           0, времСтопБитыДО);
	УправлениеПотокомДО    = ?(времУправлениеПотокомДО    = Неопределено,           2, времУправлениеПотокомДО);

	времКодВалюты                  = Неопределено;
	времШиринаСлипЧека             = Неопределено;
	времКоличествоКопийСлипЧека    = Неопределено;
	времКодСимволаЧастичногоОтреза = Неопределено;
	времДанныеМакетаСлипЧека       = Неопределено;

	Параметры.ПараметрыОборудования.Свойство("КодВалюты"                 , времКодВалюты);
	Параметры.ПараметрыОборудования.Свойство("ШиринаСлипЧека"            , времШиринаСлипЧека);
	Параметры.ПараметрыОборудования.Свойство("КоличествоКопийСлипЧека"   , времКоличествоКопийСлипЧека);
	Параметры.ПараметрыОборудования.Свойство("КодСимволаЧастичногоОтреза", времКодСимволаЧастичногоОтреза);
	Параметры.ПараметрыОборудования.Свойство("ДанныеМакетаСлипЧека"      , времДанныеМакетаСлипЧека);

	КодВалюты                  = ?(времКодВалюты                  = Неопределено, "643", времКодВалюты);
	ШиринаСлипЧека             = ?(времШиринаСлипЧека             = Неопределено,    36, времШиринаСлипЧека);
	КоличествоКопийСлипЧека    = ?(времКоличествоКопийСлипЧека    = Неопределено,     2, времКоличествоКопийСлипЧека);
	КодСимволаЧастичногоОтреза = ?(времКодСимволаЧастичногоОтреза = Неопределено,    22, времКодСимволаЧастичногоОтреза);
	ДанныеМакетаСлипЧека       = времДанныеМакетаСлипЧека;

	ПрочитатьДанныеМакета();
	
КонецПроцедуры

// Процедура - обработчик события "Перед открытием" формы.
//
// Параметры:
//  Отказ                - <Булево>
//                       - Признак отказа от открытия формы. Если в теле
//                         процедуры-обработчика установить данному параметру
//                         значение Истина, открытие формы выполнено не будет.
//                         Значение по умолчанию: Ложь.
//
//  СтандартнаяОбработка - <Булево>
//                       - В данный параметр передается признак выполнения
//                         стандартной (системной) обработки события. Если в
//                         теле процедуры-обработчика установить данному
//                         параметру значение Ложь, стандартная обработка
//                         события производиться не будет. Отказ от стандартной
//                         обработки не отменяет открытие формы.
//                         Значение по умолчанию: Истина.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ОбновитьИнформациюОДрайвере();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// Процедура представляет обработчик события "Нажатие" кнопки
// "ОК" командной панели "ОсновныеДействияФормы".
//
// Параметры:
//  Кнопка - <КнопкаКоманднойПанели>
//         - Кнопка, с которой связано данное событие (кнопка "ОК").
//
&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()

	ЗаписатьДанныеМакета();
	
	НовыеЗначениеПараметров = Новый Структура;
	
	НовыеЗначениеПараметров.Вставить("АдресСА"                , АдресСА);
	НовыеЗначениеПараметров.Вставить("ПортСА"                 , ПортСА);
	НовыеЗначениеПараметров.Вставить("СкриптX25"              , СкриптX25);
	НовыеЗначениеПараметров.Вставить("ТаймаутACK"             , ТаймаутACK);
	НовыеЗначениеПараметров.Вставить("ТаймаутСА"              , ТаймаутСА);
	НовыеЗначениеПараметров.Вставить("ЧислоNAK"               , ЧислоNAK);
	НовыеЗначениеПараметров.Вставить("РазмерПакета"           , РазмерПакета);
	НовыеЗначениеПараметров.Вставить("ТаймаутОперации"        , ТаймаутОперации);

	НовыеЗначениеПараметров.Вставить("АдресКУ"                , АдресКУ);
	НовыеЗначениеПараметров.Вставить("ПортКУ"                 , ПортКУ);
	НовыеЗначениеПараметров.Вставить("ТаймаутКУ"              , ТаймаутКУ);
	НовыеЗначениеПараметров.Вставить("ИдентификаторТерминала" , ИдентификаторТерминала);
	НовыеЗначениеПараметров.Вставить("COMПортДО"              , COMПортДО);
	НовыеЗначениеПараметров.Вставить("СкоростьОбменаСДО"      , СкоростьОбменаСДО);
	НовыеЗначениеПараметров.Вставить("РазмерДанныхДО"         , РазмерДанныхДО);
	НовыеЗначениеПараметров.Вставить("ЧетностьДО"             , ЧетностьДО);
	НовыеЗначениеПараметров.Вставить("СтопБитыДО"             , СтопБитыДО);
	НовыеЗначениеПараметров.Вставить("УправлениеПотокомДО"    , УправлениеПотокомДО);
	
	НовыеЗначениеПараметров.Вставить("КодВалюты"                  , КодВалюты);
	НовыеЗначениеПараметров.Вставить("ШиринаСлипЧека"             , ШиринаСлипЧека);
	НовыеЗначениеПараметров.Вставить("КоличествоКопийСлипЧека"    , КоличествоКопийСлипЧека);
	НовыеЗначениеПараметров.Вставить("КодСимволаЧастичногоОтреза" , КодСимволаЧастичногоОтреза);
	НовыеЗначениеПараметров.Вставить("ДанныеМакетаСлипЧека"       , ДанныеМакетаСлипЧека);

	Результат = Новый Структура;
	Результат.Вставить("Идентификатор", Идентификатор);
	Результат.Вставить("ПараметрыОборудования", НовыеЗначениеПараметров);
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ТестУстройства(Команда)
	
	ОчиститьСообщения();
	
	РезультатТеста = Неопределено;

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;

	времПараметрыУстройства = Новый Структура();
	времПараметрыУстройства.Вставить("АдресСА"                   , АдресСА);
	времПараметрыУстройства.Вставить("ПортСА"                    , ПортСА);
	времПараметрыУстройства.Вставить("СкриптX25"                 , СкриптX25);
	времПараметрыУстройства.Вставить("ТаймаутACK"                , ТаймаутACK);
	времПараметрыУстройства.Вставить("ТаймаутСА"                 , ТаймаутСА);
	времПараметрыУстройства.Вставить("ЧислоNAK"                  , ЧислоNAK);
	времПараметрыУстройства.Вставить("РазмерПакета"              , РазмерПакета);
	времПараметрыУстройства.Вставить("ТаймаутОперации"           , ТаймаутОперации);

	времПараметрыУстройства.Вставить("АдресКУ"                   , АдресКУ);
	времПараметрыУстройства.Вставить("ПортКУ"                    , ПортКУ);
	времПараметрыУстройства.Вставить("ТаймаутКУ"                 , ТаймаутКУ);
	времПараметрыУстройства.Вставить("ИдентификаторТерминала"    , ИдентификаторТерминала);
	времПараметрыУстройства.Вставить("COMПортДО"                 , COMПортДО);
	времПараметрыУстройства.Вставить("СкоростьОбменаСДО"         , СкоростьОбменаСДО);
	времПараметрыУстройства.Вставить("РазмерДанныхДО"            , РазмерДанныхДО);
	времПараметрыУстройства.Вставить("ЧетностьДО"                , ЧетностьДО);
	времПараметрыУстройства.Вставить("СтопБитыДО"                , СтопБитыДО);
	времПараметрыУстройства.Вставить("УправлениеПотокомДО"       , УправлениеПотокомДО);

	времПараметрыУстройства.Вставить("КодВалюты"                 , КодВалюты);
	времПараметрыУстройства.Вставить("ШиринаСлипЧека"            , ШиринаСлипЧека);
	времПараметрыУстройства.Вставить("КоличествоКопийСлипЧека"   , КоличествоКопийСлипЧека);
	времПараметрыУстройства.Вставить("КодСимволаЧастичногоОтреза", КодСимволаЧастичногоОтреза);
	времПараметрыУстройства.Вставить("ДанныеМакетаСлипЧека"      , ДанныеМакетаСлипЧека);

	Результат = МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("CheckHealth",
	                                                                      ВходныеПараметры,
	                                                                      ВыходныеПараметры,
	                                                                      Идентификатор,
	                                                                      времПараметрыУстройства);

	Если Результат Тогда
		ТекстСообщения = НСтр("ru = 'Тест успешно выполнен.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	Иначе
		ДополнительноеОписание = ?(ТипЗнч(ВыходныеПараметры) = Тип("Массив")
		                           И ВыходныеПараметры.Количество() >= 2,
		                           НСтр("ru = 'Дополнительное описание:'") + " " + ВыходныеПараметры[1],
		                           "");


		ТекстСообщения = НСтр("ru = 'Тест не пройден.%ПереводСтроки%%ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПереводСтроки%", ?(ПустаяСтрока(ДополнительноеОписание),
		                                                                  "",
		                                                                  Символы.ПС));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ?(ПустаяСтрока(ДополнительноеОписание),
		                                                                           "",
		                                                                           ДополнительноеОписание));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДрайвер(Команда)
	
	ОчиститьСообщения();
	Текст = НСтр("ru = 'Установка драйвера производиться средствами дистрибутива поставщика.'");
	ПоказатьПредупреждение(, Текст);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьИнформациюОДрайвере()

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;

	времПараметрыУстройства = Новый Структура();
	времПараметрыУстройства.Вставить("АдресСА"                   , АдресСА);
	времПараметрыУстройства.Вставить("ПортСА"                    , ПортСА);
	времПараметрыУстройства.Вставить("СкриптX25"                 , СкриптX25);
	времПараметрыУстройства.Вставить("ТаймаутACK"                , ТаймаутACK);
	времПараметрыУстройства.Вставить("ТаймаутСА"                 , ТаймаутСА);
	времПараметрыУстройства.Вставить("ЧислоNAK"                  , ЧислоNAK);
	времПараметрыУстройства.Вставить("РазмерПакета"              , РазмерПакета);
	времПараметрыУстройства.Вставить("ТаймаутОперации"           , ТаймаутОперации);

	времПараметрыУстройства.Вставить("АдресКУ"                   , АдресКУ);
	времПараметрыУстройства.Вставить("ПортКУ"                    , ПортКУ);
	времПараметрыУстройства.Вставить("ТаймаутКУ"                 , ТаймаутКУ);
	времПараметрыУстройства.Вставить("ИдентификаторТерминала"    , ИдентификаторТерминала);
	времПараметрыУстройства.Вставить("COMПортДО"                 , COMПортДО);
	времПараметрыУстройства.Вставить("СкоростьОбменаСДО"         , СкоростьОбменаСДО);
	времПараметрыУстройства.Вставить("РазмерДанныхДО"            , РазмерДанныхДО);
	времПараметрыУстройства.Вставить("ЧетностьДО"                , ЧетностьДО);
	времПараметрыУстройства.Вставить("СтопБитыДО"                , СтопБитыДО);
	времПараметрыУстройства.Вставить("УправлениеПотокомДО"       , УправлениеПотокомДО);

	времПараметрыУстройства.Вставить("КодВалюты"                 , КодВалюты);
	времПараметрыУстройства.Вставить("ШиринаСлипЧека"            , ШиринаСлипЧека);
	времПараметрыУстройства.Вставить("КоличествоКопийСлипЧека"   , КоличествоКопийСлипЧека);
	времПараметрыУстройства.Вставить("КодСимволаЧастичногоОтреза", КодСимволаЧастичногоОтреза);
	времПараметрыУстройства.Вставить("ДанныеМакетаСлипЧека"      , ДанныеМакетаСлипЧека);

	Если МенеджерОборудованияКлиент.ВыполнитьДополнительнуюКоманду("ПолучитьВерсиюДрайвера",
	                                                               ВходныеПараметры,
	                                                               ВыходныеПараметры,
	                                                               Идентификатор,
	                                                               времПараметрыУстройства) Тогда
		Драйвер = ВыходныеПараметры[0];
		Версия  = ВыходныеПараметры[1];
	Иначе
		Драйвер = ВыходныеПараметры[2];
		Версия  = НСтр("ru='Не определена'");
	КонецЕсли;

	Элементы.Драйвер.ЦветТекста = ?(Драйвер = НСтр("ru='Не установлен'"), ЦветОшибки, ЦветТекста);
	Элементы.Версия.ЦветТекста  = ?(Версия  = НСтр("ru='Не определена'"), ЦветОшибки, ЦветТекста);

КонецПроцедуры

Процедура ПрочитатьДанныеМакета()

	Если ДанныеМакетаСлипЧека.Количество() = 0 Тогда
		ДанныеМакетаСлипЧека.Добавить("БАНК"   , "Банк");
		ДанныеМакетаСлипЧека.Добавить(""       , "Организация");
		ДанныеМакетаСлипЧека.Добавить(""       , "Город");
		ДанныеМакетаСлипЧека.Добавить(""       , "Адрес");
		ДанныеМакетаСлипЧека.Добавить("ОТДЕЛ1" , "Отдел");
		ДанныеМакетаСлипЧека.Добавить("КАССИР" , "Кассир");
		ДанныеМакетаСлипЧека.Добавить("СПАСИБО", "ТекстПодвала");
	КонецЕсли;

	Банк         = ДанныеМакетаСлипЧека[0].Значение;
	Организация  = ДанныеМакетаСлипЧека[1].Значение;
	Город        = ДанныеМакетаСлипЧека[2].Значение;
	Адрес        = ДанныеМакетаСлипЧека[3].Значение;
	Отдел        = ДанныеМакетаСлипЧека[4].Значение;
	Кассир       = ДанныеМакетаСлипЧека[5].Значение;
	ТекстПодвала = ДанныеМакетаСлипЧека[6].Значение;

КонецПроцедуры

Процедура ЗаписатьДанныеМакета()

	ДанныеМакетаСлипЧека[0].Значение = Банк;
	ДанныеМакетаСлипЧека[1].Значение = Организация;
	ДанныеМакетаСлипЧека[2].Значение = Город;
	ДанныеМакетаСлипЧека[3].Значение = Адрес;
	ДанныеМакетаСлипЧека[4].Значение = Отдел;
	ДанныеМакетаСлипЧека[5].Значение = Кассир;
	ДанныеМакетаСлипЧека[6].Значение = ТекстПодвала;

КонецПроцедуры

#КонецОбласти
