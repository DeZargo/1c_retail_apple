#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ОповещениеРазрешитьРедактированиеРеквизитовОбъекта(РезультатОткрытияФормы, ДополнительныеПараметры) Экспорт
	
	Если НЕ РезультатОткрытияФормы = Неопределено Тогда
		УстановитьВидимостьПодключаемогоОборудования();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ИспользоватьПодключаемоеОборудование = ПолучитьФункциональнуюОпцию("ИспользоватьПодключаемоеОборудование");
	ИспользоватьОбменСПодключаемымОборудованием = ПолучитьФункциональнуюОпцию("ИспользоватьОбменСПодключаемымОборудованием");
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	
	// ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец ДополнительныеОтчетыИОбработки
	
	Если НЕ ИспользоватьПодключаемоеОборудование Тогда
		Элементы.ТипКассы.Доступность = Ложь;
		ТекстПодсказки = НСтр("ru = 'ККМ без подключения оборудования. 
								|Используется при применении автономного фискального регистратора 
								|или при продажах без обязательной печати фискального чека.
								|'");
	ИначеЕсли ИспользоватьОбменСПодключаемымОборудованием Тогда
		Элементы.ТипКассы.СписокВыбора.Добавить(Перечисления.ТипыКассККМ.ККМOffline);
		Элементы.ТипКассы.СписокВыбора.Добавить(Перечисления.ТипыКассККМ.СервисОборудования);
		ТекстПодсказки = НСтр("ru = 'Фискальный регистратор или АСПД, принтер чеков.
								|Используется при печати чека на устройстве, подключенном к системе, на фискальном регистраторе, 
								|АСПД (автоматизированной системе печати документов) или принтере чеков.
								|
								|ККМ без подключения оборудования.
								|Используется при применении автономного фискального регистратора
								|или при продажах без обязательной печати фискального чека.
								|
								|ККМ Offline.
								|Используется при продажах на ККМ в режиме Offline.
								|
								|Сервис оборудования
								|Используется при получении информации о продажах от
								|Web-сервис оборудования, например, мобильной кассы.
								|'");
	Иначе
		ТекстПодсказки = НСтр("ru = 'Фискальный регистратор или АСПД, принтер чеков. 
								|Используется при печати чека на устройстве, подключенном к системе, на фискальном регистраторе, 
								|АСПД (автоматизированной системе печати документов) или принтере чеков.
								|
								|ККМ без подключения оборудования. 
								|Используется при применении автономного фискального регистратора 
								|или при продажах без обязательной печати фискального чека.
								|'");
	КонецЕсли;
	
	Элементы.ТипКассы.Подсказка = ТекстПодсказки;
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций") Тогда
		Элементы.Организация.Видимость = Ложь;
	КонецЕсли;
	
	УстановитьВидимостьПодключаемогоОборудования();
	// Подсистема запрета редактирования ключевых реквизитов объектов.
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) И НЕ Объект.ТипКассы = ПредопределенноеЗначение("Перечисление.ТипыКассККМ.СервисОборудования") Тогда
		Объект.РабочееМесто = МенеджерОборудованияКлиентПовтИсп.ПолучитьРабочееМестоКлиента();
		РабочееМестоПриИзменении(Неопределено);
	КонецЕсли;
	
	УстановитьВидимостьРабочегоМеста();
	
	СформироватьАвтоНаименование();
	ОбновитьПараметрыВыбораКассы();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	УстановитьВидимостьПодключаемогоОборудования();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьВидимостьПодключаемогоОборудования();
	
	// Подсистема запрета редактирования ключевых реквизитов объектов.
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	СформироватьАвтоНаименование();
КонецПроцедуры

&НаКлиенте
Процедура МагазинПриИзменении(Элемент)
	СформироватьАвтоНаименование();
КонецПроцедуры

&НаКлиенте
Процедура РабочееМестоПриИзменении(Элемент)
	
	РабочееМестоПриИзмененииСервер()
	
КонецПроцедуры

&НаКлиенте
Процедура ТипКассыПриИзменении(Элемент)
	
	Объект.ИспользоватьБезПодключенияОборудования = Объект.ТипКассы = ПредопределенноеЗначение("Перечисление.ТипыКассККМ.АвтономнаяККМ");
	Объект.ПодключаемоеОборудование = ПредопределенноеЗначение("Справочник.ПодключаемоеОборудование.ПустаяСсылка");
	Объект.ШаблонЧекаККМ = ПредопределенноеЗначение("Справочник.ХранилищеШаблонов.ПустаяСсылка");
	Объект.ШаблонЧекаККМВозврат = ПредопределенноеЗначение("Справочник.ХранилищеШаблонов.ПустаяСсылка");
	Объект.ШиринаЛенты = 0;
	
	Если Объект.ТипКассы = ПредопределенноеЗначение("Перечисление.ТипыКассККМ.ФискальныйРегистратор") Тогда
		Объект.НастройкаРаспределенияВыручкиПоСекциям = ПредопределенноеЗначение("Справочник.НастройкиРаспределенияВыручкиПоСекциямФР.РаспределениеПоУмолчанию");
	Иначе
		Объект.НастройкаРаспределенияВыручкиПоСекциям = ПредопределенноеЗначение("Справочник.НастройкиРаспределенияВыручкиПоСекциямФР.ПустаяСсылка");
	КонецЕсли;
	ОбновитьПараметрыВыбораКассы();
	
	УстановитьВидимостьРабочегоМеста();
	УстановитьВидимостьПодключаемогоОборудования();
	
	Элементы.ПодключаемоеОборудование.ОтметкаНезаполненного = НЕ Объект.ИспользоватьБезПодключенияОборудования;
	Элементы.РаспределениеВыручки.ОтметкаНезаполненного     = Объект.ТипКассы = ПредопределенноеЗначение("Перечисление.ТипыКассККМ.ФискальныйРегистратор");
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключаемоеОборудованиеПриИзменении(Элемент)
	
	ПодключаемоеОборудованиеПриИзмененииСервер();
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

// Обработчик команды, создаваемой механизмом запрета редактирования ключевых реквизитов.
//
&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	Если Не Объект.Ссылка.Пустая() Тогда
		ОбработчикОповещения = Новый ОписаниеОповещения("ОповещениеРазрешитьРедактированиеРеквизитовОбъекта", ЭтотОбъект);
		ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект, ОбработчикОповещения);
	КонецЕсли;
	
КонецПроцедуры

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтотОбъект, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СформироватьАвтоНаименование()
	
	Элементы.Наименование.СписокВыбора.Очистить();
	СтрокаНаименования = СокрЛП(Объект.Владелец) + "(" + СокрЛП(Объект.Магазин) + ")";
	
	Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПараметрыВыбораКассы()
	
	ПараметрыВыбораЭлемента = Новый Массив;
	Если Объект.ТипКассы = ПредопределенноеЗначение("Перечисление.ТипыКассККМ.ФискальныйРегистратор") Тогда
		Значения = Новый Массив;
		Значения.Добавить(ПредопределенноеЗначение("Перечисление.ТипыПодключаемогоОборудования.ФискальныйРегистратор"));
		Значения.Добавить(ПредопределенноеЗначение("Перечисление.ТипыПодключаемогоОборудования.ПринтерЧеков"));
		НовыйПараметр = Новый ПараметрВыбора("Отбор.ТипОборудования", Значения);
		ПараметрыВыбораЭлемента.Добавить(НовыйПараметр);
		НастройкаШаблонов = Истина;
		
	ИначеЕсли Объект.ТипКассы = ПредопределенноеЗначение("Перечисление.ТипыКассККМ.СервисОборудования") Тогда
		
		Значения = Новый Массив;
		Значения.Добавить(ПредопределенноеЗначение("Перечисление.ТипыПодключаемогоОборудования.WebСервисОборудование"));
		НовыйПараметр = Новый ПараметрВыбора("Отбор.ТипОборудования", Значения);
		ПараметрыВыбораЭлемента.Добавить(НовыйПараметр);
		НастройкаШаблонов = Ложь;
		
	Иначе
		НовыйПараметр = Новый ПараметрВыбора("Отбор.ТипОборудования", ПредопределенноеЗначение("Перечисление.ТипыПодключаемогоОборудования.ККМOffline"));
		ПараметрыВыбораЭлемента.Добавить(НовыйПараметр);
		НастройкаШаблонов = Ложь;
	КонецЕсли;
	
	НовыйПараметр = Новый ПараметрВыбора("Отбор.УстройствоИспользуется", Истина);
	ПараметрыВыбораЭлемента.Добавить(НовыйПараметр);
	
	Элементы.ПодключаемоеОборудование.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораЭлемента);
	
КонецПроцедуры

&НаСервере
Процедура ПодключаемоеОборудованиеПриИзмененииСервер()
	
	Объект.СерийныйНомер = Объект.ПодключаемоеОборудование.СерийныйНомер;
	
КонецПроцедуры

&НаСервере
Процедура РабочееМестоПриИзмененииСервер()
	
	УстановитьВидимостьПодключаемогоОборудования();
	ПодключаемоеОборудованиеПриИзмененииСервер();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДопСвойств()
	
	Видимость = Ложь;
	Если Объект.ТипКассы = Перечисления.ТипыКассККМ.ФискальныйРегистратор Тогда
		Видимость = НЕ Объект.ИспользоватьБезПодключенияОборудования;
		Элементы.РаспределениеВыручки.Видимость	= Видимость;
		Элементы.ШаблонЧекаККМ.Видимость		= Видимость;
		Элементы.ШаблонЧекаККМВозврат.Видимость	= Видимость;
	Иначе
		Элементы.РаспределениеВыручки.Видимость	= Ложь;
		Элементы.ШаблонЧекаККМ.Видимость		= Ложь;
		Элементы.ШаблонЧекаККМВозврат.Видимость	= Ложь;
	КонецЕсли;
	
	УстановитьВидимостьШириныЛенты();
	УстановитьВидимостьСоответствияВидовОплаты();
	
	Если Видимость Тогда
		УстановитьДоступностьДопСвойств()
	КонецЕсли
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьПодключаемогоОборудования()
	
	Если Объект.ТипКассы = Перечисления.ТипыКассККМ.СервисОборудования Тогда
		Элементы.ПодключаемоеОборудование.Видимость = Истина;
	Иначе
		Элементы.ПодключаемоеОборудование.Видимость = ЗначениеЗаполнено(Объект.РабочееМесто) И НЕ Объект.ИспользоватьБезПодключенияОборудования;
	КонецЕсли;
	
	Элементы.ПодключаемоеОборудование.АвтоОтметкаНезаполненного = НЕ Объект.ИспользоватьБезПодключенияОборудования;
	
	Элементы.РаспределениеВыручки.АвтоОтметкаНезаполненного     = Объект.ТипКассы = Перечисления.ТипыКассККМ.ФискальныйРегистратор;
	
	УстановитьВидимостьДопСвойств();
	
	Если Элементы.ПодключаемоеОборудование.Видимость Тогда
		УстановитьДоступностьПодключаемогоОборудования()
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьРабочегоМеста()
	
	Если Объект.ТипКассы = ПредопределенноеЗначение("Перечисление.ТипыКассККМ.СервисОборудования") Тогда
		Объект.РабочееМесто = Неопределено;
		Элементы.РабочееМесто.Видимость = Ложь;
		Элементы.РабочееМесто.АвтоВыборНезаполненного = Ложь;
	Иначе
		Если НЕ ЗначениеЗаполнено(Объект.РабочееМесто) Тогда
			Объект.РабочееМесто = МенеджерОборудованияКлиентПовтИсп.ПолучитьРабочееМестоКлиента();
		КонецЕсли;
		Элементы.РабочееМесто.Видимость = Истина;
		Элементы.РабочееМесто.АвтоВыборНезаполненного = Истина;
	КонецЕсли;
	
	Если Элементы.РабочееМесто.Видимость Тогда
		УстановитьДоступностьРабочегоМеста()
	КонецЕсли
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСоответствияВидовОплаты()
	
	Элементы.СоответствиеВидовОплаты.Видимость = (Объект.ТипКассы = Перечисления.ТипыКассККМ.ККМOffline) ИЛИ (Объект.ТипКассы = Перечисления.ТипыКассККМ.СервисОборудования);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьШириныЛенты()
	
	Элементы.ШиринаЛенты.Видимость = НЕ Объект.ИспользоватьБезПодключенияОборудования И Объект.ТипКассы = Перечисления.ТипыКассККМ.ФискальныйРегистратор;
	
	Если Элементы.ШиринаЛенты.Видимость Тогда
		УстановитьДоступностьШириныЛенты()
	КонецЕсли
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьПодключаемогоОборудования()
	
	Если Объект.ТипКассы = Перечисления.ТипыКассККМ.СервисОборудования Тогда
		
		Элементы.ПодключаемоеОборудование.ТолькоПросмотр = Ложь;
	Иначе
		Элементы.ПодключаемоеОборудование.ТолькоПросмотр = НЕ ЗначениеЗаполнено(Объект.РабочееМесто)
			ИЛИ Объект.ИспользоватьБезПодключенияОборудования;
		
	КонецЕсли;
	
	Элементы.ПодключаемоеОборудование.АвтоОтметкаНезаполненного = НЕ Объект.ИспользоватьБезПодключенияОборудования;
	
	Элементы.РаспределениеВыручки.АвтоОтметкаНезаполненного     = Объект.ТипКассы = Перечисления.ТипыКассККМ.ФискальныйРегистратор;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьРабочегоМеста()
	
	Если Объект.ТипКассы = ПредопределенноеЗначение("Перечисление.ТипыКассККМ.СервисОборудования") Тогда
		Объект.РабочееМесто = Неопределено;
		Элементы.РабочееМесто.Доступность = Ложь;
		Элементы.РабочееМесто.АвтоВыборНезаполненного = Ложь;
	Иначе
		Если НЕ ЗначениеЗаполнено(Объект.РабочееМесто) Тогда
			Объект.РабочееМесто = МенеджерОборудованияКлиентПовтИсп.ПолучитьРабочееМестоКлиента();
		КонецЕсли;
		Элементы.РабочееМесто.Доступность = Истина;
		Элементы.РабочееМесто.АвтоВыборНезаполненного = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьШириныЛенты()
	
	Элементы.ШиринаЛенты.ТолькоПросмотр = Объект.ИспользоватьБезПодключенияОборудования
										  ИЛИ НЕ (Объект.ТипКассы = Перечисления.ТипыКассККМ.ФискальныйРегистратор);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьДопСвойств()
	Если Объект.ТипКассы = Перечисления.ТипыКассККМ.ФискальныйРегистратор Тогда
		Элементы.РаспределениеВыручки.ТолькоПросмотр = Объект.ИспользоватьБезПодключенияОборудования;
		Элементы.ШаблонЧекаККМ.ТолькоПросмотр        = Объект.ИспользоватьБезПодключенияОборудования;
		Элементы.ШаблонЧекаККМВозврат.ТолькоПросмотр = Объект.ИспользоватьБезПодключенияОборудования;
	Иначе
		Элементы.РаспределениеВыручки.ТолькоПросмотр = Истина;
		Элементы.ШаблонЧекаККМ.ТолькоПросмотр        = Истина;
		Элементы.ШаблонЧекаККМВозврат.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	УстановитьДоступностьШириныЛенты();
	
КонецПроцедуры



// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтотОбъект, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

#КонецОбласти
