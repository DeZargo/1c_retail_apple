#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ОбработкаРазблокированияРеквизитовЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Истина Тогда
		ЭтоТовар = Объект.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Товар");
		ИндивидуальныеУпаковки = (Объект.НаборУпаковок = ИндивидуальныйНаборУпаковок
		                         ИЛИ Не ЗначениеЗаполнено(Объект.НаборУпаковок));
		
		Если НЕ Элементы.ЕдиницаИзмерения.ТолькоПросмотр Тогда
			Элементы.ЕдиницаИзмерения.ТолькоПросмотр = Не ИндивидуальныеУпаковки;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Объект.НаборУпаковок) Тогда
			Элементы.НаборУпаковок.ТолькоПросмотр = Ложь;
		КонецЕсли;
		
		Если НЕ Объект.ИспользоватьСерийныеНомера Тогда
			Элементы.ИспользоватьСерийныеНомера.ТолькоПросмотр = Ложь;
			Элементы.ТипСерийногоНомера.ТолькоПросмотр = Ложь;
		КонецЕсли;
		
		Если Объект.Номинал = 0 Тогда
			Элементы.Номинал.ТолькоПросмотр = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросДобавитьСерийныйНомер(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Если ЭтаФорма.Записать() Тогда
			
		ЗначенияЗаполнения = Новый Структура("Владелец", Объект.Ссылка);
		
		ОткрытьФорму("Справочник.СерийныеНомера.ФормаОбъекта", 
			Новый Структура("ЗначенияЗаполнения",ЗначенияЗаполнения), Элементы.СерийныеНомера);
			
		КонецЕсли;
	Иначе
		Возврат
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросДобавитьИзображение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		Если Записать() Тогда
		
			ДобавитьИзображениеДействиеПослеДобавления();
		
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

// Процедура - обработчик события "ПриСозданииНаСервере" формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "СтраницаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// Обработчик механизма "ВерсионированиеОбъектов".
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	
	// ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ДополнительныеОтчетыИОбработки
		
	// Обработчик подсистемы запрета редактирования реквизитов объектов.
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
	Если НЕ ЗначениеЗаполнено(Объект.НаборУпаковок) И Элементы.Найти("НаборУпаковок") <> Неопределено Тогда
		Элементы.НаборУпаковок.ТолькоПросмотр = Ложь;
		НоваяСтрока = ЭтаФорма.ПараметрыЗапретаРедактированияРеквизитов.НайтиСтроки(Новый Структура("ИмяРеквизита","НаборУпаковок"))[0];
		НоваяСтрока.РедактированиеРазрешено = НоваяСтрока.ПравоРедактирования;
	КонецЕсли;
		
	Если НЕ Объект.ИспользоватьСерийныеНомера Тогда
		Если Элементы.Найти("ИспользоватьСерийныеНомера") <> Неопределено Тогда
			Элементы.ИспользоватьСерийныеНомера.ТолькоПросмотр = Ложь;
			НоваяСтрока = ЭтаФорма.ПараметрыЗапретаРедактированияРеквизитов.НайтиСтроки(Новый Структура("ИмяРеквизита","ИспользоватьСерийныеНомера"))[0];
			НоваяСтрока.РедактированиеРазрешено = НоваяСтрока.ПравоРедактирования;
		КонецЕсли;
		Если Элементы.Найти("ТипСерийногоНомера") <> Неопределено Тогда
			Элементы.ТипСерийногоНомера.ТолькоПросмотр = Ложь;
			НоваяСтрока = ЭтаФорма.ПараметрыЗапретаРедактированияРеквизитов.НайтиСтроки(Новый Структура("ИмяРеквизита","ТипСерийногоНомера"))[0];
			НоваяСтрока.РедактированиеРазрешено = НоваяСтрока.ПравоРедактирования;
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.Номинал = 0 И Элементы.Найти("Номинал") <> Неопределено Тогда
		Элементы.Номинал.ТолькоПросмотр = Ложь;
		НоваяСтрока = ЭтаФорма.ПараметрыЗапретаРедактированияРеквизитов.НайтиСтроки(Новый Структура("ИмяРеквизита","Номинал"))[0];
		НоваяСтрока.РедактированиеРазрешено = НоваяСтрока.ПравоРедактирования;
	КонецЕсли;
	
	Элементы.ДекорацияВес.Заголовок = Строка(ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ЕдиницаИзмеренияВеса"));
	ИндивидуальныйНаборУпаковок = Справочники.НаборыУпаковок.ИндивидуальныйДляНоменклатуры;
	
	Элементы.ТипСрокаДействия.СписокВыбора.Добавить(Перечисления.СрокДействияПодарочныхСертификатов.БезОграниченияСрока);
	Элементы.ТипСрокаДействия.СписокВыбора.Добавить(Перечисления.СрокДействияПодарочныхСертификатов.СОграничениемНаДату);
	Элементы.ТипСрокаДействия.СписокВыбора.Добавить(Перечисления.СрокДействияПодарочныхСертификатов.ПериодПослеПродажи);
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриСозданииЧтенииНаСервере();
	КонецЕсли;
	
	ЗаполнитьТипЦенника();
	
	Если не РольДоступна("ПолныеПрава") Тогда
		Элементы.Акции.ТолькоПросмотр=Истина;
	КонецЕсли;
	
КонецПроцедуры

процедура ЗаполнитьТипЦенника()
	Если ЭтаФорма.Параметры.Ключ<>Неопределено тогда
		Запрос=Новый Запрос;
		Запрос.УстановитьПараметр("ном",ЭтаФорма.Параметры.Ключ);
		ИнтеграцияОфис=регистрыСведений.ИнтеграцияОфис.СоздатьНаборЗаписей();
		ИнтеграцияОфис.Отбор.свойство.установить("КрасныйЦенник");
		ИнтеграцияОфис.Прочитать();
		КрасныйЦенник=ИнтеграцияОфис[0].ЗначениеВБазе;
		Запрос.УстановитьПараметр("красныйЦенник",КрасныйЦенник);
		Запрос.Текст="ВЫБРАТЬ
		             |	НоменклатураСегмента.Номенклатура
		             |ИЗ
		             |	РегистрСведений.НоменклатураСегмента КАК НоменклатураСегмента
		             |ГДЕ
		             |	НоменклатураСегмента.Сегмент = &красныйЦенник
					 |	И НоменклатураСегмента.Номенклатура = &ном";
		Выборка=Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ЭтаФорма.Элементы.ТипЦенника.ЦветФона=Новый Цвет(255, 142, 162);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// Процедура - обработчик события "ПриОткрытии" формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	АвтоНаименованиеНоменклатуры();

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.Ссылка)
		И НЕ ДействияПослеЗаписиИЗакрытии = Неопределено
		И ДействияПослеЗаписиИЗакрытии.Свойство("СозданиеНовогоШтрихКода") 
		И ДействияПослеЗаписиИЗакрытии.СозданиеНовогоШтрихКода.Свойство("ОткрытьФормуСозданияШтрихКодаПриЗакрытии") Тогда
		
		Если ЗавершениеРаботы Тогда
			Отказ = Истина;
		Иначе
			
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("ТипШтрихкода, Штрихкод"));
			ПараметрыФормы.ЗначенияЗаполнения.Вставить("Владелец", Объект.Ссылка);
			ЗаполнитьЗначенияСвойств(ПараметрыФормы.ЗначенияЗаполнения, ДействияПослеЗаписиИЗакрытии.СозданиеНовогоШтрихКода.СтруктураПараметровКлиента);
			
			ОткрытьФорму("РегистрСведений.Штрихкоды.Форма.ФормаЗаписи", ПараметрыФормы,,,,,,РежимОткрытияОкнаФормы.Независимый);
			
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "ОбработкаОповещения" формы.
//
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
		ОбновитьОтображениеЗакладок();
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	Если ИмяСобытия = "СозданыСертификаты" Тогда
		
		Элементы.СерийныеНомера.Обновить();

	КонецЕсли;
	
	Если ИмяСобытия = "Запись_ПрисоединенныйФайл" Тогда
		СсылкаНаФайл = ?(ТипЗнч(Источник) = Тип("Массив"), Источник[0], Источник);
		Если ВыборИзображения Тогда
			Объект.ФайлКартинки = СсылкаНаФайл;
			АдресКартинки = НавигационнаяСсылкаКартинки(Объект.ФайлКартинки, УникальныйИдентификатор);
			Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "ПриЧтенииНаСервере" формы.
//
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ПриСозданииЧтенииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	РаботаСФайламиКлиент.ПоказатьПодтверждениеЗакрытияФормыСФайлами(ЭтотОбъект, Отказ, Ложь, Объект.Ссылка);
КонецПроцедуры

// Процедура - обработчик события "ПередЗаписьюНаСервере" формы.
//
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

// Процедура - обработчик события "ПослеЗаписиНаСервере" формы.
//
&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// Подсистема запрета редактирования ключевых реквизитов объектов.
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
	Если Не ЗначениеЗаполнено(Объект.НаборУпаковок) Тогда
		Элементы.НаборУпаковок.ТолькоПросмотр = Ложь;
	КонецЕсли;
	Если НЕ Объект.ИспользоватьСерийныеНомера Тогда
		Элементы.ИспользоватьСерийныеНомера.ТолькоПросмотр = Ложь;
		Элементы.ТипСерийногоНомера.ТолькоПросмотр         = Ложь;
	КонецЕсли;
	
	УстановитьОтборДинамическихСписков();
	
	Если НЕ ДействияПослеЗаписиИЗакрытии = Неопределено
		И ДействияПослеЗаписиИЗакрытии.Свойство("СозданиеНовогоШтрихКода") Тогда
		Если НЕ Справочники.Номенклатура.ПроверитьИспользованиеХарактеристик(ТекущийОбъект.Ссылка)
			И НЕ ЗначениеЗаполнено(ТекущийОбъект.НаборУпаковок) Тогда
			
			ЗаписьШтрихкода              = РегистрыСведений.Штрихкоды.СоздатьМенеджерЗаписи();
			ЗаписьШтрихкода.Владелец     = ТекущийОбъект.Ссылка;
			ЗаписьШтрихкода.ТипШтрихкода = ДействияПослеЗаписиИЗакрытии.СозданиеНовогоШтрихКода.СтруктураПараметровКлиента.ТипШтрихкода;
			ЗаписьШтрихкода.Штрихкод     = ДействияПослеЗаписиИЗакрытии.СозданиеНовогоШтрихКода.СтруктураПараметровКлиента.Штрихкод;
			ЗаписьШтрихкода.Записать(Истина);
			
			ДействияПослеЗаписиИЗакрытии.Удалить("СозданиеНовогоШтрихКода");
		Иначе
			
			ДействияПослеЗаписиИЗакрытии.СозданиеНовогоШтрихКода.Вставить("ОткрытьФормуСозданияШтрихКодаПриЗакрытии");
	
		КонецЕсли;
	
	КонецЕсли;
	
	ТипСерийногоНомераСсылка = ТекущийОбъект.ТипСерийногоНомера;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Процедура - обработчик события "ПриИзменении" поля "ВидНоменклатуры".
//
&НаКлиенте
Процедура ВидНоменклатурыПриИзменении(Элемент)
	
	ПриИзмененииВидаНоменклатуры();
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля "Наименование".
//
&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)

	АвтоНаименованиеНоменклатуры();
	
	Если ПустаяСтрока(Объект.НаименованиеПолное) Тогда
		Объект.НаименованиеПолное = Объект.Наименование;
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля "НаборУпаковок".
//
&НаКлиенте
Процедура НаборУпаковокПриИзменении(Элемент)
	НаборУпаковокПриИзмененииСервер();
	ИндивидуальныеУпаковки = (Объект.НаборУпаковок = ИндивидуальныйНаборУпаковок
	                         ИЛИ Не ЗначениеЗаполнено(Объект.НаборУпаковок));
	
	Элементы.ЕдиницаИзмерения.ТолькоПросмотр = Не ИндивидуальныеУпаковки;
КонецПроцедуры

// Процедура - обработчик события "Открытие" поля "НаборУпаковок".
//
&НаКлиенте
Процедура НаборУпаковокОткрытие(Элемент, СтандартнаяОбработка)
	Если Объект.НаборУпаковок = ИндивидуальныйНаборУпаковок Тогда
		СтандартнаяОбработка = Ложь;
		Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
			Если Не ЭтаФорма.Записать() Тогда
				ТекстСообщения = НСтр("ru='Ошибка записи элемента!'");
				ПоказатьПредупреждение(,ТекстСообщения);
				Возврат;
			КонецЕсли;
		КонецЕсли;
	
		Отбор = Новый Структура;
		Отбор.Вставить("Владелец", Объект.Ссылка);
	
		ОткрытьФорму("Справочник.УпаковкиНоменклатуры.Форма.ФормаСписка",Новый Структура("Отбор", Отбор), ЭтаФорма);
	КонецЕсли;
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля "ТипСрокаДействия".
//
&НаКлиенте
Процедура ТипСрокаДействияПриИзменении(Элемент)
	
	ПриИзмененииТипаСрокаДействия();
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля "ТипСерийногоНомера".
//
&НаКлиенте
Процедура ТипСерийногоНомераПриИзменении(Элемент)
	
	ПриИзмененииТипаСерийногоНомера();
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля "ИспользоватьСерийныеНомера".
//
&НаКлиенте
Процедура ИспользоватьСерийныеНомераПриИзменении(Элемент)
	
	ПриИзмененииИспользоватьСерийныеНомера();
	
КонецПроцедуры

// Процедура - обработчик события "ПередНачаломДобавления" поля "СерийныеНомера".
//
&НаКлиенте
Процедура СерийныеНомераПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Если ЭтаФорма.Модифицированность 
			И НЕ ТипСерийногоНомераСсылка = Объект.ТипСерийногоНомера Тогда
			
			Отказ = Истина;
			ТекстВопроса = НСтр("ru = 'Элемент был изменен, записать изменения?'");
			ОписаниеОповещения = Новый ОписаниеОповещения("ВопросДобавитьСерийныйНомер", ЭтаФорма);
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
			
		КонецЕсли;
		
	Иначе
		
		Отказ = Истина;
		ТекстВопроса = НСтр("ru = 'Элемент был изменен, записать изменения?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросДобавитьСерийныйНомер", ЭтаФорма);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АдресКартинкиНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЗаблокироватьДанныеФормыДляРедактирования();
	ДобавитьИзображениеНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварнаяКатегорияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ОткрытьФорму ("Справочник.ТоварныеКатегории.ФормаВыбора", Новый Структура("Владелец",Объект.ВидНоменклатуры), Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ТоварнаяКатегорияПриИзменении(Элемент)
	МожноМенять=ВладелецТоварнойКатегорииСоответствуетВидуНоменклатуры();
	Если НЕ МожноМенять Тогда
		СтрокаПредупреждения = НСтр("ru='Данная категория не принадлежит выбранному виду номенклатуры'");
		ПоказатьПредупреждение(,СтрокаПредупреждения);
		Объект.ТоварнаяКатегория = Неопределено;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроизводительПриИзменении(Элемент)
	
	Объект.ПроизводительИмпортерАлкогольнойПродукции = Объект.Производитель;
	
КонецПроцедуры

&НаКлиенте
Процедура СтранаПроисхожденияПриИзменении(Элемент)
	
	Если Объект.СтранаПроисхождения = ПредопределенноеЗначение("Справочник.СтраныМира.Россия")
		ИЛИ НЕ ЗначениеЗаполнено(Объект.СтранаПроисхождения) Тогда
		Объект.ИмпортнаяАлкогольнаяПродукция = Ложь;
	Иначе
		Объект.ИмпортнаяАлкогольнаяПродукция = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеПриИзменении(Элемент)
	ПодключитьОбработчикОжидания("Подключаемый_УстановитьКартинкуДляКомментария", 0.5, Истина);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Свойства

// Процедура - обработчик команды "РедактироватьСоставСвойств".
//
&НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств(Команда)
	
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтаФорма, Объект.Ссылка);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// Обработчик команды, создаваемой механизмом запрета редактирования ключевых реквизитов.
//
&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	Если Не Объект.Ссылка.Пустая() Тогда
		
		ДополнительныеПараметры = Новый Структура;
		ОбработчикОповещения = Новый ОписаниеОповещения("ОбработкаРазблокированияРеквизитовЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект, ОбработчикОповещения);
			
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик команды "ЗаполнитьСерийныеНомера".
//
&НаКлиенте
Процедура ЗаполнитьСерийныеНомера(Команда)
	
	Отказ = Истина;
	
	Если  ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Если НЕ ПроверитьЗаполнение() Тогда
			
			Возврат;
			
		КонецЕсли;
		
		Если ЭтаФорма.Модифицированность Тогда
			
			Если Не ЭтаФорма.Записать() Тогда
				
				Возврат;
				
			КонецЕсли;
						
		КонецЕсли;
		
	Иначе
		
		Если Не ЭтаФорма.Записать() Тогда
			
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("Номенклатура", Объект.Ссылка);
	
	ОткрытьФорму("Обработка.ЗаполнениеДиапазонаСерийныхНомеров.Форма", ПараметрыЗаполнения ,ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображение(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстВопроса = НСтр("ru='Для выбора изображения необходимо записать объект. Записать?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросДобавитьИзображение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса,РежимДиалогаВопрос.ДаНет);
	Иначе
		ДобавитьИзображениеДействиеПослеДобавления();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьИзображение(Команда)
	Объект.ФайлКартинки = ПредопределенноеЗначение("Справочник.НоменклатураПрисоединенныеФайлы.ПустаяСсылка");
	АдресКартинки = "";
КонецПроцедуры

&НаКлиенте
Процедура ПросмотретьИзображение(Команда)
	
	ПросмотретьПрисоединенныйФайл();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьИзображение(Команда)
	ОчиститьСообщения();
	Если ЗначениеЗаполнено(Объект.ФайлКартинки) Тогда
		ПрисоединенныеФайлыКлиент.ОткрытьФормуПрисоединенногоФайла(Объект.ФайлКартинки);
	Иначе
		ТекстСообщения = НСтр("ru='Отсутствует изображение для редактирования'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "АдресКартинки");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИзображениеИзПрисоединенныхФайлов(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстВопроса = НСтр("ru='Для выбора изображения необходимо записать объект. Записать?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросДобавитьИзображение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса,РежимДиалогаВопрос.ДаНет);
	Иначе
		СтруктураПараметрыВыбора =
			Новый Структура("ВладелецФайла, ЗакрыватьПриВыборе, РежимВыбора", Объект.Ссылка, Истина, Истина);
		ОткрытьФорму(
			"ОбщаяФорма.ПрисоединенныеФайлы",
			СтруктураПараметрыВыбора,,,,,
			Новый ОписаниеОповещения("ВыбратьКартинкуИзПрисоединенныхФайловЗавершение", ЭтотОбъект),
			РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	КонецЕсли;
	
КонецПроцедуры
	
Процедура ВыбратьКартинкуИзПрисоединенныхФайловЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если ЗначениеЗаполнено(Результат) Тогда
		Объект.ФайлКартинки = Результат;
		АдресКартинки = НавигационнаяСсылкаКартинки(Объект.ФайлКартинки, УникальныйИдентификатор)
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура Подключаемый_УстановитьКартинкуДляКомментария()
	ОбщегоНазначенияРТКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.СтраницаОписание, Объект.Описание);
КонецПроцедуры

// Процедура устанавливает отбор динамических списков формы.
//
&НаСервере
Процедура УстановитьОтборДинамическихСписков()
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(СерийныеНомера, "Владелец", Объект.Ссылка , Истина, ВидСравненияКомпоновкиДанных.Равно);
	
КонецПроцедуры // УстановитьОтборДинамическихСписков()

// Процедура управляет отображением закладок на форме.
//
&НаСервере
Процедура ОбновитьОтображениеЗакладок()
	
	НазначеныДополнительныеРеквизиты = Ложь;
	
	Для каждого ДополнительныеРеквизиты Из Элементы.СтраницаДополнительныеРеквизиты.ПодчиненныеЭлементы Цикл
		НазначеныДополнительныеРеквизиты = Истина;
		Прервать;
	КонецЦикла;
	
	Элементы.СтраницаДополнительныеРеквизиты.Видимость = НазначеныДополнительныеРеквизиты;
	Элементы.СтраницаСертификаты.Видимость = Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.ПодарочныйСертификат;
	
	Если НЕ (НазначеныДополнительныеРеквизиты 
		И Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.ПодарочныйСертификат) Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаУчетнаяИнформация;
	КонецЕсли;
	
КонецПроцедуры // ОбновитьОтображениеЗакладок()

// Процедура фиксирует признаки номенклатуры.
//
&НаСервере
Процедура ОбновитьПризнакиНоменклатуры()

	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("ТипНоменклатуры", "ТипНоменклатуры");
	СтруктураРеквизитов.Вставить("АгентскиеУслуги", "АгентскиеУслуги");
	СтруктураРеквизитов.Вставить("АлкогольнаяПродукция", "АлкогольнаяПродукция");
	СтруктураРеквизитов.Вставить("ВидАлкогольнойПродукцииЕГАИС", "ВидАлкогольнойПродукцииЕГАИС");
	СтруктураРеквизитов.Вставить("ИмпортнаяАлкогольнаяПродукция", "ИмпортнаяАлкогольнаяПродукция");
	СтруктураРеквизитов.Вставить("ЕдиницаИзмерения", "ЕдиницаИзмерения");
	СтруктураРеквизитов.Вставить("НаборУпаковок", "НаборУпаковок");
	СтруктураРеквизитов.Вставить("СтавкаНДС", "СтавкаНДС");
	СтруктураРеквизитов.Вставить("ЦеноваяГруппа", "ЦеноваяГруппа");
	СтруктураРеквизитов.Вставить("ТоварнаяГруппа", "ТоварнаяГруппа");
	СтруктураРеквизитов.Вставить("ОсобенностьУчета", "ОсобенностьУчета");
	СтруктураРеквизитов.Вставить("ПродукцияМаркируемаяДляГИСМ", "ПродукцияМаркируемаяДляГИСМ");
	СтруктураРеквизитов.Вставить("КиЗГИСМ", "КиЗГИСМ");
	СтруктураРеквизитов.Вставить("ИспользоватьRFIDМеткиСерии", "ИспользоватьRFIDМеткиСерии");
	СтруктураРеквизитов.Вставить("ИспользоватьНомерКИЗГИСМСерии", "ИспользоватьНомерКИЗГИСМСерии");
	СтруктураРеквизитов.Вставить("ИспользоватьВидКИЗГИСМСерии", "ИспользоватьВидКИЗГИСМСерии");
	
	СтруктураВидаНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
									Объект.ВидНоменклатуры,
									СтруктураРеквизитов);
		
	// Тип номенклатуры
	Объект.ТипНоменклатуры = СтруктураВидаНоменклатуры.ТипНоменклатуры;
				
	Если Объект.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Товар Тогда
		Объект.НаборУпаковок = Справочники.НаборыУпаковок.ПустаяСсылка();
	КонецЕсли;
	
	Если Объект.Весовой
		И (Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга
		ИЛИ Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.ПодарочныйСертификат) Тогда
		Объект.Весовой = Ложь;
	КонецЕсли;
	
	Если Объект.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.ПодарочныйСертификат
		И Объект.ИспользоватьСерийныеНомера Тогда
		Объект.ИспользоватьСерийныеНомера = Ложь;
	КонецЕсли;
		
	Если Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга Тогда
		Объект.СтранаПроисхождения = Справочники.СтраныМира.ПустаяСсылка();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ТоварнаяКатегория) Тогда
		ВладелецКатегории = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ТоварнаяКатегория, "Владелец");
		Если ВладелецКатегории <> Объект.ВидНоменклатуры Тогда
			Объект.ТоварнаяКатегория = Справочники.ТоварныеКатегории.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга Тогда
		Если НЕ СтруктураВидаНоменклатуры.АгентскиеУслуги Тогда
			Объект.ДоговорПлатежногоАгента = Справочники.ДоговорыПлатежныхАгентов.ПустаяСсылка();
		КонецЕсли;
	Иначе
		Объект.ДоговорПлатежногоАгента = Справочники.ДоговорыПлатежныхАгентов.ПустаяСсылка();
	КонецЕсли;
	
	Объект.ОсобенностьУчета            = СтруктураВидаНоменклатуры.ОсобенностьУчета;
	Объект.АлкогольнаяПродукция        = (СтруктураВидаНоменклатуры.ОсобенностьУчета 
										= Перечисления.ОсобенностиУчетаНоменклатуры.АлкогольнаяПродукция);
	Объект.ПродукцияМаркируемаяДляГИСМ = (СтруктураВидаНоменклатуры.ОсобенностьУчета
										= Перечисления.ОсобенностиУчетаНоменклатуры.ПродукцияМаркируемаяДляГИСМ);
	Объект.КиЗГИСМ                     = (СтруктураВидаНоменклатуры.ОсобенностьУчета
										= Перечисления.ОсобенностиУчетаНоменклатуры.КиЗГИСМ);
	
	// Алкогольная продукция
	Если Объект.АлкогольнаяПродукция Тогда
		Объект.ВидАлкогольнойПродукцииЕГАИС = СтруктураВидаНоменклатуры.ВидАлкогольнойПродукцииЕГАИС;
		Если Объект.СтранаПроисхождения = Справочники.СтраныМира.Россия Тогда
			Объект.ИмпортнаяАлкогольнаяПродукция = Ложь;
		Иначе
			Объект.ИмпортнаяАлкогольнаяПродукция = СтруктураВидаНоменклатуры.ИмпортнаяАлкогольнаяПродукция;
		КонецЕсли;
		Объект.ПроизводительИмпортерАлкогольнойПродукции = Объект.Производитель;
	Иначе
		Объект.ВидАлкогольнойПродукцииЕГАИС = Справочники.ВидыАлкогольнойПродукцииЕГАИС.ПустаяСсылка();
		Объект.ИмпортнаяАлкогольнаяПродукция = Ложь;
		Объект.ОбъемДАЛ = 0;
		Объект.ПроизводительИмпортерАлкогольнойПродукции = Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;
	
	// Упаковки
	Если ЗначениеЗаполнено(СтруктураВидаНоменклатуры.НаборУпаковок)
		Или ЗначениеЗаполнено(СтруктураВидаНоменклатуры.ЕдиницаИзмерения) Тогда
		Объект.НаборУпаковок = СтруктураВидаНоменклатуры.НаборУпаковок;
		Объект.ЕдиницаИзмерения = СтруктураВидаНоменклатуры.ЕдиницаИзмерения;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураВидаНоменклатуры.ТоварнаяГруппа) Тогда
		Объект.ТоварнаяГруппа = СтруктураВидаНоменклатуры.ТоварнаяГруппа;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураВидаНоменклатуры.СтавкаНДС) Тогда
		Объект.СтавкаНДС = СтруктураВидаНоменклатуры.СтавкаНДС;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураВидаНоменклатуры.ЦеноваяГруппа) Тогда
		Объект.ЦеноваяГруппа = СтруктураВидаНоменклатуры.ЦеноваяГруппа;
	КонецЕсли;
	
КонецПроцедуры

// Процедура отрабатывает изменение поля "Набор упаковок".
//
&НаСервере
Процедура НаборУпаковокПриИзмененииСервер()
	
	Если ЗначениеЗаполнено(Объект.НаборУпаковок)
		И  Объект.НаборУпаковок <> ИндивидуальныйНаборУпаковок Тогда
		Объект.ЕдиницаИзмерения = Объект.НаборУпаковок.ЕдиницаИзмерения;
	КонецЕсли;
	
КонецПроцедуры

// Процедура управляет доступностью реквизитов формы на сервере.
//
&НаСервере
Процедура УстановитьДоступностьРеквизитовНаСервере()
	
	ЭтоУслуга = Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга;
	ЭтоТовар = Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар;
	ИндивидуальныеУпаковки = (Объект.НаборУпаковок = ИндивидуальныйНаборУпаковок
	                         ИЛИ НЕ ЗначениеЗаполнено(Объект.НаборУпаковок));
	
	ЭтоПодарочныйСертификат = Объект.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.ПодарочныйСертификат;
	
	ИменаЭлементов = Новый Массив;
	ИменаЭлементов.Добавить("Весовой");
	ИменаЭлементов.Добавить("ГруппаВес");
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, ИменаЭлементов, "Видимость", ЭтоТовар);
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,"ИспользованиеХарактеристик", "Видимость", Не ЭтоПодарочныйСертификат);
	
	Элементы.ЕдиницаИзмерения.АвтоОтметкаНезаполненного = НЕ ЭтоУслуга;
	Элементы.ЕдиницаИзмерения.ОтметкаНезаполненного     = (НЕ ЭтоУслуга)
	                                                      И Не ЗначениеЗаполнено(Объект.ЕдиницаИзмерения)
	                                                      И ИндивидуальныеУпаковки;
	Если ЭтоПодарочныйСертификат Тогда
		
		
		Элементы.ТипСерийногоНомера.Доступность               = Объект.ИспользоватьСерийныеНомера;
		Элементы.СерийныеНомера.Доступность                   = Объект.ИспользоватьСерийныеНомера;
		Элементы.СерийныеНомераКоманднаяПанель.Доступность    = Объект.ИспользоватьСерийныеНомера;
		
		Если Объект.ИспользоватьСерийныеНомера Тогда
			
			ЭлементСпискаКДобавлению = Элементы.ТипСрокаДействия.СписокВыбора.НайтиПоЗначению(Перечисления.СрокДействияПодарочныхСертификатов.ПериодПослеПродажи);
			Если ЭлементСпискаКДобавлению = Неопределено Тогда
				
				Элементы.ТипСрокаДействия.СписокВыбора.Добавить(Перечисления.СрокДействияПодарочныхСертификатов.ПериодПослеПродажи);
				
			КонецЕсли;
			
		Иначе
			
			ЭлементСпискаКУдалению = Элементы.ТипСрокаДействия.СписокВыбора.НайтиПоЗначению(Перечисления.СрокДействияПодарочныхСертификатов.ПериодПослеПродажи);
			Если ЭлементСпискаКУдалению <> Неопределено Тогда
				
				Элементы.ТипСрокаДействия.СписокВыбора.Удалить(ЭлементСпискаКУдалению);
				
			КонецЕсли;
			
		КонецЕсли;
		
		ПриИзмененииТипаСрокаДействия();
		ПриИзмененииТипаСерийногоНомера();
		
	КонецЕсли;
	
	Если НЕ Элементы.ЕдиницаИзмерения.ТолькоПросмотр Тогда
		
		Элементы.ЕдиницаИзмерения.ТолькоПросмотр = Не ИндивидуальныеУпаковки;
	
	КонецЕсли;
	
	Если ЭтоУслуга Тогда
		ЭтоАгентскаяУслуга = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ВидНоменклатуры, "АгентскиеУслуги");
	Иначе
		ЭтоАгентскаяУслуга = Ложь;
	КонецЕсли;
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДоговорПлатежногоАгента", "Видимость", ЭтоАгентскаяУслуга);
	
	Если ЭтоТовар И ПолучитьФункциональнуюОпцию("ВестиСведенияДляДекларацийПоАлкогольнойПродукции") Тогда
		ЭтоАлкогольнаяПродукция = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ВидНоменклатуры, "АлкогольнаяПродукция");
	Иначе
		ЭтоАлкогольнаяПродукция = Ложь;
	КонецЕсли;
	
	Элементы.КиЗГИСМВид.Видимость = Объект.КиЗГИСМ;
	Элементы.КиЗГИСМСпособВыпускаВОборот.Видимость = Объект.КиЗГИСМ;
	Элементы.КиЗГИСМGTIN.Видимость = Объект.КиЗГИСМ;
	Элементы.КиЗГИСМРазмер.Видимость = Объект.КиЗГИСМ;
	
	Элементы.КодТНВЭД.Видимость = Объект.ПродукцияМаркируемаяДляГИСМ;
	Элементы.ВидМехаГИСМ.Видимость = Объект.ПродукцияМаркируемаяДляГИСМ;
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаПараметрыАлкогольнойПродукции", "Видимость", ЭтоАлкогольнаяПродукция);
	
КонецПроцедуры

// Процедура передает управление на сервер для изменения отображения формы.
//
&НаСервере
Процедура ПриИзмененииВидаНоменклатуры()
	
	ОбновитьПризнакиНоменклатуры();
	
	ОбновитьЭлементыДополнительныхРеквизитов();
	
	УстановитьДоступностьРеквизитовНаСервере();
	
	Если ЗначениеЗаполнено(Объект.ВидНоменклатуры) Тогда
		Элементы.ТоварнаяКатегория.ТолькоПросмотр = Ложь;
	Иначе
		Объект.ТоварнаяКатегория = Справочники.ТоварныеКатегории.ПустаяСсылка();
		Элементы.ТоварнаяКатегория.ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Процедура передает управление на сервер для изменения отображения формы.
//
&НаСервере
Процедура ПриИзмененииИспользоватьСерийныеНомера()
	
	Элементы.ТипСерийногоНомера.Доступность               = Объект.ИспользоватьСерийныеНомера;
	Элементы.ТипСерийногоНомера.АвтоОтметкаНезаполненного = Объект.ИспользоватьСерийныеНомера;
	Элементы.ТипСерийногоНомера.ОтметкаНезаполненного     = Объект.ИспользоватьСерийныеНомера;
	Элементы.СерийныеНомера.Доступность                   = Объект.ИспользоватьСерийныеНомера;
	Элементы.СерийныеНомераКоманднаяПанель.Доступность    = Объект.ИспользоватьСерийныеНомера;
	
	
	Если НЕ (Объект.ИспользоватьСерийныеНомера 
		И Объект.ТипСерийногоНомера = Перечисления.ТипыСерийныхНомеровСертификатов.Штриховой) Тогда
		
		Объект.ТипСерийногоНомера = Перечисления.ТипыСерийныхНомеровСертификатов.Штриховой;
		ПриИзмененииТипаСерийногоНомера();
		ПриИзмененииТипаСрокаДействия();
		
	КонецЕсли;
	
	Если НЕ Объект.ИспользоватьСерийныеНомера 
		И Объект.ТипСрокаДействия = Перечисления.СрокДействияПодарочныхСертификатов.ПериодПослеПродажи Тогда
		
		Объект.ТипСрокаДействия = Перечисления.СрокДействияПодарочныхСертификатов.БезОграниченияСрока;
		ПриИзмененииТипаСрокаДействия();
		
	КонецЕсли;
	
	Если Объект.ИспользоватьСерийныеНомера Тогда
		
		ЭлементСпискаКДобавлению = Элементы.ТипСрокаДействия.СписокВыбора.НайтиПоЗначению(Перечисления.СрокДействияПодарочныхСертификатов.ПериодПослеПродажи);
		Если ЭлементСпискаКДобавлению = Неопределено Тогда
			
			Элементы.ТипСрокаДействия.СписокВыбора.Добавить(Перечисления.СрокДействияПодарочныхСертификатов.ПериодПослеПродажи);
			
		КонецЕсли;
		
	Иначе
		
		ЭлементСпискаКУдалению = Элементы.ТипСрокаДействия.СписокВыбора.НайтиПоЗначению(Перечисления.СрокДействияПодарочныхСертификатов.ПериодПослеПродажи);
		Если ЭлементСпискаКУдалению <> Неопределено Тогда
			
			Элементы.ТипСрокаДействия.СписокВыбора.Удалить(ЭлементСпискаКУдалению);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура передает управление на сервер для изменения отображения формы.
//
&НаСервере
Процедура ПриИзмененииТипаСерийногоНомера()
	
	Элементы.СерийныеНомераШтрихкод.Видимость = Объект.ТипСерийногоНомера = Перечисления.ТипыСерийныхНомеровСертификатов.Смешанный;

КонецПроцедуры	

// Процедура передает управление на сервер для изменения отображения формы.
//
&НаСервере
Процедура ПриИзмененииТипаСрокаДействия()
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаПериод", "Видимость",
		Объект.ТипСрокаДействия = Перечисления.СрокДействияПодарочныхСертификатов.ПериодПослеПродажи);
		
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДатаОкончанияДействия", "Видимость", 
		Не Объект.ТипСрокаДействия = Перечисления.СрокДействияПодарочныхСертификатов.ПериодПослеПродажи
		И Объект.ТипСрокаДействия = Перечисления.СрокДействияПодарочныхСертификатов.СОграничениемНаДату);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеДействиеПослеДобавления()

	ВыборИзображения = Истина;
	ИдентификаторФайла = Новый УникальныйИдентификатор;
	ПрисоединенныеФайлыКлиент.ДобавитьФайлы(Объект.Ссылка, ИдентификаторФайла, ОбщегоНазначенияРТКлиент.ФильтрФайловИзображений());
	ВыборИзображения = Ложь;

КонецПроцедуры // ВыполнитьДобавлениеИзображения()

&НаКлиенте
Процедура АвтоНаименованиеНоменклатуры()
	
	Элементы.НаименованиеПолное.СписокВыбора.Очистить();
	
	Элементы.НаименованиеПолное.СписокВыбора.Добавить(Объект.Наименование);
	
КонецПроцедуры

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура ДобавитьИзображениеНаКлиенте()
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ТекстВопроса = НСтр("ru='Для выбора изображения необходимо записать объект. Записать?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросДобавитьИзображение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса,РежимДиалогаВопрос.ДаНет);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ФайлКартинки) Тогда
		ПросмотретьПрисоединенныйФайл();
	ИначеЕсли ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если Не ЕстьПравоРедактирования Тогда
			ТекстИсключения = НСтр("ru = 'Нарушение прав доступа!'");
			ВызватьИсключение ТекстИсключения;
		КонецЕсли;
		ДобавитьИзображениеДействиеПослеДобавления();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПросмотретьПрисоединенныйФайл()
	ОчиститьСообщения();
	Если ЗначениеЗаполнено(Объект.ФайлКартинки) Тогда
		ДанныеФайла = ПрисоединенныеФайлыСлужебныйВызовСервера.ПолучитьДанныеФайла(ЭтаФорма.Объект.ФайлКартинки, УникальныйИдентификатор);
		ПрисоединенныеФайлыКлиент.ОткрытьФайл(ДанныеФайла);
	Иначе
		ТекстСообщения = НСтр("ru='Отсутствует изображение для просмотра'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "АдресКартинки");
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НавигационнаяСсылкаКартинки(ФайлКартинки, ИдентификаторФормы)

	УстановитьПривилегированныйРежим(Истина);

	Возврат ПрисоединенныеФайлы.ПолучитьДанныеФайла(ФайлКартинки, ИдентификаторФормы).СсылкаНаДвоичныеДанныеФайла;

КонецФункции

&НаСервере
Функция ВладелецТоварнойКатегорииСоответствуетВидуНоменклатуры()
	ВладелецСоответствует=Истина;
	Если ЗначениеЗаполнено(Объект.ТоварнаяКатегория) Тогда
		ВладелецСоответствует=Объект.ТоварнаяКатегория.Владелец=Объект.ВидНоменклатуры;
	КонецЕсли;
	Возврат ВладелецСоответствует;
КонецФункции

&НаСервере
Процедура ПриСозданииЧтенииНаСервере()
	
	ОбновитьОтображениеЗакладок();
	УстановитьДоступностьРеквизитовНаСервере();
	УстановитьОтборДинамическихСписков();
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТипСерийногоНомераСсылка = Объект.ТипСерийногоНомера;
		
		ЕстьПравоРедактирования               = ЗначениеНастроекПовтИсп.ЕстьПравоИзмененияНоменклатуры();
		ЭтаФорма.ТолькоПросмотр               = Не ЕстьПравоРедактирования;
		Элементы.АдресКартинки.ТолькоПросмотр = Не ЕстьПравоРедактирования;
	Иначе
		ЕстьПравоРедактирования = Истина;
	КонецЕсли;
	
	ДействияПослеЗаписиИЗакрытии = Новый Структура;
	Если Параметры.Свойство("СозданиеНовогоШтрихКода") Тогда
		ДействияПослеЗаписиИЗакрытии.Вставить("СозданиеНовогоШтрихКода", Параметры.СозданиеНовогоШтрихКода);
	КонецЕсли;
	
	АдресКартинки = "";
	Если НЕ Объект.ФайлКартинки.Пустая() Тогда
		Попытка
			АдресКартинки = НавигационнаяСсылкаКартинки(Объект.ФайлКартинки, УникальныйИдентификатор);
		Исключение
			СтрокаОшибки = ОписаниеОшибки();
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаОшибки);
		КонецПопытки;
	КонецЕсли;
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьКартинкуДляКомментария(Элементы.СтраницаОписание, Объект.Описание);
	
КонецПроцедуры


// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

// Процедура заполняет дополнительные реквизиты и их значения.
//
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма);
	
	ОбновитьОтображениеЗакладок();

КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

// ИнтеграцияГИСМ

&НаКлиенте
Процедура ПолучитьGLNПоИННКППГИСМ(Команда) Экспорт
	
	Если Не ЗначениеЗаполнено(Объект.ИНН) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не заполнено поле ""ИНН""'"), Объект.Ссылка, "Объект.ИНН");
		Возврат;
	КонецЕсли;
	
	Сообщения = Новый Массив;
	Сообщения.Добавить(ИнтеграцияГИСМВызовСервера.СообщениеЗапросаGLN(Объект.Ссылка, Объект.ИНН, Объект.КПП));
	СообщенияПоОрганизациям = ИнтеграцияГИСМКлиент.СообщенияПоОрганизациям(Сообщения);
	
	Данные = ИнтеграцияГИСМКлиент.СообщенияСледующейОрганизацииКПодписанию(СообщенияПоОрганизациям);
	Если Данные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Контекст = Новый Структура;
	ИнтеграцияГИСМКлиент.Подписать(
		Данные.Сообщения,
		Данные.Организация,
		Новый ОписаниеОповещения("ПолучитьGLNПоИННКППГИСМ_ПриЗавершенииОперацииПодписи", ЭтотОбъект, Контекст));
	
КонецПроцедуры

Процедура ПолучитьGLNПоИННКППГИСМ_ПриЗавершенииОперацииПодписи(Сообщения, ДополнительныеПараметры) Экспорт
	
	Если Сообщения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Сообщения.Количество() <> 1 Тогда
		Возврат;
	КонецЕсли;
	
	GLN = ИнтеграцияГИСМВызовСервера.ОбработатьПодписанноеСообщениеЗапросаGLN(Сообщения[0]);
	
	Объект.GLN = GLN;
	
КонецПроцедуры

// Конец ИнтеграцияГИСМ

#КонецОбласти
