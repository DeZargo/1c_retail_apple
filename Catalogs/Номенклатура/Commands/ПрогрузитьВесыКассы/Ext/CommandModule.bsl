
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	Если ПараметрыВыполненияКоманды.Источник.ИмяФормы="Справочник.Номенклатура.Форма.ххх_ФормаЭлемента" ИЛИ
		ПараметрыВыполненияКоманды.Источник.ИмяФормы="Справочник.Номенклатура.Форма.ФормаЭлемента" Тогда 
		мас=Новый массив;
		мас.Добавить(ПараметрыВыполненияКоманды.Источник.Объект.Ссылка);
		Прогрузить(мас);	
		//Прогрузить(ПараметрыВыполненияКоманды.Источник.Объект.Ссылка); Так не работает, Бага платформы
	ИначеЕсли ПараметрыВыполненияКоманды.Источник.ИмяФормы="Справочник.Номенклатура.Форма.ххх_ФормаСписка" тогда
		Если ПараметрыВыполненияКоманды.Источник.ТекущийЭлемент.Имя="СписокГрупп" Тогда
			Если ПараметрыВыполненияКоманды.Источник.Элементы.СписокГрупп.ВыделенныеСтроки.количество()<>0 Тогда
				    мас=Новый массив;
				Для каждого ссыль из ПараметрыВыполненияКоманды.Источник.Элементы.СписокГрупп.ВыделенныеСтроки Цикл
					мас.Добавить(ссыль);
				КонецЦикла;
				Прогрузить(мас);
			Иначе
				Сообщить("Для выгрузки цен на весы и кассы необходимо веделить строку/строки.");
			КонецЕсли;
		Иначе
			Если ПараметрыВыполненияКоманды.Источник.Элементы.Список.ВыделенныеСтроки.количество()<>0 Тогда
				    мас=Новый массив;
				Для каждого ссыль из ПараметрыВыполненияКоманды.Источник.Элементы.Список.ВыделенныеСтроки Цикл
					мас.Добавить(ссыль);
				КонецЦикла;
				Прогрузить(мас);
				Иначе
					Сообщить("Для выгрузки цен на весы и кассы необходимо веделить строку/строки.");
				КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура прогрузить(мас)
	
	
	//планы=ПланыОбмена.ПланОбменаСОборудованием.Выбрать();

	//пока планы.Следующий() цикл
	//	Если планы.ЭтотУзел или не ТипЗнч(планы.Ссылка.Оборудование)=Тип("СправочникСсылка.КассыККМ") Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	Пока Доки.Следующий() Цикл
	//		ПланыОбмена.ЗарегистрироватьИзменения(планы.Ссылка,Доки.ссылка);
	//	КонецЦикла;
	//	Доки.Сбросить();
	//КонецЦикла;	

	
	планы=ПланыОбмена.ПланОбменаСОборудованием.Выбрать();
	масПланов=Новый массив;
	Пока планы.Следующий() Цикл
		Если планы.Ссылка=ПланыОбмена.ПланОбменаСОборудованием.ЭтотУзел() Тогда
			продолжить;
		КонецЕсли;
		масПланов.Добавить(планы.Ссылка);		
	КонецЦикла;

	
	Запрос=Новый запрос;
	Запрос.УстановитьПараметр("мас",мас);
	Запрос.Текст="ВЫБРАТЬ
	             |	АкцизныеМаркиЕГАИС.Основание КАК Основание
	             |ИЗ
	             |	РегистрНакопления.ххх_АкцизныеМарки.Остатки КАК ххх_АкцизныеМаркиОстатки
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АкцизныеМаркиЕГАИС КАК АкцизныеМаркиЕГАИС
	             |		ПО ххх_АкцизныеМаркиОстатки.АкцизнаяМарка = АкцизныеМаркиЕГАИС.АкцизнаяМарка.ЗначениеШтрихкода
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	АкцизныеМаркиЕГАИС.Основание";
	//
	Доки=Запрос.Выполнить().Выбрать();

	наб=РегистрыНакопления.ххх_АкцизныеМарки.СоздатьНаборЗаписей();
	Пока доки.Следующий() цикл
		Если ЗначениеЗаполнено(доки.Основание) Тогда
			наб.Отбор.регистратор.установить(доки.Основание);
			ПланыОбмена.ЗарегистрироватьИзменения(масПланов,наб);
		КонецЕсли;
	КонецЦикла;

	
	ВидыЦен=Новый массив();
	ВидыЦен.Добавить(Справочники.ххх_Справочник.Магазин.Значение.ПравилоЦенообразования.ВидЦен);
	//ххх_сервер.ОтправитьЦеныНаВесы(мас, ВидыЦен);
	//ххх_Сервер.ОтправитьЦеныНаКассы(мас, ВидыЦен);
	
	планы=ПланыОбмена.ПланОбменаСОборудованием.Выбрать();
	масПланов=Новый массив;
	Пока планы.Следующий() Цикл
		Если планы.Ссылка=ПланыОбмена.ПланОбменаСОборудованием.ЭтотУзел() Тогда
			продолжить;
		КонецЕсли;
		масПланов.Добавить(планы.Ссылка);		
	КонецЦикла;
	
	Для каждого номка из мас Цикл
		ПланыОбмена.ЗарегистрироватьИзменения(масПланов,номка);
	КонецЦикла;
	//
	
		
	
	
	оборудования=Новый массив;
	выборка=Справочники.ххх_ПодключаемоеОборудование.Выбрать();
	Пока выборка.Следующий() Цикл
		оборудования.Добавить(выборка.Ссылка);
	КонецЦикла;
	
	ххх_Сервер.ОтправитьЦеныНаВесы(мас, видыЦен, неопределено, оборудования)
	
КонецПроцедуры















