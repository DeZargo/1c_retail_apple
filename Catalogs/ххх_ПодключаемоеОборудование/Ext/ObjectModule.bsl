#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Процедура производит инициализацию параметров устройства.
//
Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		Параметры = Новый ХранилищеЗначения(Новый Структура());
	КонецЕсли;
	
КонецПроцедуры // ПередЗаписью()

// Процедура проверяет уникальность наименования элемента справочника
// для данного компьютера.
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	//Если НЕ ПустаяСтрока(Наименование) Тогда
	//	Запрос = Новый Запрос("
	//	|ВЫБРАТЬ
	//	|    1
	//	|ИЗ
	//	|    Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
	//	|ГДЕ
	//	|    ПодключаемоеОборудование.Наименование = &Наименование
	//	|    И ПодключаемоеОборудование.РабочееМесто = &РабочееМесто
	//	|    И ПодключаемоеОборудование.Ссылка <> &Ссылка
	//	|");

	//	Запрос.УстановитьПараметр("Наименование", Наименование);
	//	Запрос.УстановитьПараметр("РабочееМесто", РабочееМесто);
	//	Запрос.УстановитьПараметр("Ссылка"      , Ссылка);

	//	Если Не Запрос.Выполнить().Пустой() Тогда
	//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Указано неуникальное наименование элемента. Укажите уникальное наименование.'"), ЭтотОбъект, , , Отказ);
	//	КонецЕсли;
	//КонецЕсли;
	//
	//Если ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.WebСервисОборудование Тогда
	//	
	//	Если ЗначениеЗаполнено(ИдентификаторWebСервисОборудования) Тогда
	//		Запрос = Новый Запрос("
	//		|ВЫБРАТЬ
	//		|    1
	//		|ИЗ
	//		|    Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
	//		|ГДЕ
	//		|    ПодключаемоеОборудование.ИдентификаторWebСервисОборудования = &ИдентификаторWebСервисОборудования
	//		|    И ПодключаемоеОборудование.Ссылка <> &Ссылка
	//		|");
	//		
	//		Запрос.УстановитьПараметр("ИдентификаторWebСервисОборудования", ИдентификаторWebСервисОборудования);
	//		Запрос.УстановитьПараметр("Ссылка"      , Ссылка);
	//		
	//		Если Не Запрос.Выполнить().Пустой() Тогда
	//			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Указан неуникальный идентификатор активного оборудования элемента. Укажите уникальный идентификатор.'"), ЭтотОбъект, , , Отказ);
	//		КонецЕсли;
	//	КонецЕсли;
	//	
	//	ИндексЭлемента = ПроверяемыеРеквизиты.Найти("РабочееМесто");
	//	
	//	Если НЕ ИндексЭлемента = Неопределено Тогда
	//		ПроверяемыеРеквизиты.Удалить(ИндексЭлемента);
	//	КонецЕсли;
	//	
	//Иначе
	//	ИндексЭлемента = ПроверяемыеРеквизиты.Найти("ИдентификаторWebСервисОборудования");
	//	Если НЕ ИндексЭлемента = Неопределено Тогда
	//		ПроверяемыеРеквизиты.Удалить(ИндексЭлемента);
	//	КонецЕсли;
	//	
	//КонецЕсли;
	//
КонецПроцедуры // ОбработкаПроверкиЗаполнения()

// Процедура производит очистку реквизитов, которые не должны копироваться.
// Следующие реквизиты очищаются при копировании:
// "Параметры"      - параметры устройства сбрасываются в Неопределено;
// "Наименование"   - устанавливается отличное от исходного наименования;
Процедура ПриКопировании(ОбъектКопирования)
	
	УстройствоИспользуется = Истина;
	Параметры = Неопределено;

	Наименование = НСтр("ru='%Наименование% (копия)'");
	Наименование = СтрЗаменить(Наименование, "%Наименование%", ОбъектКопирования.Наименование);
	
КонецПроцедуры

// При записи
//
Процедура ПриЗаписи(Отказ)
	
	Если не Этоновый() тогда  //кастыль
		узел=планыОбмена.ПланОбменаСОборудованием.НайтиПоРеквизиту("Оборудование",Ссылка);
		Если не ЗначениеЗаполнено(узел) Тогда
			узел=ПланыОбмена.ПланОбменаСОборудованием.СоздатьУзел();
		Иначе
			узел=узел.ПолучитьОбъект();
		КонецЕсли;	
		узел.Код=код;
		узел.Наименование=Наименование;
		узел.Оборудование=ссылка;
		узел.ПометкаУдаления=ПометкаУдаления;
		узел.Записать();
	КонецЕсли;
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		Если ДанныеЗаполнения.Свойство("ТипОборудования")
			И ДанныеЗаполнения.ТипОборудования = Перечисления.ТипыПодключаемогоОборудования.WebСервисОборудование Тогда
			
			ДрайверОборудования = Справочники.ДрайверыОборудования.Драйвер1СWebСервисОборудование;
			
			Если ДанныеЗаполнения.Свойство("РабочееМесто") Тогда
				РабочееМесто = Неопределено;
				ДанныеЗаполнения.РабочееМесто = Неопределено;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

Процедура ПрогрузитьВесыЛП16(Товары) 
	
	
	scale=Новый COMОбъект("CAScentre_DLL_printScale.Scale");
	//scale=Новый COMОбъект("CAScentre_DLL");

    scale.IP = ИпАдресс;
    scale.Port = Порт;
    scale.Type = type;
	//попытка
	//	scale.close();
	//Исключение
	//КонецПопытки;

	Попытка
		scale.Open();
		Сообщить("Весы: включены.");
		НазваниеМагазина=ЭтотОбъект.НазваниеМагазина;
		Пока СтрДлина(НазваниеМагазина)<>28 Цикл
			НазваниеМагазина=" "+НазваниеМагазина;
		КонецЦикла;
		попытка 
			scale.SendShopName(1,НазваниеМагазина,"","");
		Исключение
			сообщить("Не прогрузился адрес на весы: "+Наименование);
		КонецПопытки;
		scale.LP16_SetSettings("320",Label,Barcode,Adjust,
		число(PriceEdit),число(PriceEditSave),число(printPluNumber),
		число(printGroup),число(PrintDatePAck),число(PrintLife),
		число(printLabelNumber),число(printTimePack),
		wegithAutoPrint);
		scale.SendDateTime(Год(ТекущаяДата()),Месяц(ТекущаяДата()),День(ТекущаяДата()),Час(ТекущаяДата()),Минута(ТекущаяДата()),Секунда(ТекущаяДата()));
	Исключение
		Сообщить("Весы: "+Ссылка+" выключены.");
		Сообщить(ОписаниеОшибки());
		scale.close();
		возврат
	КонецПопытки;
	
	набНоменклатураДопСвойствоСрокГодности=регистрыСведений.ИнтеграцияОфис.СоздатьНаборЗаписей();
	набНоменклатураДопСвойствоСрокГодности.Отбор.свойство.установить("НоменклатураДопСвойствоСрокГодности");
	набНоменклатураДопСвойствоСрокГодности.Прочитать();
	НоменклатураДопСвойствоСрокГодности=набНоменклатураДопСвойствоСрокГодности[0].ЗначениеВБазе;

	
	Если не ЗначениеЗаполнено(товары) тогда
		запрос=Новый запрос;
		Запрос.УстановитьПараметр("НоменклатураДопСвойствоСрокГодности",НоменклатураДопСвойствоСрокГодности);
		Запрос.УстановитьПараметр("ВидЦены",ВидЦены);
		Запрос.УстановитьПараметр("Оборудование",Ссылка);
		Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
		Запрос.Текст="ВЫБРАТЬ
		             |	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена,
		             |	НоменклатураСправочник.Ссылка КАК Номенклатура
		             |ПОМЕСТИТЬ АктуальныеЦены
		             |ИЗ
		             |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ТекДата, ВидЦены В (&ВидЦены)) КАК ЦеныНоменклатурыСрезПоследних
		             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
		             |		ПО ЦеныНоменклатурыСрезПоследних.Номенклатура = НоменклатураСправочник.Ссылка
		             |			И (ЦеныНоменклатурыСрезПоследних.ВидЦены = &видЦены)
		             |;
		             |
		             |////////////////////////////////////////////////////////////////////////////////
		             |ВЫБРАТЬ
		             |	АктуальныеЦены.Номенклатура КАК Номенклатура,
		             |	АктуальныеЦены.Цена КАК Цена,
		             |	ЕСТЬNULL(ДополнительныеСведения.Значение, 0) КАК Срок
		             |ПОМЕСТИТЬ Сроки
		             |ИЗ
		             |	АктуальныеЦены КАК АктуальныеЦены
		             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
		             |		ПО АктуальныеЦены.Номенклатура = ДополнительныеСведения.Объект
		             |			И (ДополнительныеСведения.Свойство = &НоменклатураДопСвойствоСрокГодности)
		             |;
		             |
		             |////////////////////////////////////////////////////////////////////////////////
		             |ВЫБРАТЬ
		             |	Сроки.Номенклатура КАК Номенклатура,
		             |	Сроки.Цена КАК Цена,
		             |	ЕСТЬNULL(Сроки.Срок, 0) КАК Срок,
		             |	ххх_КодыНоменклатурыВесыКассы.Код КАК Код,
		             |	Сроки.Номенклатура.Описание КАК НоменклатураОписание,
		             |	ххх_КодыНоменклатурыВесыКассы.Инкримента КАК Номенклатураххх_ИдЦентр,
		             |	Сроки.Номенклатура.ххх_НаименованиеЭтикетка КАК Номенклатураххх_НаименованиеЭтикетка,
		             |	Сроки.Номенклатура.Производитель.Наименование КАК Производитель,
		             |	ххх_КодыНоменклатурыВесыКассы.НомерДляСостава КАК НомерДляСостава
		             |ИЗ
		             |	Сроки КАК Сроки
		             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ххх_КодыНоменклатурыВесыКассы КАК ххх_КодыНоменклатурыВесыКассы
		             |		ПО Сроки.Номенклатура = ххх_КодыНоменклатурыВесыКассы.Номенклатура
		             |ГДЕ
		             |	ххх_КодыНоменклатурыВесыКассы.Оборудование = &Оборудование";
		Товары=Запрос.выполнить().Выбрать();
	КонецЕсли;
	
	//итератор=1;
	попытка
		Пока Товары.Следующий() Цикл		
			scale.InitData();
			scale.pluNumber = Товары.Код;
			scale.pluDept = "320";
			Наименование1=Товары.Номенклатура.ххх_НаименованиеЭтикетка+"("+Товары.Производитель+")";
			scale.pluName1 = Лев(Наименование1,28);
			СтрДлина=СтрДлина(Наименование1);
			Если СтрДлина>28 Тогда
				scale.pluName2 = Прав(Наименование1,СтрДлина-28);
			Иначе
				scale.pluName2 ="             ";
			КонецЕсли;	
			scale.pluPrice = СтрЗаменить(Формат(Товары.Цена, "ЧЦ=6; ЧДЦ=2; ЧРД=."),".","");
			scale.pluType = 1;
			scale.pluStrLogo = "1";
			scale.pluGroupCode = 1234;
			scale.pluItemCode = Товары.Номенклатураххх_ИдЦентр;
			scale.pluFixedPrice = 0;
			scale.pluWeightTare  = 0;
			scale.pluDatePack = 0;
			scale.pluTimePack = 0;
			
			Если не ЗначениеЗаполнено(Товары.Срок) Тогда
				scale.pluDateLife = 30;
			Иначе
				scale.pluDateLife = Товары.Срок;
			КонецЕсли;
			scale.pluTimeLife = 0;
			scale.pluNumberMsg = Товары.НомерДляСостава;//Товары.Код;
			scale.pluTextMessage = ?(СокрЛП(Товары.НоменклатураОписание)=""," ",Товары.НоменклатураОписание);
			scale.pluNumberLabel = 0;
			scale.pluNumberBarcode = 0;
			scale.pluDateCreate = 0;
			scale.pluTextNumber = 0;		
			scale.pluTextNumber = 0;
			scale.pluLP16logoNumber = 0;                                          
			scale.pluSYmbol = 0;
			scale.pluExtPCS = 0;
			scale.pluExtOrigin = 0;
			scale.pluExtBar2 = 0;
			scale.pluExtFixedWeight = 0;
			попытка
								
				ОтправитьНАВесы(scale,0);
				scale.SendPlu();
				
				МенеджерЗаписи = РегистрыСведений.ххх_КодыНоменклатурыВесыКассыТекущееСостояние.СоздатьМенеджерЗаписи();
			    МенеджерЗаписи.Оборудование = ссылка;
			    МенеджерЗаписи.Номенклатура = Товары.Номенклатура;
				МенеджерЗаписи.Код = Товары.Код;
			    МенеджерЗаписи.Записать(Истина);
						
			Исключение
				
				сообщить("На весы не прогрузилась номенклатура: "+Товары.Номенклатура.ххх_ИдЦентр+" "+Товары.Номенклатураххх_НаименованиеЭтикетка+" ");
				
				Если Константы.ххх_ЛогироватьОшибкиПрогрузкиВесов.Получить() тогда
					
					стр1=РегистрыСведений.ххх_СообщенияПользователюРегламентныеЗадания.СоздатьМенеджерЗаписи();
					стр1.Измерение1=Товары.Номенклатура;
					стр1.КлючФоновогоЗадания="ОшибкиПрогрузкиВесов";
					стр1.Период=ТекущаяДата();
					стр1.Обработан=Ложь;
					стр1.Сообщение="На весы: "+ЭтотОбъект.Наименование+" не прогрузилась номенклатура: "+Товары.Номенклатура.Наименование+" "+Товары.Номенклатура.ххх_ИдЦентр+" на ячейку: "+Товары.Код;
					стр1.Записать();
					
				КонецЕСли;
				
			КонецПопытки;
			//итератор=итератор+1;
		//прервать;	
		КонецЦикла;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПОпытки;
	scale.close();
	//УстановитьДопСведениеТекущееСостояниеНаВесах();
КонецПроцедуры


Процедура ПрогрузитьВесы5000(Товары) 
	
	scale=Новый COMОбъект("CAScentre_DLL_printScale.Scale");	
    scale.IP = ИпАдресс;
    scale.Port = Порт;
    scale.Type = Type;

	Попытка
    	scale.Open();
		НазваниеМагазина=ЭтотОбъект.НазваниеМагазина;
		Пока СтрДлина(НазваниеМагазина)<>28 Цикл
			НазваниеМагазина=" "+НазваниеМагазина;
		КонецЦикла;
		scale.SendShopName(1,НазваниеМагазина,"","");
		//scale.SendDateTime(Год(ТекущаяДата()),Месяц(ТекущаяДата()),День(ТекущаяДата()),Час(ТекущаяДата()),Минута(ТекущаяДата()),Секунда(ТекущаяДата()));
		//scale.LP16_SetSettings(Dept,Label,Barcode,Adjust,
		//число(PriceEdit),число(PriceEditSave),число(printPluNumber),
		//число(printGroup),число(PrintDatePAck),число(PrintLife),
		//число(printLabelNumber),число(printTimePack),
		//wegithAutoPrint);     
		Для каждого стр из ПараметрыВесов Цикл
			scale.CL5000J_SetParam(стр.Параметр,стр.Значение);
		КонецЦикла;
	Исключение
		Сообщить("Весы: "+Ссылка+" выключены.");
		Сообщить(ОписаниеОшибки());
		scale.close();
		возврат
	КонецПопытки;
	
	набНоменклатураДопСвойствоСрокГодности=регистрыСведений.ИнтеграцияОфис.СоздатьНаборЗаписей();
	набНоменклатураДопСвойствоСрокГодности.Отбор.свойство.установить("НоменклатураДопСвойствоСрокГодности");
	набНоменклатураДопСвойствоСрокГодности.Прочитать();
	НоменклатураДопСвойствоСрокГодности=набНоменклатураДопСвойствоСрокГодности[0].ЗначениеВБазе;

	
	Если не ЗначениеЗаполнено(товары) тогда
		запрос=Новый запрос;
		Запрос.УстановитьПараметр("НоменклатураДопСвойствоСрокГодности",НоменклатураДопСвойствоСрокГодности);
		Запрос.УстановитьПараметр("ВидЦены",ВидЦены);
		Запрос.УстановитьПараметр("Оборудование",Ссылка);
		Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
		Запрос.Текст="ВЫБРАТЬ
		             |	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена,
		             |	НоменклатураСправочник.Ссылка КАК Номенклатура
		             |ПОМЕСТИТЬ АктуальныеЦены
		             |ИЗ
		             |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ТекДата, ВидЦены В (&ВидЦены)) КАК ЦеныНоменклатурыСрезПоследних
		             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
		             |		ПО ЦеныНоменклатурыСрезПоследних.Номенклатура = НоменклатураСправочник.Ссылка
		             |			И (ЦеныНоменклатурыСрезПоследних.ВидЦены = &видЦены)
		             |;
		             |
		             |////////////////////////////////////////////////////////////////////////////////
		             |ВЫБРАТЬ
		             |	АктуальныеЦены.Номенклатура КАК Номенклатура,
		             |	АктуальныеЦены.Цена КАК Цена,
		             |	ЕСТЬNULL(ДополнительныеСведения.Значение, 0) КАК Срок
		             |ПОМЕСТИТЬ Сроки
		             |ИЗ
		             |	АктуальныеЦены КАК АктуальныеЦены
		             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
		             |		ПО АктуальныеЦены.Номенклатура = ДополнительныеСведения.Объект
		             |			И (ДополнительныеСведения.Свойство = &НоменклатураДопСвойствоСрокГодности)
		             |;
		             |
		             |////////////////////////////////////////////////////////////////////////////////
		             |ВЫБРАТЬ
		             |	Сроки.Номенклатура КАК Номенклатура,
		             |	Сроки.Цена КАК Цена,
		             |	ЕСТЬNULL(Сроки.Срок, 0) КАК Срок,
		             |	ххх_КодыНоменклатурыВесыКассы.Код КАК Код,
		             |	Сроки.Номенклатура.Описание КАК НоменклатураОписание,
		             |	ххх_КодыНоменклатурыВесыКассы.Инкримента КАК Номенклатураххх_ИдЦентр,
		             |	ххх_КодыНоменклатурыВесыКассы.Номенклатура.ххх_НаименованиеЭтикетка КАК Номенклатураххх_НаименованиеЭтикетка,
		             |	Сроки.Номенклатура.Производитель.Наименование КАК Производитель,
		             |	ххх_КодыНоменклатурыВесыКассы.НомерДляСостава КАК НомерДляСостава
		             |ИЗ
		             |	РегистрСведений.ххх_КодыНоменклатурыВесыКассы КАК ххх_КодыНоменклатурыВесыКассы
		             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Сроки КАК Сроки
		             |		ПО (Сроки.Номенклатура = ххх_КодыНоменклатурыВесыКассы.Номенклатура)
		             |ГДЕ
		             |	ххх_КодыНоменклатурыВесыКассы.Оборудование = &Оборудование";
		Товары=Запрос.выполнить().Выбрать();
	КонецЕсли;
	
	попытка
		Пока Товары.Следующий() Цикл		
			scale.InitData();
			scale.pluNumber = Товары.Код;
			scale.pluDept = 23;
			Наименование=Товары.Номенклатура.ххх_НаименованиеЭтикетка;//+"("+Строка(Товары.Производитель)+")";
			scale.pluName1 = Лев(Наименование,28);
			СтрДлина=СтрДлина(Наименование);
			Если СтрДлина>28 Тогда
				scale.pluName2 = Прав(Наименование,СтрДлина-28);
			Иначе
				scale.pluName2 ="             ";
			КонецЕсли;	
			scale.pluPrice = СтрЗаменить(Формат(Товары.Цена, "ЧЦ=6; ЧДЦ=2; ЧРД=."),".","");
			scale.pluType = 1;
			scale.pluStrLogo = "1";
			scale.pluGroupCode = 1234;
			scale.pluItemCode = Товары.Номенклатураххх_ИдЦентр;
			scale.pluFixedPrice = 0;
			scale.pluWeightTare  = 0;
			scale.pluDatePack = 0;
			scale.pluTimePack = 0;
			//scale.pluDateLife = Товары.Срок;
			scale.pluTimeLife = 0;
			Если Label="1" Тогда //1: мелкая этикетка, 2: Большая
				scale.pluNumberMsg = Товары.НомерДляСостава;//Товары.Код;
				scale.pluTextMessage = ?(СокрЛП(Товары.НоменклатураОписание)=""," ",Лев(Товары.НоменклатураОписание,299));
			КонецЕсли;	
			scale.pluNumberLabel = 0;
			scale.pluNumberBarcode = 0;
			scale.pluDateCreate = 0;
			scale.pluTextNumber = 0;		
			scale.pluTextNumber = 0;
			//scale.pluLP16logoNumber = 0;
			scale.pluSYmbol = 0;
			scale.pluExtPCS = 0;
			scale.pluExtOrigin = 0;
			scale.pluExtBar2 = 0;
			scale.pluExtFixedWeight = 0;
			попытка
		    scale.SendPlu();
		исключение
			сообщить("Не прогрузилась номенклатура: "+Товары.Номенклатура.ххх_НаименованиеЭтикетка);
			КонецПопытки;
			
			МенеджерЗаписи = РегистрыСведений.ххх_КодыНоменклатурыВесыКассыТекущееСостояние.СоздатьМенеджерЗаписи();
	        МенеджерЗаписи.Оборудование = ссылка;
	        МенеджерЗаписи.Номенклатура = Товары.Номенклатура;
			МенеджерЗаписи.Код = Товары.Код;
	        МенеджерЗаписи.Записать(Истина);
			
		КонецЦикла;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПОпытки;
	scale.close();
	//УстановитьДопСведениеТекущееСостояниеНаВесах();
КонецПроцедуры


Процедура УстановитьДопСведениеТекущееСостояниеНаВесах()
	Запрос=новый запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ххх_КодыНоменклатурыВесыКассы.Оборудование КАК Оборудование,
	             |	ххх_КодыНоменклатурыВесыКассы.Номенклатура КАК Номенклатура,
	             |	ххх_КодыНоменклатурыВесыКассы.Код КАК НомерЯчейки
	             |ИЗ
	             |	РегистрСведений.ххх_КодыНоменклатурыВесыКассы КАК ххх_КодыНоменклатурыВесыКассы
	             |ИТОГИ ПО
	             |	Номенклатура";
	Номка=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	Пока Номка.Следующий()Цикл
		строкаСостояния="";
		Выборка=Номка.Выбрать();
		Пока Выборка.Следующий() Цикл
			строкаСостояния=строкаСостояния+"("+Выборка.Оборудование.код+")"+"*"+Выборка.НомерЯчейки;
		КонецЦикла;		
		МенеджерЗаписи = РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();
        МенеджерЗаписи.Объект = Номка.Номенклатура;
        МенеджерЗаписи.Свойство = Справочники.ххх_Справочник.СостояниеНаВесах.Значение;
		МенеджерЗаписи.Значение = строкаСостояния;
        МенеджерЗаписи.Записать(Истина);		
	КонецЦикла;
КонецПроцедуры


Процедура ОтправитьНАВесы(scale,счетчик)
	
	
	КомандаWindows = "Timeout /T " + Формат(0.2, "ЧГ=0") + " /NoBreak";

	WshShell = Новый COMОбъект("WScript.Shell"); 
	WshShell.Run(КомандаWindows, 0, -1);

	Попытка
		scale.SendPlu();
	//	возврат;
	Исключение
		Если счетчик>4 Тогда
			ВызватьИсключение;
		КонецЕсли;
		ОтправитьНАВесы(scale,счетчик+1)
	КонецПопытки;

	
КонецПроцедуры












#КонецЕсли