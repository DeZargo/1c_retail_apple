

Функция FullLoad()
	
	Запрос=Новый запрос;
	Запрос.УстановитьПараметр("Алко",справочники.Номенклатура.НайтиПоНаименованию("Алкоголь"));
	Запрос.Текст="ВЫБРАТЬ
	             |	НоменклатураНаша.ххх_ИдЦентр КАК ххх_ИдЦентр,
	             |	ЕСТЬNULL(НоменклатураНаша.ххх_НаименованиеЦенник, НоменклатураНаша.Наименование) КАК Наименование,
	             |	Штрихкоды.Штрихкод КАК Штрихкод
	             |ИЗ
	             |	Справочник.Номенклатура КАК НоменклатураНаша
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	             |		ПО НоменклатураНаша.Ссылка = Штрихкоды.Владелец
	             |ГДЕ
	             |	НЕ НоменклатураНаша.ЭтоГруппа
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ЕСТЬNULL(НоменклатураНаша.ххх_НаименованиеЦенник, НоменклатураНаша.Наименование),
	             |	Штрихкоды.Штрихкод,
	             |	НоменклатураНаша.ххх_ИдЦентр
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	ххх_ИдЦентр";


	рут=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://NewExchangeTSD","rootType"));
	номенклатуры=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://NewExchangeTSD","nomenclaturesType"));
	рут.nomenclatures=номенклатуры;
	
	

	
	
	выборка=Запрос.Выполнить().Выбрать();
	
	Пока выборка.Следующий() Цикл
		
		Если не ЗначениеЗаполнено(выборка.ххх_ИдЦентр) тогда продолжить конецесли;
		номенклатура=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://NewExchangeTSD","nomenclatureType"));	
		номенклатуры.nomenclature.Добавить(номенклатура);
		номенклатура.id=(выборка.ххх_ИдЦентр);
		номенклатура.name=выборка.Наименование;
		номенклатура.barcode=выборка.Штрихкод;
		
	КонецЦикла;

	
	
	
	Запрос=Новый запрос;
	Запрос.УстановитьПараметр("Алко",справочники.Номенклатура.НайтиПоНаименованию("Алкоголь"));
	Запрос.Текст="ВЫБРАТЬ
	             |	СоответствиеНоменклатурыЕГАИС.Номенклатура.ххх_НаименованиеЦенник КАК Наименвоание,
	             |	СоответствиеНоменклатурыЕГАИС.Номенклатура.ххх_ИдЦентр КАК ххх_ИдЦентр,
	             |	АкцизныеМаркиЕГАИС.АкцизнаяМарка.ЗначениеШтрихкода КАК АкцизнаяМарка
	             |ИЗ
	             |	РегистрСведений.АкцизныеМаркиЕГАИС КАК АкцизныеМаркиЕГАИС
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	             |		ПО АкцизныеМаркиЕГАИС.АлкогольнаяПродукция = СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция
	             |ГДЕ
	             |	НЕ АкцизныеМаркиЕГАИС.АкцизнаяМарка.ЗначениеШтрихкода ЕСТЬ NULL
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	СоответствиеНоменклатурыЕГАИС.Номенклатура.ххх_НаименованиеЦенник,
	             |	СоответствиеНоменклатурыЕГАИС.Номенклатура.ххх_ИдЦентр,
	             |	АкцизныеМаркиЕГАИС.АкцизнаяМарка.ЗначениеШтрихкода";


	//рут=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://NewExchangeTSD","rootType"));
	акцизи=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://NewExchangeTSD","marksType"));
	рут.marks=акцизи;
	
	

	
	
	выборка=Запрос.Выполнить().Выбрать();
	
	Пока выборка.Следующий() Цикл
		
		Если не ЗначениеЗаполнено(выборка.ххх_ИдЦентр) тогда продолжить конецесли;
		акциза=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://NewExchangeTSD","markType"));	
		акцизи.mark.Добавить(акциза);
		акциза.id=выборка.ххх_ИдЦентр;
		акциза.name=выборка.Наименвоание;
		акциза.mark=выборка.АкцизнаяМарка;
		
	КонецЦикла;

	возврат рут;


КонецФункции


Функция GetInventoryById(id)
	
	Запрос=Новый запрос;
	Запрос.УстановитьПараметр("ид",id);
	Запрос.Текст="ВЫБРАТЬ
	             |	ПриказНаПроведениеИнвентаризацииТоваров.НастройкиКомпоновкиДанных КАК НастройкиКомпоновкиДанных
	             |ИЗ
	             |	Документ.ПриказНаПроведениеИнвентаризацииТоваров КАК ПриказНаПроведениеИнвентаризацииТоваров
	             |ГДЕ
	             |	ПриказНаПроведениеИнвентаризацииТоваров.ххх_ИдЦентр = &ид
	             |	И ПриказНаПроведениеИнвентаризацииТоваров.Проведен";
	
	
	выборка=Запрос.Выполнить().Выбрать();
	
	Если не выборка.Следующий() Тогда
		ВызватьИсключение "Такого приказа на инвентаризацию не существует!";
	КонецЕсли;
	
	
	МассивГрупп=новый массив;
	ПолеКомпоновки=Новый ПолеКомпоновкиДанных("Номенклатура");

	НастройкиКомпоновкиДанных=выборка.НастройкиКомпоновкиДанных.получить();			
	Для каждого эл из НастройкиКомпоновкиДанных.Отбор.Элементы Цикл
		Если эл.ЛевоеЗначение=ПолеКомпоновки Тогда
			Если ТипЗнч(эл.ПравоеЗначение)=Тип("СправочникСсылка.Номенклатура") Тогда
			Иначе
				Для каждого группа из эл.ПравоеЗначение Цикл
					МассивГрупп.Добавить(группа.Значение);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Если МассивГрупп.Количество()=0 Тогда
		ВызватьИсключение "В приказе не выбранны группы товаров!";
	КонецЕсли;

	рут=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://NewExchangeTSD","rootType"));
	Инвентаризации=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://NewExchangeTSD","inventorysType"));
	рут.inventorys=Инвентаризации;
	Инвентаризация=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://NewExchangeTSD","inventoryType"));
	Инвентаризации.inventory.добавить(Инвентаризация);
	Инвентаризация.id=id;
	тело=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://NewExchangeTSD","inventoryBodyType"));
	Инвентаризация.body=тело;
	
	Запрос.УстановитьПараметр("массивГрупп",массивГрупп);
	Запрос.Текст="ВЫБРАТЬ
	             |	ТоварыНаСкладахОстатки.КоличествоОстаток КАК Остаток,
	             |	ТоварыНаСкладахОстатки.Номенклатура.ххх_ИдЦентр КАК ид
	             |ИЗ
	             |	РегистрНакопления.ТоварыНаСкладах.Остатки(, Номенклатура В ИЕРАРХИИ (&МассивГрупп)) КАК ТоварыНаСкладахОстатки
	             |ГДЕ
	             |	ТоварыНаСкладахОстатки.КоличествоОстаток > 0";
	
	выборка=запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		строка=ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://NewExchangeTSD","inventoryBodyRaw"));
		тело.inventoryBodyRaw.Добавить(строка);
		строка.id=Выборка.ид;
		строка.count=Выборка.Остаток;
	КонецЦикла;
	
	возврат рут;	
	
	
КонецФункции


Функция LoadInventorysToServer(root)
	
	Для каждого инвентаризация из root.inventorys.inventory цикл	
		
		ПриказНаПроведениеИнвентаризацииТоваров=Документы.ПриказНаПроведениеИнвентаризацииТоваров.НайтиПоРеквизиту("ххх_ИдЦентр",Число(инвентаризация.Id));
		Док=Документы.ПересчетТоваров.НайтиПоРеквизиту("ДокументОснование",ПриказНаПроведениеИнвентаризацииТоваров);
		Если ЗначениеЗаполнено(док) тогда
			док=док.получитьОбъект();
			док.установитьПометкуУдаления(Ложь);
		Иначе
			док=Документы.ПересчетТоваров.СоздатьДокумент();
		КонецЕСли;
		
		Док.ДокументОснование=ПриказНаПроведениеИнвентаризацииТоваров;
		Док.ОтборПересчетаТоваров=ПриказНаПроведениеИнвентаризацииТоваров.НастройкиКомпоновкиДанных;
		Док.Магазин=ПриказНаПроведениеИнвентаризацииТоваров.Магазин;
		Док.Организация=ПриказНаПроведениеИнвентаризацииТоваров.Организация;
		Док.Склад=ПриказНаПроведениеИнвентаризацииТоваров.Склад;
		Док.Статус=Перечисления.СтатусыПересчетовТоваров.ВРаботе;
		Док.Дата=ПриказНаПроведениеИнвентаризацииТоваров.Дата;
		
		//Док.Ответственный=ПараметрыСеанса.АвторизованныйПользователь;
		Док.АкцизныеМарки.Очистить();
		Док.Товары.Очистить();
		
		ТчПоиска=Новый ТаблицаЗначений;
		ТчПоиска.Колонки.Добавить("ххх_ИдЦентр",Новый ОписаниеТипов("Строка",Новый КвалификаторыСтроки(150)));
		ТчПоиска.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,4)));
		Для каждого row из инвентаризация.Body.inventoryBodyRaw Цикл
			стр=ТчПоиска.Добавить();
			стр.ххх_ИдЦентр=row.Id;
			стр.Количество=row.Count;
		КонецЦикла;     
		
		попытка
			мас=Новый массив;
			Для каждого rowAlco из инвентаризация.marks.inventoryMarksRaw Цикл
				стр=Док.АкцизныеМарки.Добавить();
				стр.АкцизнаяМарка=rowAlco.mark;
				стр.СтрокаСвязи=rowAlco.uid;
			КонецЦикла;
		Исключение
		КонецПопытки;

		
		Запрос=Новый запрос;
		запрос.УстановитьПараметр("тч",ТчПоиска);
		Запрос.Текст="ВЫБРАТЬ
		             |	тч.ххх_ИдЦентр КАК ххх_ИдЦентр,
		             |	тч.Количество КАК Количество
		             |ПОМЕСТИТЬ тч
		             |ИЗ
		             |	&тч КАК тч
		             |
		             |ИНДЕКСИРОВАТЬ ПО
		             |	ххх_ИдЦентр
		             |;
		             |
		             |////////////////////////////////////////////////////////////////////////////////
		             |ВЫБРАТЬ
		             |	Номенклатура.Ссылка КАК Ссылка,
		             |	тч.Количество КАК Количество
		             |ИЗ
		             |	тч КАК тч
		             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
		             |		ПО тч.ххх_ИдЦентр = Номенклатура.ххх_ИдЦентр
		             |ГДЕ
		             |	НЕ Номенклатура.ЭтоГруппа";
		Выборка=Запрос.Выполнить().Выбрать();
		
		Пока выборка.Следующий() Цикл
			стр=Док.Товары.Добавить();
			стр.Номенклатура=выборка.Ссылка;
			стр.КоличествоУпаковокФакт=выборка.Количество;
			стр.КоличествоФакт=выборка.Количество;
		КонецЦикла;
		
		док.записать();

		
		
	КонецЦикла;
	
	возврат "1";	
КонецФункции












