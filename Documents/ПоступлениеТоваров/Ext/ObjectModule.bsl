
&После("ОбработкаЗаполнения")
Процедура КочетовОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВходящаяТранспортнаяОперацияВЕТИС") Тогда
		ТоварыВетис=ДанныеЗаполнения.Товары.выгрузить();				
		ТоварыВетис.Свернуть("Номенклатура,Продукция,","Количество");
		Запрос=Новый запрос;
		Запрос.УстановитьПараметр("кпп",СокрЛП(ДанныеЗаполнения.ГрузоотправительХозяйствующийСубъект.КПП));
		Запрос.УстановитьПараметр("инн",СокрЛп(ДанныеЗаполнения.ГрузоотправительХозяйствующийСубъект.ИНН));
		Запрос.Текст="ВЫБРАТЬ
		             |	Контрагенты.Ссылка КАК Ссылка
		             |ИЗ
		             |	Справочник.Контрагенты КАК Контрагенты
		             |ГДЕ
		             |	Контрагенты.КПП = &КПП
		             |	И Контрагенты.ИНН = &ИНН";
		Выборка=Запрос.Выполнить().Выбрать();
		Если выборка.Следующий() Тогда			
			контрагент=выборка.ссылка;			
		КонецЕсли;
		Товары.Загрузить(ТоварыВетис);
		й=0;
		Организация=Справочники.ххх_Справочник.ОрганизацияТорговлиПивом;
		Пока й<Товары.Количество() Цикл
			Если не ЗначениеЗАполнено(товары[й].Номенклатура) Тогда
				товары.Удалить(й);
				Й=Й-1;
			КонецЕсли;
			й=й+1;
		КонецЦикла;

				
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект,ДанныеЗаполнения);
		ЭтотОбъект.Проведен=Ложь;
		ЭтотОбъект.Товары.Загрузить(ДанныеЗаполнения.товары.выгрузить());
		ЭтотОбъект.Дата=ТекущаяДата();
		ЭтотОбъект.Номер="";
		ЭтотОбъект.ххх_ИдЦентр=0;
	КонецЕсли;
КонецПроцедуры


&После("ОбработкаУдаленияПроведения")
Процедура ПослеОбработкаУдаленияПроведенияКочетов(Отказ)
	Если отказ тогда
		возврат;
	КонецЕсли;
	
	Запрос=Новый запрос;
	запрос.УстановитьПараметр("ссылка",ссылка);
	запрос.Текст="ВЫБРАТЬ
	             |	УстановкаЦенНоменклатуры.Ссылка КАК Ссылка
	             |ИЗ
	             |	Документ.УстановкаЦенНоменклатуры КАК УстановкаЦенНоменклатуры
	             |ГДЕ
	             |	УстановкаЦенНоменклатуры.ДокументОснование = &ссылка
	             |	И УстановкаЦенНоменклатуры.Проведен";
	выборка=запрос.выполнить().Выбрать();
	Если выборка.Следующий() Тогда
		устЦен=выборка.ссылка.получитьОбъект();
		устЦен.установитьПометкуУдаления(истина);
	КонецЕсли;
	
	Запрос=Новый запрос;
	запрос.УстановитьПараметр("ссылка",ссылка);
	запрос.Текст="ВЫБРАТЬ
	             |	СчетФактураПолученныйДокументыОснования.Ссылка КАК Ссылка
	             |ИЗ
	             |	Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
	             |ГДЕ
	             |	СчетФактураПолученныйДокументыОснования.ДокументОснование = &ссылка
	             |	И СчетФактураПолученныйДокументыОснования.Ссылка.Проведен";
	выборка=запрос.выполнить().Выбрать();
	Если выборка.Следующий() Тогда
		сф=выборка.ссылка.получитьОбъект();
		сф.установитьПометкуУдаления(истина);
	КонецЕсли;

КонецПроцедуры

функция ЕстьТоварВнеДопусков()
	Запрос=новый запрос;
	Запрос.УстановитьПараметр("номенклатура",товары.ВыгрузитьКолонку("номенклатура"));
	Запрос.УстановитьПараметр("магазин",магазин.ФорматМагазина);
	//запрос.УстановитьПараметр("регистратор",Документы.ИзменениеАссортимента.НайтиПоНомеру(справочники.ххх_Справочник.магазин.значение.ххх_НомерАсортиВывода));
	Запрос.Текст="ВЫБРАТЬ
	             |	Номенклатура1.Ссылка КАК Номенклатура
	             |ИЗ
	             |	Справочник.Номенклатура КАК Номенклатура1
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Ассортимент.СрезПоследних(
	             |				,
	             |				Номенклатура В (&Номенклатура)
	             |					И ОбъектПланирования = &магазин) КАК АссортиментСрезПоследних
	             |		ПО (АссортиментСрезПоследних.Номенклатура = Номенклатура1.Ссылка)
	             |ГДЕ
	             |	Номенклатура1.Ссылка В(&номенклатура)
	             |	И НЕ ЕСТЬNULL(АссортиментСрезПоследних.РазрешеныЗакупки, ЛОЖЬ)";
	выборка=Запрос.Выполнить().Выбрать();
	ТекстОшибки="";
	
	Пока выборка.Следующий() Цикл
		ТекстОшибки=ТекстОшибки+" "+выборка.Номенклатура+символы.ВК;
	КонецЦикла;
	
	возврат текстОшибки;
КонецФункции



&Вместо("ОбработкаПроведения")
Процедура КочетовОбработкаПроведенияВместо(Отказ, РежимПроведения)
	
	//Отбор = Новый Структура("Контрагент", Контрагент);
	//ДатыНовыхВозвратов = РегистрыСведений.ххх_ДатыПоКонтрагентамЗапрещеноБезЗаказа.СрезПоследних(Дата, Отбор);
	//
	//Если ДатыНовыхВозвратов[0].Введено=истина и значениеЗаполнено(ЗаказПоставщику) Тогда
	//	
	//	отказ=Истина;
	//	Сообщить("Заказ данного поставщика перепроводить нельзя.");
	//	
	//КонецЕсли;
	
	
	Если константы.ххх_ИспользуетсяEDI.Получить() Тогда
		
		ПроверкаНаСуществованиеЗаказаEDI(Отказ);
		
	КонецЕсли;
	
	
	
	

	Для каждого стр из товары цикл
		если стр.Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый и не ЗначениеЗаполнено(ТТНВходящаяЕГАИС) Тогда
			отказ=истина;
			сообщить("Нельзя проводить маркируемую алкогольную продукцию без привязки к ТТН!");
		КонецЕсли;
	КонецЦикла;
	
	ПроверитьСоответствияВетис();
		
	Если не ххх_ФиктивнаяНакладная Тогда
		
		Если не Магазин.ххх_ИнтернетМагазин Тогда
			ТекстОшибкиДопусков=ЕстьТоварВнеДопусков();
			Если ЗначениеЗаполнено(ТекстОшибкиДопусков) тогда
				Сообщить(ТекстОшибкиДопусков,СтатусСообщения.ОченьВажное);
				отказ=истина;
				вызватьисключение("Звоните менеджерам, !!!!!!!!!!ПРаГРАММИСТАМ ЗВОНИТЬ НЕ НУЖНО!!!!!!!!!!"+символы.ВК+
					"следующие позиции не в допусках:"+символы.ВК+ТекстОшибкиДопусков);
			КонецЕсли;
		КонецЕсли;


		ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
		
		Документы.ПоступлениеТоваров.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
		
		ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
		
		ЗапасыСервер.ОтразитьТоварыНаСкладах(ДополнительныеСвойства, Движения, Отказ);
		ЗапасыСервер.ОтразитьТоварыОрганизаций(ДополнительныеСвойства, Движения, Отказ);
		ЗапасыСервер.ОтразитьТоварыКПоступлению(ДополнительныеСвойства, Движения, Отказ);
		ЗапасыСервер.ОтразитьДвиженияСебестоимостьНоменклатуры(ДополнительныеСвойства, Движения, Отказ);
		ЗапасыСервер.ОтразитьДвиженияСерийныхНомеров(ДополнительныеСвойства, Движения, Отказ);
		ЗапасыСервер.ОтразитьДвиженияНоменклатураПоставщиков(ДополнительныеСвойства, Движения, Отказ);
		ЗапасыСервер.ОтразитьДвиженияСерийТоваров(ДополнительныеСвойства, Движения, Отказ);
		ЗапасыСервер.ОтразитьДвиженияСебестоимостьПоставкиТоваров(ДополнительныеСвойства, Движения, Отказ);
		ЗакупкиСервер.ОтразитьЗаказыТоваров(ДополнительныеСвойства, Движения, Отказ);
		ЗакупкиСервер.ОтразитьЗакупкиТоваров(ДополнительныеСвойства, Движения, Отказ);
		ДенежныеСредстваСервер.ОтразитьРасчетыСПоставщиками(ДополнительныеСвойства, Движения, Отказ);
		СформироватьСписокРегистровДляКонтроля();	
		ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
		ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
		ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
		
		ДополнительныеСвойства.Вставить("Отказ", Отказ);
		
		Если ЗначениеЗаполнено(ЗаказПоставщику) Тогда
			ЗакупкиСервер.ОбновитьСостояниеОплатыПоступления(ЗаказПоставщику);
		Иначе
			ЗакупкиСервер.ОбновитьСостояниеОплатыПоступления(Ссылка);
		КонецЕсли;
		
			
		Если не Магазин.ххх_ИнтернетМагазин Тогда	
			Для каждого стр из Товары цикл
				Если стр.номенклатура.ххх_Поставщик<>Контрагент Тогда
					номка=стр.номенклатура.получитьОбъект();
					номка.ххх_Поставщик=Контрагент;
					номка.записать();
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;	
		Запрос=Новый запрос;
		Запрос.УстановитьПараметр("тч",Товары);
		Запрос.Текст="ВЫБРАТЬ
		             |	тч.Номенклатура КАК Номенклатура,
		             |	тч.номерСтроки КАК номерСтроки
		             |ПОМЕСТИТЬ номка
		             |ИЗ
		             |	&тч КАК тч
		             |;
		             |
		             |////////////////////////////////////////////////////////////////////////////////
		             |ВЫБРАТЬ
		             |	номка.номерСтроки КАК номерСтроки,
		             |	номка.Номенклатура КАК Номенклатура
		             |ИЗ
		             |	номка КАК номка
		             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
		             |		ПО номка.Номенклатура = Штрихкоды.Владелец
		             |ГДЕ
		             |	номка.Номенклатура.Весовой = ложь
		             |	И Штрихкоды.Штрихкод ЕСТЬ NULL";
		выборка=Запрос.Выполнить().Выбрать();
		Пока выборка.Следующий()Цикл
			отказ=Истина;
			Сообщить("Отсутствует штрихкод: строка № "+выборка.НомерСтроки+" "+выборка.Номенклатура);
		КонецЦикла;
		
			
		Если (не ЗначениеЗаполнено(НомерСчетаФактуры)
				и Контрагент.ххх_ПлательщикНДС) 
				и не ххх_ФиктивнаяНакладная	
				и не ПроверитьТараЛиЭто()         тогда
			Сообщить("Контрагент: "+ Контрагент+" является плательщиком НДС, заведите счет-фактуру");
			Сообщить("Если поставщик не является плательщиком НДС: обратитесь к менеджерам.");
			Отказ=Истина;
		конецЕсли;
		
		//Если ЗначениеЗаполнено(ТТНВходящаяЕГАИС) Тогда
		//	наб=регистрыСведений.СоответствиеОрганизацийЕГАИС.СоздатьМенеджерЗаписи();
		//	наб.Контрагент=Контрагент;
		//	наб.ОрганизацияЕГАИС=ТТНВходящаяЕГАИС.Грузоотправитель;
		//	наб.Записать(Истина);
		//КонецЕсли;

	Иначе
		//Для каждого движ из ЭтотОбъект.Движения Цикл
		//	движ.очистить();
		//КонецЦикла;
		//ЭтотОбъект.Движения.Записать();
		ОбработкаУдаленияПроведения(Отказ);
	КонецЕсли;
	
	Если ХозяйственнаяОперация=Справочники.ххх_Справочник.АналитикаХозОперПоступлениеНаИнтернетМагазин.значение Тогда
		Для каждого тч из Движения Цикл
			Тч.очистить();	
		КонецЦикла;
	КонецЕсли;

	
	Если Магазин.ххх_ИнтернетМагазин Тогда		
		Движения.ххх_ПродажиПоИнтернетМагазину.записывать=истина;	
		Для каждого стр из Товары цикл
			Движение=Движения.ххх_ПродажиПоИнтернетМагазину.добавить();
			Движение.ВидДвижения=ВидДвиженияНакопления.Расход;
			Движение.Номенклатура=стр.Номенклатура;
			Движение.период=Дата;
			Движение.Количество=стр.Количество;
		КонецЦикла;		
	КонецЕсли;
	
	//наб=РегистрыНакопления.ххх_АкцизныеМарки.СоздатьНаборЗаписей();
	//наб.Отбор.Регистратор.установить(ссылка);
	//Наб.прочитать();
	//Наб.Очистить();
	//Движения.ххх_АкцизныеМарки.записывать=истина;	
	//Для каждого стр из ххх_АкцизныеМарки Цикл
	//	Движение=Движения.ххх_АкцизныеМарки.добавить();
	//	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	//	Движение.Период = Дата;
	//	Движение.Регистратор=ссылка;
	//	Движение.АкцизнаяМарка = стр.АкцизнаяМарка;
	//	Движение.СправкаБ = стр.СправкаБ;
	//	Движение.Количество = 1;
	//КонецЦикла;
	//Наб.записать();

		
	
КонецПроцедуры


Процедура ПроверкаНаСуществованиеЗаказаEDI(Отказ)
	
	//
	//мен=РегистрыСведений.КонтурEDI_ДополнительныеРеквизиты.СоздатьМенеджерЗаписи();
	//мен.Объект=Контрагент.Ссылка;
	//мен.Свойство="ПартнерКонтрагента";
	//мен.Прочитать();
	//
	//
	//Если мен.Выбран() Тогда
	//	
	//	
	//	

	//	
	//	
	//КонецЕсли;
	//
	//
		
Конецпроцедуры


Процедура ПроверитьСоответствияВетис()
	
	запрос = Новый запрос;
	Запрос.УстановитьПараметр("номенклатура",товары.ВыгрузитьКолонку("номенклатура"));
	Запрос.УстановитьПараметр("Вид",Справочники.ххх_Справочник.ВидНоменклатурыВетис.Значение);
	Запрос.Текст="ВЫБРАТЬ
	             |	Номенклатура.Ссылка КАК Ссылка
	             |ПОМЕСТИТЬ йцу
	             |ИЗ
	             |	Справочник.Номенклатура КАК Номенклатура
	             |ГДЕ
	             |	Номенклатура.Ссылка В(&номенклатура)
	             |	И Номенклатура.ВидНоменклатуры = &Вид
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	Номенклатура.Ссылка
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	йцу.Ссылка КАК Ссылка
	             |ИЗ
	             |	йцу КАК йцу
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
	             |		ПО йцу.Ссылка = СоответствиеНоменклатурыВЕТИС.Номенклатура
	             |ГДЕ
	             |	СоответствиеНоменклатурыВЕТИС.Номенклатура ЕСТЬ NULL";
	
	Выборка=Запрос.Выполнить().Выбрать();
	Пока выборка.Следующий() Цикл
		сообщить("Товар: "+выборка.ссылка+" не связан с продукцией в ВЕТИС");
	КонецЦикла;
	
	
КонецПроцедуры

&Вместо("ОбработкаПроверкиЗаполнения")
Процедура КочетовОбработкаПроверкиЗаполненияВместо(Отказ, ПроверяемыеРеквизиты)
	Если ххх_ФиктивнаяНакладная Тогда
		возврат;
	КонецЕсли;	
	ПроверитьСуществованиеПоступленийПоЗаказу(Отказ);
	МассивНепроверяемыхРеквизитов = Новый Массив;
	Если Магазин.СкладУправляющейСистемы Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Склад");
	КонецЕсли;
	
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ);
	
	ПараметрыПроверки = Новый Структура;
	ПараметрыПроверки.Вставить("ИмяТЧ","ТоварыПоДаннымПоставщика");
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ,ПараметрыПроверки);
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект,Документы.ПоступлениеТоваров.ПараметрыУказанияСерий(ЭтотОбъект),Отказ);
	
	Если НЕ ПредъявленСчетФактура Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НомерСчетаФактуры");
		МассивНепроверяемыхРеквизитов.Добавить("ДатаСчетаФактуры");
	КонецЕсли;
	
	МассивНепроверяемыхРеквизитов.Добавить("ЭтапыОплат.ВидПлатежа");
	МассивНепроверяемыхРеквизитов.Добавить("ЭтапыОплат.ДатаПлатежа");
	МассивНепроверяемыхРеквизитов.Добавить("ЭтапыОплат.ДокументВзаимозачета");
	МассивНепроверяемыхРеквизитов.Добавить("Товары.Сумма");
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
	
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеТЧПриНаличииОбменаСУправлениемТорговлей(
		ЭтотОбъект,
		Отказ);
	
	МаркетинговыеАкцииСервер.ПроверитьЗаполнениеТабличнойЧастиСерийныеНомера(
		ЭтотОбъект,
		"Товары",
		"СерийныеНомера",
		Отказ);
	
	МаркетинговыеАкцииСервер.ПроверитьДвиженияСерийныхНомеров(
		ЭтотОбъект,
		"Товары",
		"СерийныеНомера",
		Отказ);
	
	Если Не ЗначениеЗаполнено(ЗаказПоставщику) Тогда
		ЗакупкиСервер.ПроверитьТабличнуюЧастьЭтапыОплат(ЭтотОбъект, Отказ);
	КонецЕсли;
	
	ПроверитьЗаполнениеСуммы(Отказ);
	
КонецПроцедуры



Функция ПроверитьТараЛиЭто()
	Запрос=Новый запрос;                                                 // ВидНоменклатуры
	Запрос.УстановитьПараметр("тч",Товары.выгрузить());
	Запрос.Текст="ВЫБРАТЬ
	             |	тч.Номенклатура КАК вид
	             |ПОМЕСТИТЬ йцу
	             |ИЗ
	             |	&тч КАК тч
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	йцу.вид.ВидНоменклатуры КАК вид
	             |ИЗ
	             |	йцу КАК йцу
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	йцу.вид.ВидНоменклатуры";	
	мас=Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("вид");
	Если мас.Количество()=1 Тогда
		Если мас[0]=Справочники.ххх_Справочник.ВидНоменклатурыТара.Значение Тогда
			возврат Истина
		КонецЕсли
	КонецЕсли;
	возврат ложь;
КонецФункции

&После("ПередЗаписью")
Процедура КочетовПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	//
	//Если ЗначениеЗаполнено(ТТНВходящаяЕГАИС) и Организация.ххх_ВариантПриемкиЕГАИСаВосточка Тогда
	//	
	//	ТТН=ТТНВходящаяЕГАИС.ссылка.получитьОбъект();
	//	если ?(ТоварыПоДаннымПоставщика.Количество()<>0,ТоварыПоДаннымПоставщика.Количество(),Товары.Количество())<>ТТН.Товары.количество() Тогда
	//		Отказ=истина;
	//		Сообщить("Нельзя записать документ в котором существуют не сопоставленные карточки алкоголя.");
	//	КонецЕсли;
	//	
	//КонецЕсли;
	//
	//
	
	
	
	Если значениеЗаполнено(Контрагент) Тогда
		
		Отбор = Новый Структура("Контрагент", Контрагент);
		ДатыНовыхВозвратов = РегистрыСведений.ххх_ДатыПоКонтрагентамЗапрещеноБезЗаказа.СрезПоследних(Дата, Отбор);
		
		//ValMa - когда возвращает пустую таблицу значений, тогда ошибка - индекс находится за границами массива.
		
		Если ДатыНовыхВозвратов.Количество()>0 и ДатыНовыхВозвратов[0].Введено=истина и не значениеЗаполнено(ЗаказПоставщику) Тогда
			
			отказ=Истина;
			Сообщить("Оформить поступление у данного контрагента без заказа: Нельзя.");
			
		КонецЕсли;

	КонецЕсли;
	
	
КонецПроцедуры

Функция естьАлкоголь()
	Для каждого стр из Товары цикл
		Если стр.Номенклатура.ВидАлкогольнойПродукцииЕГАИС.Маркируемый Тогда
			возврат истина;
		КонецЕсли;
	кОНЕЦцИКЛА;
	возврат ложь;
КонецФункции

&Вместо("ЗаполнитьТоварыПоступленияПоТТН")
Процедура КочетовЗаполнитьТоварыПоступленияПоТТН()
	
	ВыгрузкаТовары = Товары.Выгрузить();
	Товары.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТТНВходящаяЕГАИСТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТТНВходящаяЕГАИСТовары.Количество КАК КоличествоПоДаннымПоставщика,
	|	ТТНВходящаяЕГАИСТовары.КоличествоФакт КАК Количество,
	|	ТТНВходящаяЕГАИСТовары.КоличествоФакт КАК КоличествоУпаковок,
	|	ТТНВходящаяЕГАИСТовары.Сумма КАК Сумма,
	|	ТТНВходящаяЕГАИСТовары.Серия КАК Серия,
	|	ТТНВходящаяЕГАИСТовары.Цена КАК Цена,
	|	ТТНВходящаяЕГАИСТовары.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	ТТНВходящаяЕГАИСТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТТНВходящаяЕГАИСТовары.НомерСтроки КАК Порядок,
	|	ТТНВходящаяЕГАИСТовары.Номенклатура КАК Номенклатура,
	|	ТТНВходящаяЕГАИСТовары.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ТаблицаЕГАИС
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТТНВходящаяЕГАИСТовары
	|ГДЕ
	|	ТТНВходящаяЕГАИСТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаЕГАИС.АлкогольнаяПродукция) КАК АлкогольнаяПродукция,
	|	ТаблицаЕГАИС.Количество / ВЫБОР
	|		КОГДА НЕ СоответствиеНоменклатурыЕГАИС.Номенклатура ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА СоответствиеНоменклатурыЕГАИС.Номенклатура.ВидНоменклатуры.ПродаетсяВРозлив
	|							И СоответствиеНоменклатурыЕГАИС.Номенклатура.ОбъемДАЛ <> 0
	|						ТОГДА СоответствиеНоменклатурыЕГАИС.Номенклатура.ОбъемДАЛ
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Количество,
	|	ТаблицаЕГАИС.КоличествоУпаковок / ВЫБОР
	|		КОГДА НЕ СоответствиеНоменклатурыЕГАИС.Номенклатура ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА СоответствиеНоменклатурыЕГАИС.Номенклатура.ВидНоменклатуры.ПродаетсяВРозлив
	|							И СоответствиеНоменклатурыЕГАИС.Номенклатура.ОбъемДАЛ <> 0
	|						ТОГДА СоответствиеНоменклатурыЕГАИС.Номенклатура.ОбъемДАЛ
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК КоличествоУпаковок,
	|	ТаблицаЕГАИС.Серия КАК Серия,
	|	ТаблицаЕГАИС.Сумма КАК Сумма,
	|	ТаблицаЕГАИС.КоличествоПоДаннымПоставщика,
	|	ТаблицаЕГАИС.Цена КАК Цена,
	|	ТаблицаЕГАИС.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	ТаблицаЕГАИС.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА ТаблицаЕГАИС.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА ТаблицаЕГАИС.Номенклатура
	|		ИНАЧЕ СоответствиеНоменклатурыЕГАИС.Номенклатура
	|	КОНЕЦ КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаЕГАИС.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаЕГАИС.Характеристика
	|		ИНАЧЕ СоответствиеНоменклатурыЕГАИС.Характеристика
	|	КОНЕЦ КАК Характеристика,
	|	ТаблицаЕГАИС.Порядок КАК Порядок
	|ИЗ
	|	ТаблицаЕГАИС КАК ТаблицаЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ТаблицаЕГАИС.АлкогольнаяПродукция = СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция
	|			И (СоответствиеНоменклатурыЕГАИС.Порядок = 1)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЕГАИС.Количество / ВЫБОР
	|		КОГДА НЕ СоответствиеНоменклатурыЕГАИС.Номенклатура ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА СоответствиеНоменклатурыЕГАИС.Номенклатура.ВидНоменклатуры.ПродаетсяВРозлив
	|							И СоответствиеНоменклатурыЕГАИС.Номенклатура.ОбъемДАЛ <> 0
	|						ТОГДА СоответствиеНоменклатурыЕГАИС.Номенклатура.ОбъемДАЛ
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		ИНАЧЕ 1
	|	КОНЕЦ,
	|	ТаблицаЕГАИС.КоличествоУпаковок / ВЫБОР
	|		КОГДА НЕ СоответствиеНоменклатурыЕГАИС.Номенклатура ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА СоответствиеНоменклатурыЕГАИС.Номенклатура.ВидНоменклатуры.ПродаетсяВРозлив
	|							И СоответствиеНоменклатурыЕГАИС.Номенклатура.ОбъемДАЛ <> 0
	|						ТОГДА СоответствиеНоменклатурыЕГАИС.Номенклатура.ОбъемДАЛ
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		ИНАЧЕ 1
	|	КОНЕЦ,
	|	ТаблицаЕГАИС.Серия,
	|	ТаблицаЕГАИС.Сумма,
	|	ТаблицаЕГАИС.КоличествоПоДаннымПоставщика,
	|	ТаблицаЕГАИС.Цена,
	|	ТаблицаЕГАИС.ИдентификаторУпаковки,
	|	ТаблицаЕГАИС.ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА ТаблицаЕГАИС.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА ТаблицаЕГАИС.Номенклатура
	|		ИНАЧЕ СоответствиеНоменклатурыЕГАИС.Номенклатура
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаЕГАИС.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаЕГАИС.Характеристика
	|		ИНАЧЕ СоответствиеНоменклатурыЕГАИС.Характеристика
	|	КОНЕЦ,
	|	ТаблицаЕГАИС.Порядок
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";
	
	Запрос.УстановитьПараметр("Ссылка", ТТНВходящаяЕГАИС);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.КоличествоУпаковок=0 Тогда
			продолжить;
		КонецЕсли;
		СтрокаТаблицы = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Выборка);
		Если ИспользоватьСерииНоменклатуры И ЗначениеЗаполнено(Выборка.Серия) Тогда
				НоваяСтрокаСерии = Серии.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, Выборка);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаТовары Из ВыгрузкаТовары Цикл
		Если СтрокаТовары.АлкогольнаяПродукция.Пустая() И НЕ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТовары.Номенклатура, "АлкогольнаяПродукция") и не СтрокаТовары.количество=0 Тогда
			ЗаполнитьЗначенияСвойств(Товары.Добавить(), СтрокаТовары);
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыУказанияСерий = Новый ФиксированнаяСтруктура(Документы.ПоступлениеТоваров.ПараметрыУказанияСерий(ЭтотОбъект));
	
	//СтруктураДействий = Новый Структура;
	//СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС",  УчитыватьНДС);
	//СтруктураДействий.Вставить("ПересчитатьСуммуНДС", ОбработкаТабличнойЧастиТоварыКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВТЧ(ЭтотОбъект));
	//СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");	
	//СтруктураДействий.Вставить("ПересчитатьСумму");
	//СтруктураТЧ = Новый Структура;
	//СтруктураТЧ.Вставить("СтрокиТЧ" , Товары);
	//ОбработкаТабличнойЧастиТоварыСервер.ПриИзмененииРеквизитовВТЧСервер(СтруктураТЧ, СтруктураДействий, Неопределено);
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС",  ОбработкаТабличнойЧастиТоварыКлиентСервер.СтруктураПараметровСтавкиНДСУчитыватьНДС(ЭтотОбъект));
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", ОбработкаТабличнойЧастиТоварыКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВТЧ(ЭтотОбъект));
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	СтруктураДействий.Вставить("ПересчитатьСумму");
	
	СтруктураТЧ = Новый Структура;
	СтруктураТЧ.Вставить("СтрокиТЧ" , Товары);
	ОбработкаТабличнойЧастиТоварыСервер.ПриИзмененииРеквизитовВТЧСервер(СтруктураТЧ, СтруктураДействий, Неопределено);


КонецПроцедуры
























