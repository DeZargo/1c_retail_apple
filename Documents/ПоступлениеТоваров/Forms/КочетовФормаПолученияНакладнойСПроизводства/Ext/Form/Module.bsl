
&НаКлиенте
Процедура ПолучитьНакладную(Команда)
	Если ПолучитьНакладнуюНаСервере() Тогда
		ЭтаФорма.Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьНакладнуюНаСервере()
	Запрос=Новый запрос;
	Запрос.УстановитьПараметр("номер",ЭтаФорма.НомерНакладной);
	Запрос.Текст="ВЫБРАТЬ
	             |	dbo_pOutGoodsHead.State КАК State,
	             |	dbo_pOutGoodsHead.Number КАК Number,
	             |	dbo_pOutGoodsHead.DateDoc КАК DateDoc,
	             |	dbo_pOutGoodsHead.CustomerCode КАК CustomerCode,
	             |	dbo_pOutGoodsHead.Summa КАК Summa,
	             |	dbo_pOutGoodsTable.GoodCode КАК GoodCode,
	             |	dbo_pOutGoodsTable.GoodCount КАК GoodCount,
	             |	dbo_pOutGoodsTable.OutPrice КАК OutPrice,
	             |	dbo_pOutGoodsTable.Summa КАК SummaRow
				 |ИЗ
	             |	ВнешнийИсточникДанных.Пикник23.Таблица.dbo_pOutGoodsHead КАК dbo_pOutGoodsHead
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВнешнийИсточникДанных.Пикник23.Таблица.dbo_pOutGoodsTable КАК dbo_pOutGoodsTable
	             |		ПО dbo_pOutGoodsHead.ID = dbo_pOutGoodsTable.Number
	             |ГДЕ
	             |	dbo_pOutGoodsHead.Number = &номер
	             |	И dbo_pOutGoodsHead.State = 1";
	Выгрузка=ЗАпрос.Выполнить().Выгрузить();
	Если Выгрузка.Количество()=0 Тогда
		Сообщить("Накладная по запрашиваемому номеру не создана или не проведена.");
		возврат ложь;
	КонецЕсли;
	
	//Выгрузка[0].Number
	док=Документы.ПоступлениеТоваров.НайтиПоРеквизиту("НомерВходящегоДокумента",Выгрузка[0].Number+" произв");
	Если не значениеЗаполнено(док) тогда
		Док=документы.ПоступлениеТоваров.СоздатьДокумент();
		Док.Дата=ТекущаяДата();
	Иначе
		Док=Док.получитьОбъект();
		Если док.проведен Тогда
			Док.записать(РежимЗаписиДокумента.ОтменаПроведения);
		ИначеЕсли Док.ПометкаУдаления Тогда
			Док.установитьПометкуУдаления(Ложь);
		КонецЕсли;
	КонецЕсли;
	
	Запрос=новый запрос;
	Запрос.УстановитьПараметр("код","460");
	Запрос.УстановитьПараметр("Пост",Справочники.ххх_Справочник.КонтрагентыПапкаПОСТАВЩИКИ.значение);
	Запрос.Текст="ВЫБРАТЬ
	             |	Контрагенты.Ссылка КАК Ссылка
	             |ИЗ
	             |	Справочник.Контрагенты КАК Контрагенты
	             |ГДЕ
	             |	Контрагенты.Ссылка В ИЕРАРХИИ(&Пост)
	             |	И Контрагенты.ххх_ИдЦентр = &код";
				 
	Выборка=Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Док.Контрагент=Выборка.ссылка;
	Иначе
		Сообщить("Контрагент №"+СтрЗаменить(Строка(Выгрузка[0].CustomerCode)," ","")+" не найден! Создать накладную нельзя!");
		возврат ложь;
	КонецЕсли;
	Док.СуммаДокумента=Выгрузка[0].Summa;
	
	склад=Справочники.Склады.Выбрать();
	склад.Следующий();
	склад=склад.ссылка;
	Док.Склад=склад;
	
	магазин=Справочники.магазины.Выбрать();
	магазин.Следующий();
	магазин=магазин.ссылка;
	Док.магазин=магазин;

	Док.организация=Константы.ххх_ОрганизацияПринимающаяяПроизводство.Получить();
	
	Док.ДатаВходящегоДокумента=Выгрузка[0].DateDoc;
	Док.НомерВходящегоДокумента=Выгрузка[0].Number+" произв";
	
	Док.НомерСчетаФактуры=Док.НомерВходящегоДокумента;
	Док.ДатаСчетаФактуры=Док.ДатаВходящегоДокумента;
	Док.ПредъявленСчетФактура=истина;
	Док.ХозяйственнаяОперация=Справочники.АналитикаХозяйственныхОпераций.ПоступлениеТоваров;//Справочники.ххх_Справочник.ПриходОтПроизводства.значение;
	Док.ЦенаВключаетНДС=истина;
	Док.УчитыватьНДС=истина;
	Док.Ответственный=ПараметрыСеанса.АвторизованныйПользователь;
	
	Для каждого стр из выгрузка Цикл
		стр.GoodCode=СтрЗаменить(Строка(стр.GoodCode)," ","");
	КонецЦикла;
	
	Запрос1=Новый запрос;
	Запрос1.УстановитьПараметр("выгрузка",выгрузка);
	Запрос1.Текст="ВЫБРАТЬ
	       |	Выгрузка.GoodCode КАК GoodCode,
	       |	Выгрузка.GoodCount КАК GoodCount,
	       |	Выгрузка.SummaRow КАК SummaRow,
	       |	Выгрузка.OutPrice КАК OutPrice
	       |ПОМЕСТИТЬ телесо
	       |ИЗ
	       |	&Выгрузка КАК Выгрузка
	       |
	       |ИНДЕКСИРОВАТЬ ПО
	       |	GoodCode
	       |;
	       |
	       |////////////////////////////////////////////////////////////////////////////////
	       |ВЫБРАТЬ
	       |	телесо.GoodCount КАК GoodCount,
	       |	телесо.SummaRow КАК SummaRow,
	       |	телесо.OutPrice КАК OutPrice,
	       |	Номенклатура.Ссылка КАК номка,
	       |	телесо.GoodCode КАК GoodCode
	       |ИЗ
	       |	телесо КАК телесо
	       |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	       |		ПО телесо.GoodCode = Номенклатура.ххх_ИдЦентр
	       |			И (НЕ Номенклатура.ЭтоГруппа)";
	
	Выгрузка=Запрос1.Выполнить().выгрузить();
	
	
	флаг=истина;	
	Док.Товары.очистить();
	Для каждого стр из выгрузка Цикл
		стрТов=Док.Товары.Добавить();
		Если не ЗначениеЗаполнено(стр.номка) Тогда
			флаг=ложь;
			Сообщить("Не найдена нмоенклатура код: "+стр.GoodCode);
		КонецЕсли;
		стрТов.Номенклатура=стр.номка;
		стрТов.Количество=стр.GoodCount;
		стрТов.Цена=стр.OutPrice;
		стрТов.Сумма=стр.SummaRow;
		стрТов.СтавкаНДС=стрТов.Номенклатура.СтавкаНДС;
		
		Если стрТов.Номенклатура.СтавкаНДС=перечисления.СтавкиНДС.НДС10 Тогда
			коэффициент=10;
		ИначеЕсли стрТов.Номенклатура.СтавкаНДС=перечисления.СтавкиНДС.НДС18 Тогда
			коэффициент=18;
		Иначе
			коэффициент=0;
		КОнецЕсли;
		стрТов.СуммаНДС=стрТов.Сумма*коэффициент/(100+коэффициент);
		стрТов.КоличествоУпаковок=стрТов.Количество;
	КонецЦикла;
	Если флаг Тогда
		Док.Записать();
	КонецЕсли;
	
	если Выгрузка.Количество()=0 Тогда
		сообщить("Накладная не найдена");
	КонецЕсли;
	возврат флаг;
КонецФункции





























