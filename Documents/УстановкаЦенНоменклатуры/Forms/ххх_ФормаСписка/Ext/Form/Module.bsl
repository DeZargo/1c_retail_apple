
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Печать
		//УправлениеПечатью.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюПечать);
	// Конец СтандартныеПодсистемы.Печать
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки".
	//ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);

	
	ОбщегоНазначенияРТ.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект, "Список", "Дата");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Элементы.Список);
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ВыгрузитьЦеныВБазуДляПроизводстваНаСервере()
	
	Запрос=Новый запрос;
	
	Запрос.Текст="ВЫБРАТЬ
	             |	ЦеныНоменклатурыСрезПоследних.ВидЦены КАК ВидЦены,
	             |	ЦеныНоменклатурыСрезПоследних.Номенклатура.ххх_ИдЦентр КАК Номенклатура,
	             |	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
	             |ИЗ
	             |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних КАК ЦеныНоменклатурыСрезПоследних";
	ВсеЦены=Запрос.Выполнить().Выгрузить();
	Запрос.Текст="ВЫБРАТЬ
	             |	dbo_Tovar.id КАК id,
	             |	dbo_Tovar.naim КАК naim,
	             |	dbo_Tovar.id_post КАК id_post,
	             |	dbo_Tovar.id_ed КАК id_ed,
	             |	dbo_Tovar.cenZ КАК cenZ,
	             |	dbo_Tovar.cenR КАК cenR,
	             |	dbo_Tovar.id_grup КАК id_grup,
	             |	dbo_Tovar.id_nds КАК id_nds,
	             |	dbo_Tovar.naimcas КАК naimcas,
	             |	dbo_Tovar.naimsen КАК naimsen,
	             |	dbo_Tovar.naimskod КАК naimskod,
	             |	dbo_Tovar.id_proizv КАК id_proizv,
	             |	dbo_Tovar.dopusk КАК dopusk,
	             |	dbo_Tovar.basenaim КАК basenaim,
	             |	dbo_Tovar.id_country КАК id_country,
	             |	dbo_Tovar.krep КАК krep,
	             |	dbo_Tovar.volume КАК volume,
	             |	dbo_Tovar.type КАК type
	             |ИЗ
	             |	ВнешнийИсточникДанных.Пикник23.Таблица.dbo_Tovar КАК dbo_Tovar";
				 		 
	Закуп=Справочники.ххх_Справочник.ЗакупочнаяЦена.значение;	
	розница=Справочники.ххх_Справочник.РозничнаяЦена.значение;
	ТчОлд=ххх_Сервер.УбитьЛишнее(Запрос.Выполнить().Выгрузить());
	Запрос.УстановитьПараметр("Закуп",закуп);
	Запрос.УстановитьПараметр("Розница",розница);
	Запрос.УстановитьПараметр("ТчОлд",ТчОлд);
	Запрос.УстановитьПараметр("ВсеЦены",ВсеЦены);
	Запрос.Текст="ВЫБРАТЬ
	             |	ТчОлд.id КАК id,
	             |	ТчОлд.naim КАК naim,
	             |	ТчОлд.id_post КАК id_post,
	             |	ТчОлд.id_ed КАК id_ed,
	             |	ТчОлд.cenZ КАК cenZ,
	             |	ТчОлд.cenR КАК cenR,
	             |	ТчОлд.id_grup КАК id_grup,
	             |	ТчОлд.id_nds КАК id_nds,
	             |	ТчОлд.naimcas КАК naimcas,
	             |	ТчОлд.naimsen КАК naimsen,
	             |	ТчОлд.naimskod КАК naimskod,
	             |	ТчОлд.id_proizv КАК id_proizv,
	             |	ТчОлд.dopusk КАК dopusk,
	             |	ТчОлд.basenaim КАК basenaim,
	             |	ТчОлд.id_country КАК id_country,
	             |	ТчОлд.krep КАК krep,
	             |	ТчОлд.volume КАК volume,
	             |	ТчОлд.type КАК type
	             |ПОМЕСТИТЬ ТчОлд
	             |ИЗ
	             |	&ТчОлд КАК ТчОлд
	             |
	             |ИНДЕКСИРОВАТЬ ПО
	             |	id
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ВсеЦены.ВидЦены КАК ВидЦены,
	             |	ВсеЦены.Номенклатура КАК Номенклатура,
	             |	ВсеЦены.Цена КАК Цена
	             |ПОМЕСТИТЬ ВсеЦены
	             |ИЗ
	             |	&ВсеЦены КАК ВсеЦены
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ВсеЦены.Номенклатура КАК Номенклатура,
	             |	ВсеЦены.Цена КАК Цена
	             |ПОМЕСТИТЬ Закуп
	             |ИЗ
	             |	ВсеЦены КАК ВсеЦены
	             |ГДЕ
	             |	ВсеЦены.ВидЦены = &закуп
	             |
	             |ИНДЕКСИРОВАТЬ ПО
	             |	Номенклатура
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ВсеЦены.Номенклатура КАК Номенклатура,
	             |	ВсеЦены.Цена КАК Цена
	             |ПОМЕСТИТЬ розница
	             |ИЗ
	             |	ВсеЦены КАК ВсеЦены
	             |ГДЕ
	             |	ВсеЦены.ВидЦены = &розница
	             |
	             |ИНДЕКСИРОВАТЬ ПО
	             |	Номенклатура
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ТчОлд.id КАК id,
	             |	ТчОлд.naim КАК naim,
	             |	ТчОлд.id_post КАК id_post,
	             |	ТчОлд.id_ed КАК id_ed,
	             |	ЕСТЬNULL(Закуп.Цена, ТчОлд.cenZ) КАК cenZ,
	             |	ЕСТЬNULL(розница.Цена, ТчОлд.cenR) КАК cenR,
	             |	ТчОлд.id_grup КАК id_grup,
	             |	ТчОлд.id_nds КАК id_nds,
	             |	ТчОлд.naimcas КАК naimcas,
	             |	ТчОлд.naimsen КАК naimsen,
	             |	ТчОлд.naimskod КАК naimskod,
	             |	ТчОлд.id_proizv КАК id_proizv,
	             |	ТчОлд.dopusk КАК dopusk,
	             |	ТчОлд.basenaim КАК basenaim,
	             |	ТчОлд.id_country КАК id_country,
	             |	ТчОлд.krep КАК krep,
	             |	ТчОлд.volume КАК volume,
	             |	ТчОлд.type КАК type
	             |ИЗ
	             |	ТчОлд КАК ТчОлд
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Закуп КАК Закуп
	             |		ПО ТчОлд.id = Закуп.Номенклатура
	             |			И ТчОлд.cenZ <> Закуп.Цена
	             |		ЛЕВОЕ СОЕДИНЕНИЕ розница КАК розница
	             |		ПО ТчОлд.id = розница.Номенклатура
	             |			И ТчОлд.cenR <> розница.Цена
	             |ГДЕ
	             |	(НЕ Закуп.Номенклатура ЕСТЬ NULL
	             |			ИЛИ НЕ розница.Номенклатура ЕСТЬ NULL)";
	Итог=Запрос.Выполнить().Выбрать();
	Пока Итог.Следующий() Цикл
		стр_dbo_Tovar=ВнешниеИсточникиДанных.Пикник23.Таблицы.dbo_Tovar.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(стр_dbo_Tovar,Итог);
		стр_dbo_Tovar.dopusk=1;
		стр_dbo_Tovar.Записать(Истина);	
	КонецЦикла;
	

КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьЦеныВБазуДляПроизводства(Команда)
	ВыгрузитьЦеныВБазуДляПроизводстваНаСервере();
КонецПроцедуры


// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

