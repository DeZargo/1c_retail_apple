

//// Функция формирует печатную форму документа.
////

//&Вместо("ПечатьТОРГ12")
//Функция ВместоПечатьТОРГ12Кочетов(МассивОбъектов, ОбъектыПечати,ВыводитьУслуги = Истина)
//	
//	КолонкаКодов = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
//	
//	Если ПустаяСтрока(КолонкаКодов) Тогда
//		
//		КолонкаКодов = "Код";
//		
//	КонецЕсли;
//	
//	Запрос = Новый Запрос(
//	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
//	|	ДокументКПечати.Ссылка                                                 КАК Ссылка,
//	|	ДокументКПечати.Номер                                                  КАК Номер,
//	|	ДокументКПечати.Дата                                                   КАК Дата,
//	|	ДокументКПечати.Контрагент                                             КАК Контрагент,
//	|	ДокументКПечати.Организация                                            КАК Организация,
//	|	ДокументКПечати.Организация                                            КАК Руководители,
//	|	ДокументКПечати.Организация.Префикс                                    КАК Префикс,
//	|	ДокументКПечати.Организация                                            КАК Грузоотправитель,
//	|	ДокументКПечати.Контрагент                                             КАК Грузополучатель,
//	|	ДокументКПечати.Контрагент                                             КАК Покупатель,
//	|	ДокументКПечати.БанковскийСчетОрганизации                              КАК БанковскийСчетОрганизации,
//	|	выбор когда ДокументКПечати.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) тогда ДокументКПечати.Организация иначе ДокументКПечати.Организация.ГоловнаяОрганизация конец                                            КАК Поставщик,
//	|	ДокументКПечати.Контрагент                                             КАК Плательщик,
//	|	ДокументКПечати.Ответственный.ФизЛицо                                  КАК ОтветственноеЛицо,
//	|	ДокументКПечати.ЦенаВключаетНДС                                        КАК ЦенаВключаетНДС,
//	|	ДокументКПечати.АдресДоставки                                          КАК АдресДоставки,
//	|	ДокументКПечати.УчитыватьНДС                                           КАК УчитыватьНДС,
//	|	ДокументКПечати.ДоверенностьНомер                                      КАК ДоверенностьНомер,
//	|	ДокументКПечати.ДоверенностьДата                                       КАК ДоверенностьДата,
//	|	ДокументКПечати.ДоверенностьВыдана                                     КАК ДоверенностьВыдана,
//	|	ДокументКПечати.ДоверенностьЧерезКого                                  КАК ДоверенностьЧерезКого
//	|ИЗ
//	|	Документ.РеализацияТоваров КАК ДокументКПечати
//	|
//	|ГДЕ
//	|	ДокументКПечати.Ссылка В (&МассивДокументов)
//	|	И ДокументКПечати.Проведен
//	|
//	|УПОРЯДОЧИТЬ ПО
//	|	Ссылка
//	|;		
//	|
//	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
//	|	ВложенныйЗапрос.Ссылка                                                     КАК Ссылка,
//	|	ВложенныйЗапрос.Номенклатура                                               КАК Номенклатура,
//	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное                            КАК ТоварНаименование,
//	|	ВложенныйЗапрос.Номенклатура." + КолонкаКодов + "                          КАК ТоварКод,
//	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                             КАК БазоваяЕдиницаНаименование,
//	|	ВложенныйЗапрос.ЕдиницаИзмерения.Код                                       КАК БазоваяЕдиницаКодПоОКЕИ,
//	|	ВложенныйЗапрос.ЕдиницаИзмерения                                           КАК ЕдиницаИзмерения,
//	|	ВложенныйЗапрос.ЕдиницаИзмеренияМест.Представление                         КАК ВидУпаковки,
//	|	ВложенныйЗапрос.КоэффициентМест / ВложенныйЗапрос.Коэффициент              КАК КоличествоВОдномМесте,
//	|	ВложенныйЗапрос.Характеристика                                             КАК Характеристика,
//	|	ВложенныйЗапрос.СтавкаНДС                                                  КАК СтавкаНДС,
//	|	ВложенныйЗапрос.Цена                                                       КАК Цена,
//	|	ВложенныйЗапрос.Количество                                                 КАК Количество,
//	|	ЕСТЬNULL(ВложенныйЗапрос.КоличествоМест, 0)                                КАК КоличествоМест,
//	|	ВложенныйЗапрос.Сумма                                                      КАК Сумма,
//	|	ВложенныйЗапрос.СуммаНДС                                                   КАК СуммаНДС,
//	|	ВложенныйЗапрос.НомерСтроки                                                КАК НомерСтроки,
//	|	ВложенныйЗапрос.МассаБрутто                                                КАК МассаБрутто,
//	|	ЛОЖЬ                                                                       КАК ЭтоВозвратнаяТара
//	|ИЗ (
//	|	ВЫБРАТЬ
//	|		Товары.Ссылка КАК Ссылка,
//	|		Товары.Номенклатура КАК Номенклатура,
//	|
//	|		ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
//	|			1
//	|		ИНАЧЕ
//	|			Товары.Упаковка.Коэффициент
//	|		КОНЕЦ КАК Коэффициент,
//	|
//	|		ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
//	|			Товары.Номенклатура.ЕдиницаИзмерения
//	|		ИНАЧЕ
//	|			Товары.Упаковка.ЕдиницаИзмерения
//	|		КОНЕЦ КАК ЕдиницаИзмерения,
//	|
//	|		ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
//	|			1
//	|		ИНАЧЕ
//	|			Товары.Упаковка.Коэффициент
//	|		КОНЕЦ КАК КоэффициентМест,
//	|
//	|		ВЫБОР КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
//	|			Товары.Номенклатура.ЕдиницаИзмерения
//	|		ИНАЧЕ
//	|			Товары.Упаковка.ЕдиницаИзмерения
//	|		КОНЕЦ КАК ЕдиницаИзмеренияМест,
//	|
//	|		ВЫБОР КОГДА Товары.Упаковка.Вес ЕСТЬ NULL ТОГДА
//	|			Товары.Количество * Товары.Номенклатура.Вес
//	|		ИНАЧЕ
//	|			Товары.КоличествоУпаковок * Товары.Упаковка.Вес
//	|		КОНЕЦ КАК МассаБрутто,
//	|
//	|		Товары.Характеристика     КАК Характеристика,
//	|		Товары.СтавкаНДС          КАК СтавкаНДС,
//	|		ВЫБОР
//	|			КОГДА
//	|				Товары.КоличествоУпаковок = 0
//	|			ТОГДА
//	|				Товары.Цена
//	|			ИНАЧЕ
//	|				Товары.Сумма / Товары.КоличествоУпаковок
//	|		КОНЕЦ КАК Цена,
//	|		Товары.КоличествоУпаковок КАК Количество,
//	|		Товары.КоличествоУпаковок КАК КоличествоМест,
//	|		Товары.Сумма              КАК Сумма,
//	|		Товары.СуммаНДС           КАК СуммаНДС,
//	|		Товары.НомерСтроки        КАК НомерСтроки
//	|	ИЗ
//	|		Документ.РеализацияТоваров.Товары КАК Товары
//	|	ГДЕ
//	|		Товары.Ссылка В (&МассивДокументов)
//	|		И Товары.Ссылка.Проведен
//	|		" + ?(НЕ ВыводитьУслуги, " И НЕ (Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)) ", "") + "
//	|	
//	|	) КАК ВложенныйЗапрос
//	|
//	|УПОРЯДОЧИТЬ ПО
//	|	ВложенныйЗапрос.Ссылка,
//	|	НомерСтроки
//	|
//	|ИТОГИ ПО
//	|	Ссылка
//	|");
//	
//	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
//	
//	ТабличныйДокумент = Новый ТабличныйДокумент;
//	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваров_ТОРГ12";
//	
//	ЕдиницаИзмеренияВеса           = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ЕдиницаИзмеренияВеса");
//	
//	ТабличныйДокумент.ПолеСлева = 5;
//	ТабличныйДокумент.ПолеСправа = 5;
//	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
//	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
//	ТабличныйДокумент.АвтоМасштаб = Истина;
//	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
//	
//	МассивРезультатов = Запрос.ВыполнитьПакет();
//	ДанныеПечати = МассивРезультатов[0].Выбрать();
//	ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
//	
//	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ТОРГ12");
//	
//	ПервыйДокумент = Истина;
//	Пока ДанныеПечати.Следующий() Цикл
//		
//		Если Не ПервыйДокумент Тогда
//			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
//		КонецЕсли;
//		
//		ПервыйДокумент = Ложь;
//		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
//		
//		СведенияОПоставщике       = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Поставщик,        ДанныеПечати.Дата,,ДанныеПечати.БанковскийСчетОрганизации);
//		СведенияОПокупателе       = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Покупатель,       ДанныеПечати.Дата);
//		СведенияОГрузополучателе  = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузополучатель,  ДанныеПечати.Дата);
//		СведенияОГрузоотправитель = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Грузоотправитель, ДанныеПечати.Дата,,ДанныеПечати.БанковскийСчетОрганизации);
//		
//		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
//		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
//		ОбластьМакета.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеПечати.Номер, Ложь, Истина);
//		ОбластьМакета.Параметры.ДатаДокумента  = ДанныеПечати.Дата;
//		
//		Если ДанныеПечати.Организация = ДанныеПечати.Грузоотправитель Тогда
//				
//				ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузоотправитель, 
//				"ПолноеНаименование,ИНН,КПП,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
//				
//		Иначе
//			
//			ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузоотправитель, 
//			"ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
//			
//		КонецЕсли;
//		
//		ОбластьМакета.Параметры.ПредставлениеГрузополучателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузополучателе, 
//		"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
//		
//		
//		//Zorius
//		ОбластьМакета.Параметры.ПредставлениеПоставщика  = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, 
//		"ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
//		
//		
//		//
//		//ОбластьМакета.Параметры.ПредставлениеПоставщика=ДанныеПечати.Организация.НаименованиеПолное+", "+
//		//ФормированиеПечатныхФормСервер.ВместоПолучитьАдресИзКонтактнойИнформацииКочетов(ДанныеПечати.Ссылка.магазин,"Юридический");
//		//
//		
//		//Zorius
//		ОбластьМакета.Параметры.АдресДоставки=СведенияОПокупателе.ФактическийАдрес;
//		
//		ОбластьМакета.Параметры.ПредставлениеПлательщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, 
//		"ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");

//		// Выводим коды
//		ОбластьМакета.Параметры.ОрганизацияПоОКПО          = СведенияОПоставщике.КодПоОКПО;
//		ОбластьМакета.Параметры.ВидДеятельностиПоОКДП      = "";
//		ОбластьМакета.Параметры.ГрузополучательПоОКПО      = СведенияОПоставщике.КодПоОКПО;
//		ОбластьМакета.Параметры.ПоставщикПоОКПО            = СведенияОПоставщике.КодПоОКПО;
//		ОбластьМакета.Параметры.ПлательщикПоОКПО           = СведенияОПокупателе.КодПоОКПО;
//		ОбластьМакета.Параметры.ОснованиеНомер             = "";
//		ОбластьМакета.Параметры.ОснованиеДата              = "";
//		ОбластьМакета.Параметры.ТранспортнаяНакладнаяНомер = "";
//		ОбластьМакета.Параметры.ТранспортнаяНакладнаяДата  = "";
//		
//		ТабличныйДокумент.Вывести(ОбластьМакета);
//		
//		НомерСтраницы = 1;
//		
//		ИтоговыеСуммы = Новый Структура;
//		
//		// Инициализация итогов по странице.
//		ИтоговыеСуммы.Вставить("ИтогоМассаБруттоНаСтранице", 0);
//		ИтоговыеСуммы.Вставить("ИтогоМестНаСтранице", 0);
//		ИтоговыеСуммы.Вставить("ИтогоКоличествоНаСтранице", 0);
//		ИтоговыеСуммы.Вставить("ИтогоСуммаНаСтранице", 0);
//		ИтоговыеСуммы.Вставить("ИтогоНДСНаСтранице", 0);
//		ИтоговыеСуммы.Вставить("ИтогоСуммаСНДСНаСтранице", 0);
//		ИтоговыеСуммы.Вставить("ИтогоМассаБруттоНаСтранице", 0);
//		ИтоговыеСуммы.Вставить("ИтогоМассаНеттоНаСтранице", 0);
//		
//		// Инициализация итогов по документу.
//		ИтоговыеСуммы.Вставить("ИтогоМассаБрутто", 0);
//		ИтоговыеСуммы.Вставить("ИтогоМест", 0);
//		ИтоговыеСуммы.Вставить("ИтогоКоличество", 0);
//		ИтоговыеСуммы.Вставить("ИтогоСуммаСНДС", 0);
//		ИтоговыеСуммы.Вставить("ИтогоСумма", 0);
//		ИтоговыеСуммы.Вставить("ИтогоНДС", 0);
//		ИтоговыеСуммы.Вставить("ИтогоМассаБрутто", 0);
//		ИтоговыеСуммы.Вставить("ИтогоМассаНетто", 0);
//		
//		ИтоговыеСуммы.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", 0);
//		ИтоговыеСуммы.Вставить("СуммаПрописью", "");
//		
//		ДанныеСтроки = Новый Структура;
//		ДанныеСтроки.Вставить("Номер", 0);
//		ДанныеСтроки.Вставить("Мест", 0);
//		ДанныеСтроки.Вставить("Количество", 0);
//		ДанныеСтроки.Вставить("Цена", 0);
//		ДанныеСтроки.Вставить("СуммаБезНДС", 0);
//		ДанныеСтроки.Вставить("СуммаНДС", 0);
//		ДанныеСтроки.Вставить("СуммаСНДС", 0);
//		ДанныеСтроки.Вставить("МассаБрутто", 0);
//		ДанныеСтроки.Вставить("МассаНетто", 0);
//		
//		
//		// Создаем массив для проверки вывода.
//		МассивВыводимыхОбластей = Новый Массив;
//		
//		// Выводим многострочную часть документа.
//		ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаб");
//		ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
//		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
//		ОбластьВсего            = Макет.ПолучитьОбласть("Всего");
//		ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
//		
//		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
//		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
//		
//		КоличествоСтрок = ВыборкаПоДокументам.Количество();
//		
//		СтрокаТовары = ВыборкаПоДокументам.Выбрать();
//		Пока СтрокаТовары.Следующий() Цикл
//			
//			ДанныеСтроки.Номер = ДанныеСтроки.Номер + 1;
//			
//			ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
//			ОбластьМакета.Параметры.ТоварНаименование = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(
//			СтрокаТовары.ТоварНаименование,
//			СтрокаТовары.Характеристика);
//			
//			ДанныеСтроки.Мест = СтрокаТовары.КоличествоМест;
//			ДанныеСтроки.Количество  = СтрокаТовары.Количество;
//			
//			Если ЕдиницаИзмеренияВеса <> Неопределено Тогда
//				Если Не ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) Тогда
//					ДанныеСтроки.МассаБрутто = 0;
//				Иначе
//					ДанныеСтроки.МассаБрутто = СтрокаТовары.МассаБрутто;
//				КонецЕсли;
//			КонецЕсли;
//			
//			ДанныеСтроки.СуммаСНДС   = Окр((СтрокаТовары.Сумма + ?(ДанныеПечати.ЦенаВключаетНДС, 0, СтрокаТовары.СуммаНДС)), 2);
//			ДанныеСтроки.СуммаНДС    = СтрокаТовары.СуммаНДС;
//			ДанныеСтроки.СуммаБезНДС = ДанныеСтроки.СуммаСНДС - ДанныеСтроки.СуммаНДС;
//			
//			Если ДанныеПечати.ЦенаВключаетНДС Тогда
//				ДанныеСтроки.Цена = ?(ДанныеСтроки.Количество = 0, 0, ДанныеСтроки.СуммаБезНДС / ДанныеСтроки.Количество);
//			Иначе
//				ДанныеСтроки.Цена = СтрокаТовары.Цена;
//			КонецЕсли;
//			
//			ОбластьМакета.Параметры.Заполнить(ДанныеСтроки);
//			
//			Если ДанныеСтроки.Номер = 1 Тогда // первая строка
//				
//				ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
//				ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
//				
//			Иначе
//				
//				МассивВыводимыхОбластей.Очистить();
//				МассивВыводимыхОбластей.Добавить(ОбластьМакета);
//				МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
//				
//				Если ДанныеСтроки.Номер = КоличествоСтрок Тогда
//					
//					МассивВыводимыхОбластей.Добавить(ОбластьВсего);
//					МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
//					
//				КонецЕсли;
//				
//				Если ДанныеСтроки.Номер <> 1 И Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
//					
//					ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
//					ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
//					
//					ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице = 0;
//					ИтоговыеСуммы.ИтогоМассаНеттоНаСтранице  = 0;
//					ИтоговыеСуммы.ИтогоМестНаСтранице        = 0;
//					ИтоговыеСуммы.ИтогоКоличествоНаСтранице  = 0;
//					ИтоговыеСуммы.ИтогоСуммаНаСтранице       = 0;
//					ИтоговыеСуммы.ИтогоНДСНаСтранице         = 0;
//					ИтоговыеСуммы.ИтогоСуммаСНДСНаСтранице   = 0;
//					
//					НомерСтраницы = НомерСтраницы + 1;
//					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
//					ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
//					ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
//					
//				КонецЕсли;
//				
//			КонецЕсли;
//			
//			ТабличныйДокумент.Вывести(ОбластьМакета);
//			
//			// Увеличим итоги по странице.
//			ИтоговыеСуммы.ИтогоМестНаСтранице        = ИтоговыеСуммы.ИтогоМестНаСтранице        + ДанныеСтроки.Мест;
//			ИтоговыеСуммы.ИтогоКоличествоНаСтранице  = ИтоговыеСуммы.ИтогоКоличествоНаСтранице  + ДанныеСтроки.Количество;
//			ИтоговыеСуммы.ИтогоСуммаНаСтранице       = ИтоговыеСуммы.ИтогоСуммаНаСтранице       + ДанныеСтроки.СуммаБезНДС;
//			ИтоговыеСуммы.ИтогоНДСНаСтранице         = ИтоговыеСуммы.ИтогоНДСНаСтранице         + ДанныеСтроки.СуммаНДС;
//			ИтоговыеСуммы.ИтогоСуммаСНДСНаСтранице   = ИтоговыеСуммы.ИтогоСуммаСНДСНаСтранице   + ДанныеСтроки.СуммаСНДС;
//			ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице = ИтоговыеСуммы.ИтогоМассаБруттоНаСтранице + ДанныеСтроки.МассаБрутто;
//			ИтоговыеСуммы.ИтогоМассаНеттоНаСтранице  = ИтоговыеСуммы.ИтогоМассаНеттоНаСтранице  + ДанныеСтроки.МассаНетто;
//			
//			// Увеличим итоги по документу.
//			ИтоговыеСуммы.ИтогоМест        = ИтоговыеСуммы.ИтогоМест        + ДанныеСтроки.Мест;
//			ИтоговыеСуммы.ИтогоКоличество  = ИтоговыеСуммы.ИтогоКоличество  + ДанныеСтроки.Количество;
//			ИтоговыеСуммы.ИтогоСумма       = ИтоговыеСуммы.ИтогоСумма       + ДанныеСтроки.СуммаБезНДС;
//			ИтоговыеСуммы.ИтогоНДС         = ИтоговыеСуммы.ИтогоНДС         + ДанныеСтроки.СуммаНДС;
//			ИтоговыеСуммы.ИтогоСуммаСНДС   = ИтоговыеСуммы.ИтогоСуммаСНДС   + ДанныеСтроки.СуммаСНДС;
//			ИтоговыеСуммы.ИтогоМассаБрутто = ИтоговыеСуммы.ИтогоМассаБрутто + ДанныеСтроки.МассаБрутто;
//			ИтоговыеСуммы.ИтогоМассаНетто  = ИтоговыеСуммы.ИтогоМассаНетто  + ДанныеСтроки.МассаНетто;
//			
//		КонецЦикла;
//		
//		// Выводим итоги по последней странице.
//		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
//		ОбластьИтоговПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
//		
//		ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
//		
//		// Выводим итоги по документу в целом.
//		ОбластьМакета = Макет.ПолучитьОбласть("Всего");
//		ОбластьМакета.Параметры.Заполнить(ИтоговыеСуммы);
//		
//		ТабличныйДокумент.Вывести(ОбластьМакета);
//		
//		// Выводим подвал документа
//		
//		ИтоговыеСуммы.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", ЧислоПрописью(ДанныеСтроки.Номер, ,",,,,,,,,0"));
//		ИтоговыеСуммы.Вставить("СуммаПрописью", ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(ИтоговыеСуммы.ИтогоСуммаСНДС));
//		
//		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
//		
//		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
//		
//		ПолнаяДатаДокумента = Формат(ДанныеПечати.Дата, "ДФ=""дд ММММ гггг """"года""""""");
//		ДлинаСтроки = СтрДлина(ПолнаяДатаДокумента);
//		ПервыйРазделитель = Найти(ПолнаяДатаДокумента, " ");
//		ВторойРазделитель = Найти(Прав(ПолнаяДатаДокумента, ДлинаСтроки - ПервыйРазделитель), " ") + ПервыйРазделитель;
//		ОбластьМакета.Параметры.ДатаДокументаДень = """" + Лев(ПолнаяДатаДокумента, ПервыйРазделитель -1 ) + """";
//		ОбластьМакета.Параметры.ДатаДокументаМесяц = Сред(ПолнаяДатаДокумента, ПервыйРазделитель + 1, ВторойРазделитель - ПервыйРазделитель - 1);
//		ОбластьМакета.Параметры.ДатаДокументаГод = Прав(ПолнаяДатаДокумента, ДлинаСтроки - ВторойРазделитель);
//		
//		Руководители = ФормированиеПечатныхФормСервер.ОтветственныеЛицаОрганизаций(ДанныеПечати.Руководители, ДанныеПечати.Дата);
//		
//		ОбластьМакета.Параметры.ФИОГлавБухгалтера     = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Руководители.ГлавныйБухгалтер);
//		ОбластьМакета.Параметры.ФИОРуководителя       = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Руководители.Руководитель);
//		ОбластьМакета.Параметры.ДолжностьРуководителя = Руководители.РуководительДолжность;
//		СтруктураФИО = ФормированиеПечатныхФормСервер.ФамилияИмяОтчество(ДанныеПечати.ОтветственноеЛицо, ДанныеПечати.Дата);
//		ОбластьМакета.Параметры.ФИОКладовщика         = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Неопределено,СтруктураФИО.Фамилия,СтруктураФИО.Имя,СтруктураФИО.Отчество);
//		
//		
//		Если ИтоговыеСуммы.ИтогоМест > 0 Тогда
//			
//			ОбластьМакета.Параметры.ВсегоМестПрописью = ЧислоПрописью(ИтоговыеСуммы.ИтогоМест, ,",,,,,,,,0");
//			
//		КонецЕсли;
//		
//		Если ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) И ИтоговыеСуммы.ИтогоМассаБрутто > 0 Тогда
//			
//			ОбластьМакета.Параметры.МассаГрузаПрописью = ЧислоПрописью(ИтоговыеСуммы.ИтогоМассаБрутто, ,",,,,,,,,0")+ " " + СокрЛП(ЕдиницаИзмеренияВеса) + ".";
//			
//		КонецЕсли;
//		
//		ОбластьМакета.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ИтоговыеСуммы.КоличествоПорядковыхНомеровЗаписейПрописью;
//		ОбластьМакета.Параметры.СуммаПрописью = ИтоговыеСуммы.СуммаПрописью;
//		
//		ТабличныйДокумент.Вывести(ОбластьМакета);
//		
//		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
//		
//	КонецЦикла;
//	
//	Возврат ТабличныйДокумент;
//	
//КонецФункции
