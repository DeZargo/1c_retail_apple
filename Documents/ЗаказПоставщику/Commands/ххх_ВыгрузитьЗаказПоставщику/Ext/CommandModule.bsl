
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	Если ПараметрыВыполненияКоманды.Источник.ИмяФормы="Документ.ЗаказПоставщику.Форма.ххх_ФормаДокумента" тогда
		МассивСтрок=Новый массив;
		МассивСтрок.Добавить(ПараметрыВыполненияКоманды.Источник.Объект.Ссылка);
		ПроверкаВыбранныхДокументов(МассивСтрок);
		ВыгрузитьЗаказПоставщику(МассивСтрок);	
	ИначеЕсли ПараметрыВыполненияКоманды.Источник.ИмяФормы="Документ.ЗаказПоставщику.Форма.ххх_ФормаСписка" тогда
		Если ПараметрыВыполненияКоманды.Источник.Элементы.Список.ВыделенныеСтроки.количество()<>0 Тогда
			йцу=ПараметрыВыполненияКоманды.Источник.Элементы.Список.ВыделенныеСтроки;
			ПроверкаВыбранныхДокументов(йцу);
			МассивСтрок=Новый массив;
			Для каждого ссыль из ПараметрыВыполненияКоманды.Источник.Элементы.Список.ВыделенныеСтроки Цикл
				МассивСтрок.Добавить(ссыль);
			КонецЦикла;
			ВыгрузитьЗаказПоставщику(МассивСтрок);
		Иначе
			Сообщить("Для выгрузки заявок необходимо выделить строку/строки.");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПроверкаВыбранныхДокументов(МассивСтрок)
	й=0;
	Пока й<МассивСтрок.количество() Цикл
		Если Формат(МассивСтрок[й].Дата,"ДФ=dd.MM.yyyy")<>Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy") Тогда
			вызватьИсключение("Нельзя выгружать заказы за предыдущие дни");
		КонецЕсли;
		
		Если не МассивСтрок[й].проведен тогда
			вызватьИсключение("Документ: "+Строка(МассивСтрок[й])+". Нельзя выгружать не проведённый документ!");	
		КонецЕсли;
		//Заказ=Документы.ЗаказПоставщику.СоздатьДокумент();
		Путь=МассивСтрок[й].контрагент.ДополнительныеРеквизиты.Найти(Справочники.ххх_Справочник.ПутьВыгрузкиЗаявок.Значение,"Свойство");
		Если не значениеЗаполнено(Путь)или не значениеЗаполнено(Путь.Значение) тогда
			вызватьИсключение("Не заполнен путь выгрузки файла для контрагента: "
				+Строка(МассивСтрок[й].Контрагент));
		КонецЕсли;
		ЗначениеДопСведенияИдНоменклатурыВБазеПоставщика=
			МассивСтрок[й].контрагент.ДополнительныеРеквизиты.Найти(
			Справочники.ххх_Справочник.ПутьВыгрузкиЗаявок.Значение,"Свойство");
		Если не значениеЗаполнено(ЗначениеДопСведенияИдНоменклатурыВБазеПоставщика)
			или не значениеЗаполнено(ЗначениеДопСведенияИдНоменклатурыВБазеПоставщика.Значение) тогда
				вызватьИсключение("Не заполнено значение допполнительного сведения: "
				+Справочники.ххх_Справочник.СвязкаКонтрагентаСИдТовараВЕгоБазе.Значение.Наименование
				+" Контрагент:"+Строка(МассивСтрок[й].Контрагент));
		КонецЕсли;
		й=й+1;
	КонецЦикла;
КонецПроцедуры

Процедура ВыгрузитьЗаказПоставщику(Заказы)	
	
	Для каждого Заказ из заказы Цикл
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ссыль",Заказ.ссылка);
		Запрос.УстановитьПараметр("ИдТов1",Справочники.ххх_Справочник.id_b1.Значение);
		Запрос.УстановитьПараметр("ИдТов2",Справочники.ххх_Справочник.id_b2.Значение);
		Запрос.УстановитьПараметр("ИдТов3",Справочники.ххх_Справочник.id_b3.Значение);
		Запрос.УстановитьПараметр("ДопСвойствоПутьДляВыгрузкиЗаявок",Справочники.ххх_Справочник.ПутьВыгрузкиЗаявок.Значение);
		Запрос.УстановитьПараметр("УказательНаУказательИдТовараПоставщика",Справочники.ххх_Справочник.СвязкаКонтрагентаСИдТовараВЕгоБазе.Значение);
		Запрос.Текст = 
		    "ВЫБРАТЬ
		    |	ЗаказПоставщикуТовары.Номенклатура КАК Номенклатура,
		    |	ЗаказПоставщикуТовары.Количество КАК Количество,
		    |	ЗаказПоставщикуТовары.Ссылка.Контрагент КАК Контрагент,
		    |	ЗаказПоставщикуТовары.Коробки КАК Коробки,
		    |	ЗаказПоставщикуТовары.Упаковки КАК Упаковки
		    |ПОМЕСТИТЬ номка
		    |ИЗ
		    |	Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
		    |ГДЕ
		    |	ЗаказПоставщикуТовары.Ссылка = &ссыль
		    |;
		    |
		    |////////////////////////////////////////////////////////////////////////////////
		    |ВЫБРАТЬ
		    |	номка.Номенклатура КАК Номенклатура,
		    |	номка.Количество КАК Количество,
		    |	КонтрагентыДополнительныеРеквизиты.Значение КАК ЗначениеУказателяНаУказатель,
		    |	номка.Контрагент КАК Контрагент,
		    |	NULL КАК УказательНаУказатель,
		    |	номка.Коробки КАК Коробки,
		    |	номка.Упаковки КАК Упаковки
		    |ПОМЕСТИТЬ УазатаелиНаИдТоваровПоставщиков
		    |ИЗ
		    |	номка КАК номка
		    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ДополнительныеРеквизиты КАК КонтрагентыДополнительныеРеквизиты
		    |		ПО номка.Контрагент = КонтрагентыДополнительныеРеквизиты.Ссылка
		    |			И (КонтрагентыДополнительныеРеквизиты.Свойство = &УказательНаУказательИдТовараПоставщика)
		    |			И (КонтрагентыДополнительныеРеквизиты.Значение = &ИдТов1)
		    |
		    |ОБЪЕДИНИТЬ ВСЕ
		    |
		    |ВЫБРАТЬ
		    |	номка.Номенклатура,
		    |	номка.Количество,
		    |	КонтрагентыДополнительныеРеквизиты.Значение,
		    |	номка.Контрагент,
		    |	КонтрагентыДополнительныеРеквизиты.Свойство,
		    |	номка.Коробки,
		    |	номка.Упаковки
		    |ИЗ
		    |	номка КАК номка
		    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ДополнительныеРеквизиты КАК КонтрагентыДополнительныеРеквизиты
		    |		ПО номка.Контрагент = КонтрагентыДополнительныеРеквизиты.Ссылка
		    |			И (КонтрагентыДополнительныеРеквизиты.Свойство = &УказательНаУказательИдТовараПоставщика)
		    |			И (КонтрагентыДополнительныеРеквизиты.Значение = &ИдТов2)
		    |
		    |ОБЪЕДИНИТЬ ВСЕ
		    |
		    |ВЫБРАТЬ
		    |	номка.Номенклатура,
		    |	номка.Количество,
		    |	КонтрагентыДополнительныеРеквизиты.Значение,
		    |	номка.Контрагент,
		    |	КонтрагентыДополнительныеРеквизиты.Свойство,
		    |	номка.Коробки,
		    |	номка.Упаковки
		    |ИЗ
		    |	номка КАК номка
		    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ДополнительныеРеквизиты КАК КонтрагентыДополнительныеРеквизиты
		    |		ПО номка.Контрагент = КонтрагентыДополнительныеРеквизиты.Ссылка
		    |			И (КонтрагентыДополнительныеРеквизиты.Свойство = &УказательНаУказательИдТовараПоставщика)
		    |			И (КонтрагентыДополнительныеРеквизиты.Значение = &ИдТов3)
		    |;
		    |
		    |////////////////////////////////////////////////////////////////////////////////
		    |ВЫБРАТЬ
		    |	УказателиНаИдТоваровПоставщиков.Номенклатура КАК Номенклатура,
		    |	УказателиНаИдТоваровПоставщиков.Количество КАК Количество,
		    |	УказателиНаИдТоваровПоставщиков.ЗначениеУказателяНаУказатель КАК ЗначениеУказателяНаУказатель,
		    |	УказателиНаИдТоваровПоставщиков.Контрагент КАК Контрагент,
		    |	ДополнительныеСведения.Значение КАК КодТовараПоставщика,
		    |	УказателиНаИдТоваровПоставщиков.Коробки КАК Коробки,
		    |	УказателиНаИдТоваровПоставщиков.Упаковки КАК Упаковки
		    |ПОМЕСТИТЬ КодыТоваровПоставщиков
		    |ИЗ
		    |	УазатаелиНаИдТоваровПоставщиков КАК УказателиНаИдТоваровПоставщиков
		    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
		    |		ПО УказателиНаИдТоваровПоставщиков.ЗначениеУказателяНаУказатель = ДополнительныеСведения.Свойство
		    |			И УказателиНаИдТоваровПоставщиков.Номенклатура = ДополнительныеСведения.Объект
		    |;
		    |
		    |////////////////////////////////////////////////////////////////////////////////
		    |ВЫБРАТЬ
		    |	КодыТоваровПоставщиков.Количество КАК Количество,
		    |	КодыТоваровПоставщиков.Номенклатура.Наименование КАК НоменклатураНаименование,
		    |	КонтрагентыДополнительныеРеквизиты.Значение КАК ПутьДляВыгрузки,
		    |	КодыТоваровПоставщиков.Номенклатура.ххх_ИдЦентр КАК КодВЦентре,
		    |	КодыТоваровПоставщиков.КодТовараПоставщика КАК КодТовараПоставщика,
		    |	КодыТоваровПоставщиков.ЗначениеУказателяНаУказатель КАК ЗначениеУказателяНаУказатель,
		    |	КодыТоваровПоставщиков.Коробки КАК Коробки,
		    |	КодыТоваровПоставщиков.Упаковки КАК Упаковки
		    |ИЗ
		    |	КодыТоваровПоставщиков КАК КодыТоваровПоставщиков
		    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты.ДополнительныеРеквизиты КАК КонтрагентыДополнительныеРеквизиты
		    |		ПО КодыТоваровПоставщиков.Контрагент = КонтрагентыДополнительныеРеквизиты.Ссылка
		    |			И (КонтрагентыДополнительныеРеквизиты.Свойство = &ДопСвойствоПутьДляВыгрузкиЗаявок)
		    |ИТОГИ ПО
		    |	ПутьДляВыгрузки,
		    |	ЗначениеУказателяНаУказатель";
		//Результат = Запрос.Выполнить();
		//ТаблицаЗначений = Результат.Выгрузить();
		УказателиНаУказатели=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		Пока УказателиНаУказатели.Следующий() Цикл
			ПутиДляВыгрузки=УказателиНаУказатели.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
			Пока ПутиДляВыгрузки.Следующий() Цикл	
				разделитель = "|";
				й=0;
				мас=Новый массив;
				мас.Добавить(10);
				мас.Добавить(10);
				мас.Добавить(10);
				мас.Добавить(10);                  
				мас.Добавить(10);
				мас.Добавить(70);
				колонкиТЗ=Новый Массив;
				колонкиТЗ.Добавить("id");
				Если ПутиДляВыгрузки.ЗначениеУказателяНаУказатель=Справочники.ххх_Справочник.id_b1.Значение тогда
					колонкиТЗ.Добавить("id_b1");
				ИначеЕсли ПутиДляВыгрузки.ЗначениеУказателяНаУказатель=Справочники.ххх_Справочник.id_b2.Значение тогда
					колонкиТЗ.Добавить("id_b2");
				ИначеЕсли ПутиДляВыгрузки.ЗначениеУказателяНаУказатель=Справочники.ххх_Справочник.id_b3.Значение тогда
					колонкиТЗ.Добавить("id_b3");
				КонецЕсли;
				колонкиТЗ.Добавить("kor");
				колонкиТЗ.Добавить("up");
				колонкиТЗ.Добавить("sh");
				колонкиТЗ.Добавить("naim");
				Для каждого колонка Из колонкиТЗ Цикл
				        стрКолонки =""+ стрКолонки + СтроковыеФункцииКлиентСервер.ДополнитьСтроку(колонка,мас[й]," ","Справа") + разделитель;
					й=й+1;
				КонецЦикла; 
				//
				//Запрос=Новый запрос;
				//Запрос.Текст="ВЫБРАТЬ
				//             |	КассыККМ.ПутьКПапкеВыгрузки
				//             |ИЗ
				//             |	Справочник.КассыККМ КАК КассыККМ
				//             |ГДЕ
				//             |	КассыККМ.ПометкаУдаления = ЛОЖЬ";
				//Кассы=Запрос.Выполнить().Выбрать();
				//В иделае писать 1 файл в ТЕМП и копипастить его в внужные папки, но возможно ебалайка с правами доступа(ХЗ, как то такая хуерга помнится)
				//Пока Кассы.Следующий() Цикл
				
				Номка=ПутиДляВыгрузки.Выбрать();
				НаименованиеДляФайлов=Справочники.ххх_Справочник.Магазин.Значение.ххх_НаименованиеДляФайлов;
				Если Номка.Количество()>0 тогда
				    кодировка = КодировкаТекста.ANSI;
				    ТекстовыйФайлЗапись = Новый ЗаписьТекста(ПутиДляВыгрузки.ПутьДляВыгрузки+НаименованиеДляФайлов+".txt",Кодировка);             
					
					текст="";
					//текст=стрКолонки+Символы.ВК;
					ТекстовыйФайлЗапись.ЗаписатьСтроку(стрКолонки);
					ТекстовыйФайлЗапись.ЗаписатьСтроку("****************************************");
				    Пока Номка.Следующий() Цикл                    
				        текст = //текст
						 СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Номка.КодВЦентре,10," ","Справа")+разделитель
						+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Номка.КодТовараПоставщика,10," ","Справа")+разделитель
						+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Номка.коробки,10," ","Справа")+разделитель
						+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Номка.упаковки,10," ","Справа")+разделитель
						+СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Номка.Количество,10," ","Справа")+разделитель
						+СтроковыеФункцииКлиентСервер.Допо	лнитьСтроку(Номка.НоменклатураНаименование,70," ","Справа")+разделитель;
						ТекстовыйФайлЗапись.ЗаписатьСтроку(текст);//+Символы.ВК;
					КонецЦикла;	
					//ТекстовыйФайлЗапись.ЗаписатьСтроку(текст);
					ТекстовыйФайлЗапись.Закрыть();
					Если Заказ.Контрагент.ххх_ЗадваиватьФайлВыгрузки Тогда
						КопироватьФайл(ПутиДляВыгрузки.ПутьДляВыгрузки+НаименованиеДляФайлов+".txt",ПутиДляВыгрузки.ПутьДляВыгрузки+НаименованиеДляФайлов+"a.txt");
					КонецЕсли;
				КонецЕсли;
				//КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры


























