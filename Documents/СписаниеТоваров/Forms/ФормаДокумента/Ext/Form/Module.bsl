
&НаКлиенте
Процедура КочетовЗаполнитьИзПоступленияПеред(Команда)
	ОткрытьФорму("Документ.ПоступлениеТоваров.ФормаВыбора",
		,ЭтаФорма,Истина,ВариантОткрытияОкна.ОтдельноеОкно,
		,Новый ОписаниеОповещения("ОбработкаВыбораПоступленияДляЗаполненияТч",эТАфОРМА)
		,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

Процедура ОбработкаВыбораПоступленияДляЗаполненияТч(ДокПост,й)
	Если ЗначениеЗаполнено(ДокПост) тогда
		Док=РеквизитФормыВЗначение("Объект");
		ЗаполнитьЗначенияСвойств(Док,ДокПост);
		Док.Товары.Загрузить(ДокПост.товары.выгрузить());
		Док.АналитикаХозяйственнойОперации=Справочники.ххх_Справочник.СписаниеНаПроизводствоАналитикаХозОпер.Значение;
		ЗначениеВРеквизитФормы(Док,"Объект");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КочетовЗаполнитьПоЦенамРевизииПеред(Команда)
	Если ТипЗнч(Объект.ДокументОснование)=Тип("ДокументСсылка.ПриказНаПроведениеИнвентаризацииТоваров") Тогда
		КочетовЗаполнитьПоЦенамРевизииПередСервер();		
	КонецЕсли;
КонецПроцедуры

Процедура КочетовЗаполнитьПоЦенамРевизииПередСервер()
	
	Для каждого стр из Объект.Товары Цикл
		
		стрДокОсн=Объект.Документоснование.Товары.Найти(стр.номенклатура);
		стр.Цена=стрДокОсн.Цена;
		Стр.Сумма=стр.цена*стр.количество;
		
	КонецЦикла;
	
	Объект.СуммаДокумента=Объект.Товары.Итог("Сумма");
	
КонецПроцедуры

&Вместо("ОповещениеПоискаПоШтрихкоду")
&НаКлиенте
Процедура КочетовОповещениеПоискаПоШтрихкодуВместо(Структура, ДополнительныеПараметры) Экспорт	
	Если ЗначениеЗаполнено(Структура) Тогда
		штрихкод=Структура.штрихкод;
		Если Структура.ПоискПоВесовомуТовару=Ложь тогда
			СтруктураПараметровКлиента = ПолученШтрихкодИзСШК(Штрихкод);
			ОбработатьДанныеПоКодуКлиент(СтруктураПараметровКлиента);
			ТекущаяСтрокаЕГАИС = Неопределено;
		Иначе			
			Элементы.Товары.ТекущаяСтрока=ПоискПоВесовомуШтрихКоду(штрихкод);
			ТоварыНоменклатураПриИзменении("");
			//ValMa - 21-12-2018 - установка цены для весового товара
			КочетовТоварыНоменклатураПриИзмененииПосле("");
			ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
			ТекущаяСтрока.Сумма = ТекущаяСтрока.Цена * ТекущаяСтрока.Количество;
			//---
		КонецЕсли;
		//Zorius
		ПоискПоШтрихкоду("");
		//Zorius
	КонецЕсли;
КонецПроцедуры

Функция ПоискПоВесовомуШтрихКоду(штрихкод)
	
	номка=ххх_Сервер.ПолучитьВесовойШтрихкод(штрихкод);  //23 12647 00182 0
	Если значениеЗаполнено(номка) Тогда
		//вес=Число(Лев(Прав(штрихкод,6),5)/1000); //оригинал
		//ValMa - 21-12-2018 - если заводят 12647
		Если СтрДлина(штрихкод)>5 Тогда
			вес=Число(Лев(Прав(штрихкод,6),5)/1000);
		Иначе
			вес=0;
		КонецЕсли;
		//---
		строки=Объект.товары.НайтиСтроки(Новый структура("Номенклатура",номка));
		
		стр=?(ЗначениеЗаполнено(строки),строки[0],неопределено);
		Если стр<>Неопределено Тогда
			стр.количество=стр.количество+вес;
			стр.количествоУпаковок=стр.количество;
		Иначе
			стр=Объект.товары.добавить();
			стр.Номенклатура=номка;
			стр.количество=вес;
			стр.количествоУпаковок=стр.количество;
		КонецЕсли;
		возврат стр.ПолучитьИдентификатор();
	Иначе
		Сообщить("Данные по коду не найдены: "+штрихкод);
		возврат Неопределено;
	КонецЕсли;

КонецФункции

&НаКлиенте
Процедура КочетовТоварыНоменклатураПриИзмененииПосле(Элемент)
	
	// ValMa - 13-12-2018 - установка цены товара по виду цены в Аналитике
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	ИмяАналитики  = ЭтаФорма.Элементы.АналитикаХозяйственнойОперации.ТекстРедактирования;
	ТекущаяСтрока.Цена = УстановитьЦенуТовара(ТекущаяСтрока.Номенклатура, ИмяАналитики);
	
КонецПроцедуры

&НаСервере
Функция УстановитьЦенуТовара(СсылкаТовар, Аналитика)
	
	СсылкаСпрАналитика = Справочники.АналитикаХозяйственныхОпераций.НайтиПоНаименованию(Аналитика);
	ВидЦены = СсылкаСпрАналитика.КочетовВидЦен;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|	ЦеныНоменклатурыСрезПоследних.ВидЦены КАК ВидЦены,
	|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|			&ДатаДок,
	|			Номенклатура = &Номенклатура
	|				И ВидЦены = &ВидЦены) КАК ЦеныНоменклатурыСрезПоследних";
	
	Запрос.УстановитьПараметр("ВидЦены", ВидЦены);
	Запрос.УстановитьПараметр("ДатаДок", ТекущаяДата()); //Дата создаваемого документа
	Запрос.УстановитьПараметр("Номенклатура", СсылкаТовар);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ЦенаТовара = 0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЦенаТовара = ВыборкаДетальныеЗаписи.Цена;
	КонецЦикла;
	
	Возврат ЦенаТовара;
	
КонецФункции

&НаСервере
Процедура КочетовАналитикаХозяйственнойОперацииПриИзмененииПослеНаСервере()
	
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	
	Если ДокОбъект.Товары.Количество()>0 Тогда
		//Сообщить("контроль цен в ТЧ");
		Для Каждого СтрокаТЧ Из ДокОбъект.Товары Цикл
			ИмяАналитики   = ДокОбъект.АналитикаХозяйственнойОперации.Наименование;
			СтрокаТЧ.Цена  = УстановитьЦенуТовара(СтрокаТЧ.Номенклатура, ИмяАналитики);
			СтрокаТЧ.Сумма = СтрокаТЧ.Цена * СтрокаТЧ.Количество;
		КонецЦикла;	
	//Иначе
	//	Сообщить("контроль цен не нужен (товар еще не заполнен)");	
	КонецЕсли;
	Если ЗначениеЗаполнено(ДокОбъект.АналитикаХозяйственнойОперации.КочетовВидЦен.Наименование) Тогда
		ДокОбъект.ххх_ВидЦены = ДокОбъект.АналитикаХозяйственнойОперации.КочетовВидЦен;
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(ДокОбъект, "Объект");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРозничнуюЦену()
	
	Возврат Справочники.ххх_Справочник.РозничнаяЦена.Значение;	
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьЗакупочнуюЦену()
	
	Возврат Справочники.ххх_Справочник.ЗакупочнаяЦена.Значение;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьВидЦены(АналитикаХозОперации)
	
	Возврат АналитикаХозОперации.КочетовВидЦен;
	
КонецФункции

&НаКлиенте
Процедура КочетовАналитикаХозяйственнойОперацииПриИзмененииПосле(Элемент)
	
	КочетовАналитикаХозяйственнойОперацииПриИзмененииПослеНаСервере();
	
	Элементы.ДекорацияВидЦен.ЦветТекста = Новый Цвет(51, 102, 255); //не ярко синий
	Элементы.ТоварыЗаполнитьЦеныВыделенныхСтрокПоВидуЦен.Доступность = Ложь;
	
	Если СтрДлина(Элементы.АналитикаХозяйственнойОперации.ТекстРедактирования) > 0 Тогда
		Элементы.ДекорацияВидЦен.Заголовок = "Вид цены: ";
		РознЦена  = ПолучитьРозничнуюЦену();
		ЗакупЦена = ПолучитьЗакупочнуюЦену();
		УстановленныйВидЦен = ПолучитьВидЦены(Объект.АналитикаХозяйственнойОперации);
		Если УстановленныйВидЦен = РознЦена Тогда
			Элементы.ДекорацияВидЦен.Заголовок = Элементы.ДекорацияВидЦен.Заголовок + РознЦена;	
		ИначеЕсли УстановленныйВидЦен = ЗакупЦена Тогда
			Элементы.ДекорацияВидЦен.Заголовок = Элементы.ДекорацияВидЦен.Заголовок + ЗакупЦена;
		Иначе //у аналитики не определен вид цены
			Элементы.ДекорацияВидЦен.ЦветТекста = Новый Цвет(255, 0, 0); //красный
			Элементы.ДекорацияВидЦен.Заголовок = "У Аналитики не определен вид цены! Выполните команду ""Заполнить цены - По виду цен""";
			Элементы.ТоварыЗаполнитьЦеныВыделенныхСтрокПоВидуЦен.Доступность = Истина;
		КонецЕсли;	
	Иначе
		Элементы.ДекорацияВидЦен.Заголовок = " ";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КочетовОткрытьПодборВместо(Команда)
	
	Отказ = Ложь;
	Если Не ЗначениеЗаполнено(Объект.Магазин) Тогда
		ОчиститьСообщения();
		СообщитьОбОшибкахОткрытияПодбора(Отказ);
	КонецЕсли;
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрЗаголовок = НСтр("ru = 'Подбор товаров в %Документ%'");
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПараметрЗаголовок = СтрЗаменить(ПараметрЗаголовок, "%Документ%", Объект.Ссылка);
	Иначе
		ПараметрЗаголовок = СтрЗаменить(ПараметрЗаголовок, "%Документ%", НСтр("ru = 'списание товаров'"));
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Магазин",    Объект.Магазин);
	ПараметрыФормы.Вставить("РежимПодбораБезУслуг", Истина);
	ПараметрыФормы.Вставить("ИспользоватьОтборПоТипамНоменклатуры", Истина);
	ПараметрыФормы.Вставить("Склад", Объект.Склад);
	ПараметрыФормы.Вставить("Заголовок", ПараметрЗаголовок);
	ПараметрыФормы.Вставить("Дата", Объект.Дата);
	//ValMa - 13-12-2018 - передать в форму подбора Вид цены
	ПараметрыФормы.Вставить("ВидЦенДок", ПолучитьВидЦеныПоАналитике(Объект.АналитикаХозяйственнойОперации));
	//---
	Если НЕ ЕстьПравоИзменятьЦену() Тогда
		ПараметрыФормы.Вставить("РежимПодбораБезСуммовыхПараметров", Истина);
		ПараметрыФормы.Вставить("ЗаголовокКнопкиЗапрашиватьКоличествоИЦену",НСтр("ru = 'Запрашивать количество'"));
	КонецЕсли;
	
	ОткрытьФорму("Обработка.ПодборТоваров.Форма", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьВидЦеныПоАналитике(Аналитика)
	Возврат Аналитика.КочетовВидЦен;
КонецФункции

&НаКлиенте
Процедура КочетовПриОткрытииПосле(Отказ)
	
	//ValMa - 14-12-2018 - доступность изменения вида цен. может менять пользователь с полными правами
	//Элементы.ТоварыЗаполнитьЦеныВыделенныхСтрокПоРозничнымЦенам.Доступность = ЕстьПолныеПрава();
	Элементы.ТоварыЗаполнитьЦеныВыделенныхСтрокПоРозничнымЦенам.Доступность = Ложь;
	Элементы.ТоварыЗаполнитьПоЦенамРевизии.Доступность                      = Ложь;
	Элементы.ТоварыЗаполнитьЦеныВыделенныхСтрокПоВидуЦен.Доступность        = Ложь;
	
	Если НЕ ЭтотОбъект.Объект.ДокументОснование = Неопределено Тогда
		Элементы.ДекорацияВидЦен.Заголовок = "Вид цены: " + ПолучитьЗакупочнуюЦену();
	КонецЕсли;
	//---
	
КонецПроцедуры

&Вместо("ЗаполнитьЦеныВыделенныхСтрокПоВидуЦенСервер")
Функция ххх_ЗаполнитьЦеныВыделенныхСтрокПоВидуЦенСервер(ВидЦены)
		
	СтруктураПараметров                   = ЗапасыСервер.СтруктураПараметровЗаполненияПоВидуЦен();
	СтруктураПараметров.Объект            = Объект;
	СтруктураПараметров.ИмяТабличнойЧасти = "Товары";
	СтруктураПараметров.ВидЦен            = ВидЦены;
	
	//СтруктураПараметров.ВыделенныеСтроки = Элементы.Товары.ВыделенныеСтроки;
	
	//ValMa - 14-12-2018 - берем все строки Табличной части
	МассивИндексовСтрок = Новый Массив;
	Для Каждого СтрТЧ Из Объект.Товары Цикл
		МассивИндексовСтрок.Добавить(СтрТЧ.НомерСтроки-1);	
	КонецЦикла;	
	
	СтруктураПараметров.ВыделенныеСтроки  = МассивИндексовСтрок;
	//---
	
	СтруктураПараметров.Дата              = ЗапасыСервер.ДатаДляЦенообразованияДляДокумента(Объект);
	СтруктураПараметров.ЕстьНДС           = Ложь;
	
	ЦеныРассчитаны = ЗапасыСервер.ЗаполнитьЦеныВыделенныхСтрокПоВидуЦен(СтруктураПараметров);
	
	Возврат ЦеныРассчитаны;
	
КонецФункции

&Вместо("ОповещениеЗаполнитьЦены")
&НаКлиенте
Процедура ххх_ОповещениеЗаполнитьЦены(ВидЦены, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(ВидЦены) Тогда
		
		ЦеныРассчитаны = ЗаполнитьЦеныВыделенныхСтрокПоВидуЦенСервер(ВидЦены);
		
		//ValMa - 14-12-2018 - в форме указать вид цены
		Если ЦеныРассчитаны Тогда
			Элементы.ДекорацияВидЦен.Заголовок = "Вид цен: "+ВидЦены;
			Элементы.ДекорацияВидЦен.ЦветТекста = Новый Цвет(51, 102, 255); //не ярко синий
		КонецЕсли;
		//занести вид цены в реквизит документа
		ЗаполнитьВидЦенДокСервер(ВидЦены);
		//---
		
		ЗапасыКлиент.ОповеститьОбОкончанииЗаполненияЦенПоВидуЦен(ЦеныРассчитаны, ВидЦены);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВидЦенДокСервер(ВидЦены)
	
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	ДокОбъект.ххх_ВидЦены = ВидЦены;
	ЗначениеВРеквизитФормы(ДокОбъект,"Объект");
	
КонецПроцедуры

&Вместо("ОбработатьДанныеПоКодуСервер")
Процедура ххх_ОбработатьДанныеПоКодуСервер(СтруктураРезультат) Экспорт
	
	ИдентификаторСтроки = Неопределено;
	СтрокаРезультата = СтруктураРезультат.ЗначенияПоиска[0];
	//ValMa - 19-12-2018 - данные по виду цен в аналитике
	СтрокаРезультата.Вставить("ИмяАналитики", Объект.АналитикаХозяйственнойОперации.Наименование);
	//---
	Если СтрокаРезультата.Свойство("Карта") Тогда
		
		ПодключаемоеОборудованиеРТВызовСервера.ВставитьПредупреждениеОНевозможностиОбработкиКарт(СтруктураРезультат, СтрокаРезультата);
		
	ИначеЕсли СтрокаРезультата.Свойство("СерийныйНомер") Тогда
		
		ИдентификаторСтроки = ДобавитьНайденныеСерийныеНомера(СтрокаРезультата);
		
	Иначе // Номенклатура.
		
		ИдентификаторСтроки = ДобавитьНайденныеПозицииТоваров(СтрокаРезультата);
		
	КонецЕсли;

	Если СтрокаРезультата.Свойство("ТекстПредупреждения") Тогда
		СтруктураРезультат.Вставить("ТекстПредупреждения", СтрокаРезультата.ТекстПредупреждения);
	КонецЕсли;
	
	Если ИдентификаторСтроки <> Неопределено Тогда
		СтруктураРезультат.Вставить("АктивизироватьСтроку", ИдентификаторСтроки);
	КонецЕсли;
		
КонецПроцедуры


&Вместо("ДобавитьНайденныеПозицииТоваров")
Функция xxx_ДобавитьНайденныеПозицииТоваров(СтруктураПараметров) Экспорт 
	
	ДобавленаСтрока = Ложь;
	ТекущаяСтрока = ПодключаемоеОборудованиеРТВызовСервера.ИнициализацияСтрокиТоваров(ЭтотОбъект, СтруктураПараметров, ДобавленаСтрока);
	
	// ValMa - 18-12-2018 - установка цены товара по виду цены в Аналитике
	ИмяАналитики  = СтруктураПараметров.ИмяАналитики;
	ТекущаяСтрока.Цена = УстановитьЦенуТовара(ТекущаяСтрока.Номенклатура, ИмяАналитики);
	//---
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	СтруктураДействий.Вставить("ПересчитатьСумму");
	
	Если ДобавленаСтрока Тогда
		//СтруктураДействий.Вставить("ОбнулитьЦену"); // ValMa - не нужно обнулять 
		
		СтруктураСправки = Новый Структура;
		СтруктураСправки.Вставить("Дата", Объект.Дата);
		СтруктураДействий.Вставить("ПроверитьНеобходимостьВводаСправкиНаАлкоголь", СтруктураСправки);
		
	КонецЕсли;
	
	ОбработкаТабличнойЧастиТоварыКлиентСервер.ЗаполнитьКлючСвязи(Объект.Товары, ТекущаяСтрока, "КлючСвязи");
	ИдентификаторСтроки = ПодключаемоеОборудованиеРТВызовСервера.ЗавершениеОбработкиСтрокиТоваров(ЭтотОбъект, ТекущаяСтрока, СтруктураДействий);
	
	Возврат ИдентификаторСтроки;
	
КонецФункции



























