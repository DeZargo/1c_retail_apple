
&Вместо("ОбработкаПроверкиЗаполнения")
Процедура КочетовОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
		
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ);
	
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ, "Подарки");
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	МассивНепроверяемыхРеквизитов.Добавить("Товары.Склад");
	
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ);
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ,Новый Структура("ИмяТЧ","Подарки"));
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект,Документы.ЧекККМ.ПараметрыУказанияСерий(ЭтотОбъект),Отказ);
	
	//Если ЗначениеЗаполнено(КассаККМ)  Тогда
	//	
	//	СтруктураСостояниеКассовойСмены = РозничныеПродажиСервер.ПолучитьСостояниеКассовойСмены(КассаККМ);
	//	
	//	КассоваяСмена = СтруктураСостояниеКассовойСмены.КассоваяСмена;
	//	
	//	ТекстОшибки = НСтр("ru='Кассовая смена не открыта!'");
	//	Если НЕ РозничныеПродажиСервер.СменаОткрыта(КассоваяСмена, Дата, ТекстОшибки) Тогда
	//		
	//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
	//			ТекстОшибки,
	//			ЭтотОбъект,
	//			"КассаККМ",
	//			,
	//			Отказ
	//		);
	//		
	//	КонецЕсли;
	//	
	//КонецЕсли;
	
	ИспользуетсяРегистрацияРозничныхПродажВЕГАИС = ИнтеграцияЕГАИСВызовСервера.ИспользуетсяРегистрацияРозничныхПродажВЕГАИС(Организация, Магазин, Дата);
	
	Если ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат Тогда
		МаркетинговыеАкцииСервер.ПроверитьЧтоНетПодарочныхСертификатов(
			ЭтотОбъект,
			"Товары",
			Отказ
		);
		
		МаркетинговыеАкцииСервер.ПроверитьЧтоНетОплатыПодарочнымСертификатом(
			ЭтотОбъект,
			"Оплата",
			Отказ
		);
		
		ПродажиСервер.ПроверитьВозможностьВозвратаПоЧекуККМ(
			ЭтотОбъект,
			Отказ,,,,,
			ИспользуетсяРегистрацияРозничныхПродажВЕГАИС
		);
		
		ПродажиСервер.ПроверитьВозможностьПровестиОплатуПоВозвратуЧекККМ(
			ЭтотОбъект,
			Отказ
			);
		
	Иначе
		
		ПродажиСервер.ПроверитьЗаполнениеСклада(
			ЭтотОбъект,
			"Товары",
			Отказ
		);
		
		МаркетинговыеАкцииСервер.ПроверитьЦеныСертификатов(
			ЭтотОбъект,
			"Товары",
			Отказ
		);
		
		Если НЕ ЗначениеЗаполнено(ЗаказПокупателя) Тогда
			МаркетинговыеАкцииСервер.ПроверитьЗаполнениеТабличнойЧастиСерийныеНомера(
				ЭтотОбъект,
				"Товары",
				"СерийныеНомера",
				Отказ
			);
		КонецЕсли;
		
		МаркетинговыеАкцииСервер.ПроверитьЗаполнениеТабличнойЧастиПогашениеПодарочныхСертификатов(
			ЭтотОбъект,
			"ПогашениеПодарочныхСертификатов",
			Отказ);
		
		МаркетинговыеАкцииСервер.ПроверитьДвиженияСерийныхНомеров(
			ЭтотОбъект,
			"Товары",
			"СерийныеНомера",
			Отказ);
		
		МаркетинговыеАкцииСервер.ПроверитьОкончаниеАбсолютныхСроковДействияСертификатов(
			ЭтотОбъект,
			"Товары",
			Отказ);
		
		МаркетинговыеАкцииСервер.ПроверитьДвиженияСерийныхНомеровДляПогашения(
			ЭтотОбъект,
			"ПогашениеПодарочныхСертификатов",
			Отказ);
			
		Если НЕ ЗначениеЗаполнено(ЗаказПокупателя) Тогда
			АссортиментСервер.ПроверитьАссортиментТаблицыТоваровДокументаПродажи(
				ЭтотОбъект,
				Отказ,
				Истина);
		КонецЕсли;
		
		СкидкиНаценкиСерверПереопределяемый.ПроверитьЗапретРозничнойПродажиТаблицыТоваров(
			ЭтотОбъект,
			"Товары",
			Отказ);
			
		
		МассивНепроверяемыхРеквизитов.Добавить("ЧекККМПродажа");
		МассивНепроверяемыхРеквизитов.Добавить("АналитикаХозяйственнойОперации");
		
		
	КонецЕсли;
	
	Если ИспользуетсяРегистрацияРозничныхПродажВЕГАИС Тогда
		ДанныеЕГАИСДостаточны = Истина;
		ПродажиСервер.ПодготовкаДанныхДляПробитияЧекаККМ(ЭтотОбъект, ДанныеЕГАИСДостаточны);
		Если НЕ ДанныеЕГАИСДостаточны Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	//// В погашении только подарочные сертификаты.
	//ПродажиСервер.ПроверитьЗаполнениеТабличнойЧастиОплата(
	//	ЭтотОбъект,
	//	Отказ
	//);
	
	
	// В погашении только подарочные сертификаты.
	МаркетинговыеАкцииСервер.ПроверитьТабличнуюЧастьПогашения(
		ЭтотОбъект,
		Отказ
	);
	
	МаркетинговыеАкцииСервер.ПроверитьЧтоНетПодарочныхСертификатов(
		ЭтотОбъект,
		"Подарки",
		Отказ
	);

КонецПроцедуры

&После("ОбработкаПроведения")
Процедура КочетовОбработкаПроведения(Отказ, РежимПроведения)
	Движения.ТоварыОрганизаций.записывать=Истина;
	Для каждого стр из Товары цикл
		Движение=Движения.ТоварыОрганизаций.добавить();
		Движение.ВидДвижения=ВидДвиженияНакопления.Расход;
		Движение.Номенклатура=стр.Номенклатура;
		Движение.Склад=стр.Склад;
		Движение.период=Дата;
		Движение.Организация=Организация;
		Если ВидОперации=Перечисления.ВидыОперацийЧекККМ.Возврат Тогда
			Движение.Количество=-стр.Количество;
		Иначе
			Движение.Количество=стр.Количество;
		КонецЕсли;
	КонецЦикла;
	
	Если Магазин.ххх_ИнтернетМагазин тогда 
		Движения.ххх_ПродажиПоИнтернетМагазину.записывать=истина;	
		Для каждого стр из Товары цикл
			Движение=Движения.ххх_ПродажиПоИнтернетМагазину.добавить();
			Движение.ВидДвижения=ВидДвиженияНакопления.Приход;
			Движение.Номенклатура=стр.Номенклатура;
			Движение.период=Дата;
			Если ВидОперации=Перечисления.ВидыОперацийЧекККМ.Возврат Тогда
				Движение.Количество=-стр.Количество;
			Иначе
				Движение.Количество=стр.Количество;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ВидОперации = Перечисления.ВидыОперацийЧекККМ.Возврат Тогда
		ххх_Сервер.ОтразитьДвиженияАкцизныхМарок(Движения,Ссылка,ВидДвиженияНакопления.Приход);
	Иначе	
		ххх_Сервер.ОтразитьДвиженияАкцизныхМарок(Движения,Ссылка,ВидДвиженияНакопления.Расход);
	КонецЕсли;

	
	//Для каждого стр из Акцизн
	//Если АкцизныеМарки.Количество()>0 Тогда
	//	
	//	Если СтатусЧекаККМ=Перечисления.ВидыОперацийЧекККМ.Продажа Тогда
	//		Документы.ЧекККМ.ПриИзмененииСтатусаДокумента(ссылка, ПредыдущийСтатус, НовыйСтатус, ПараметрыОбновленияСтатуса)
	//	Иначеесли СтатусЧекаККМ=Перечисления.ВидыОперацийЧекККМ.Возврат Тогда
	//		
	//	КонецЕсли;
	//	
	//КонецЕсли;
	//ПриИзмененииСтатусаДокумента(ссылка, ПредыдущийСтатус, НовыйСтатус, ПараметрыОбновленияСтатуса)
КонецПроцедуры



