#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

&Вместо("ОбработкаПроверкиЗаполнения")
Процедура КочетовОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
		МассивНепроверяемыхРеквизитов = Новый Массив;
	
	ПеревозкаОтсутствует = ГрузоотправительПредприятие = ГрузополучательПредприятие;
	
	ПроверкаРеквизитаНеВыполняется = Новый Соответствие;
	ПроверкаРеквизитаНеВыполняется.Вставить("ГрузоотправительПредприятие", ГашениеНаСВХ);
	ПроверкаРеквизитаНеВыполняется.Вставить("ГрузоотправительХозяйствующийСубъект", ГашениеНаСВХ);
	ПроверкаРеквизитаНеВыполняется.Вставить("ДатаТТН", Не ТТНУказан Или ПеревозкаОтсутствует Или ГашениеНаСВХ);
	ПроверкаРеквизитаНеВыполняется.Вставить("НомерТТН", Не ТТНУказан Или ПеревозкаОтсутствует Или ГашениеНаСВХ);
	ПроверкаРеквизитаНеВыполняется.Вставить("СерияТТН", Не ТТНУказан Или ПеревозкаОтсутствует Или ГашениеНаСВХ);
	ПроверкаРеквизитаНеВыполняется.Вставить("ТипТТН", Не ТТНУказан Или ПеревозкаОтсутствует Или ГашениеНаСВХ);
	ПроверкаРеквизитаНеВыполняется.Вставить("НомерАвтомобильногоКонтейнера", ПеревозкаОтсутствует Или ГашениеНаСВХ);
	ПроверкаРеквизитаНеВыполняется.Вставить("НомерАвтомобильногоПрицепа", ПеревозкаОтсутствует Или ГашениеНаСВХ);
	ПроверкаРеквизитаНеВыполняется.Вставить("НомерТранспортногоСредства", ПеревозкаОтсутствует Или ГашениеНаСВХ Или ТипТранспорта = Перечисления.ТипыТранспортаВЕТИС.ПерегонСкота);
	ПроверкаРеквизитаНеВыполняется.Вставить("ТипТранспорта", ПеревозкаОтсутствует Или ГашениеНаСВХ);
	ПроверкаРеквизитаНеВыполняется.Вставить("ПеревозчикХозяйствующийСубъект", ПеревозкаОтсутствует Или ГашениеНаСВХ);
	ПроверкаРеквизитаНеВыполняется.Вставить("СпособХранения", ПеревозкаОтсутствует Или ГашениеНаСВХ);
	
	Для каждого ПроверяемыйРеквизит Из ПроверяемыеРеквизиты Цикл
		Если ПроверкаРеквизитаНеВыполняется.Получить(ПроверяемыйРеквизит) = Истина Тогда
			МассивНепроверяемыхРеквизитов.Добавить(ПроверяемыйРеквизит);
		КонецЕсли;
	КонецЦикла;
	
	Если Не ПеревозкаОтсутствует И Не ГашениеНаСВХ Тогда
		Если ТипТранспорта = Перечисления.ТипыТранспортаВЕТИС.ПерегонСкота Тогда
			РеквизитыТранспортногоСредства = "ТипТранспорта";
		Иначе
			РеквизитыТранспортногоСредства = "НомерАвтомобильногоКонтейнера,НомерАвтомобильногоПрицепа,НомерТранспортногоСредства,ТипТранспорта";
		КонецЕсли;
		
		ТранпортноеСредствоЗаполнено = Истина;
		Для каждого РеквизитТранспортногоСредства Из СтрРазделить(РеквизитыТранспортногоСредства, ",") Цикл
			Если ПроверяемыеРеквизиты.Найти(РеквизитТранспортногоСредства) <> Неопределено
				И Не ЗначениеЗаполнено(ЭтотОбъект[РеквизитТранспортногоСредства]) Тогда
				МассивНепроверяемыхРеквизитов.Добавить(РеквизитТранспортногоСредства);
				ТранпортноеСредствоЗаполнено = Ложь;
			КонецЕсли;
		КонецЦикла;
		Если Не ТранпортноеСредствоЗаполнено Тогда
			ТекстОшибки = НСтр("ru = 'Не все данные транспортного средства заполнены'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "ПредставлениеТранспортногоСредства",, Отказ);
		КонецЕсли;
	КонецЕсли;
			
	ПредставлениеТЧ = ЭтотОбъект.Метаданные().ТабличныеЧасти.Товары.Синоним;
	ТипЖивыеЖивотные =
		ИнтеграцияВЕТИСВызовСервера.ПродукцияПринадлежитТипуЖивыеЖивотные(ЭтотОбъект.Товары.ВыгрузитьКолонку("Продукция"));
	
	Для каждого СтрокаТовары Из Товары Цикл
		
		Если СтрокаТовары.ЕстьУточнения Тогда
			
			ОтборУточнений = Новый Структура("ИдентификаторСтроки", СтрокаТовары.ИдентификаторСтроки);
			ТоварыУточнения = ТоварыУточнение.НайтиСтроки(ОтборУточнений);
			Если ТоварыУточнения.Количество() = 0 Или Не ЗначениеЗаполнено(ТоварыУточнения.Получить(0).Номенклатура) Тогда
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", СтрокаТовары.НомерСтроки, "ЕстьУточнения");
				ШаблонСообщенияСроки = НСтр("ru = 'Нет данных по уточнямым товарам в строке %1 списка ""%2""'");
				ТекстСообщения = СтрШаблон(ШаблонСообщенияСроки, СтрокаТовары.НомерСтроки, ПредставлениеТЧ);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТовары.Продукция)
			И НЕ ЗначениеЗаполнено(СтрокаТовары.СрокГодностиНачалоПериода)
			И НЕ ТипЖивыеЖивотные[СтрокаТовары.Продукция]
			И ИнтеграцияВЕТИСВызовСервера.ПродукцияИмеетСрокГодности(СтрокаТовары.Продукция) Тогда
			
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", СтрокаТовары.НомерСтроки, "ПредставлениеСрокГодности");
			ШаблонСообщенияСроки = НСтр("ru = 'Не заполнено поле ""%1"" в строке %2 списка ""%3""'");
			ТекстСообщения = СтрШаблон(ШаблонСообщенияСроки, НСтр("ru = 'Срок годности'"),	СтрокаТовары.НомерСтроки, ПредставлениеТЧ);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
			
		КонецЕсли;
		
		//Если ЗначениеЗаполнено(СтрокаТовары.Номенклатура) И СтрокаТовары.Количество = 0 Тогда
		//	
		//	Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", СтрокаТовары.НомерСтроки, "Количество");
		//	ШаблонСообщенияСроки = НСтр("ru = 'Не заполнено поле ""%1"" в строке %2 списка ""%3""'");
		//	ТекстСообщения = СтрШаблон(ШаблонСообщенияСроки, НСтр("ru = 'Количество'"),	СтрокаТовары.НомерСтроки, ПредставлениеТЧ);
		//	
		//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле,, Отказ);
		//	
		//КонецЕсли;
		
	КонецЦикла;
	
	ИнтеграцияВЕТИСПереопределяемый.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

КонецПроцедуры

#КонецЕсли