
&НаСервере
&После("ОбновитьДанныеУточнений")
Процедура КочетовОбновитьДанныеУточнений(ИзменяемаяСтрока, КоллекцияУточнений, КэшированныеЗначения)
	Если ИзменяемаяСтрока.КоличествоВЕТИС<>ИзменяемаяСтрока.количество тогда
		ИзменяемаяСтрока.КоличествоРасхождений=ИзменяемаяСтрока.КоличествоВЕТИС-ИзменяемаяСтрока.количество;
		ИзменяемаяСтрока.ЕстьОтклонения=истина;
		
	Иначе
		ИзменяемаяСтрока.КоличествоРасхождений=0;
		ИзменяемаяСтрока.ЕстьОтклонения=ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
&Вместо("Подключаемый_ВыполнитьКоманду")
Процедура КочетовПодключаемый_ВыполнитьКоманду(Команда)
	Если Команда.Имя="КомандыЗаполненияОснованияВыборДокументовОбычное_ВыбратьВЕТИСПоступлениеТоваров" Тогда
		параметрыВыборка=Новый структура;
		отбор=Новый структура;
		//отбор.Вставить("НомерВходящегоДокумента",Объект.НомерТТН);
		параметрыВыборка.Вставить("ИНН",получитьГрузоотправительХозяйствующийСубъектИНН(Объект.ГрузоотправительХозяйствующийСубъект));
		параметрыВыборка.Вставить("НомерВходящегоДокумента",Объект.НомерТТН);
		ОткрытьФорму("Документ.ПоступлениеТоваров.ФормаВыбора",параметрыВыборка,Элементы.ДокументОснование);
	Иначе
		ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
функция получитьГрузоотправительХозяйствующийСубъектИНН(ГрузоотправительХозяйствующийСубъект)
	возврат ГрузоотправительХозяйствующийСубъект.ИНН
КонецФункции

&НаКлиенте
Процедура КочетовДокументОснованиеОбработкаВыбораВместо(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	ЭтаФорма.Модифицированность=истина;
	ПерезаполнитьПоСоответсвиям()
КонецПроцедуры

Процедура ПерезаполнитьПоСоответсвиям()
	
	Запрос=Новый запрос;
	Запрос.УстановитьПараметр("Продукция",Объект.Товары.Выгрузить().ВыгрузитьКолонку("Продукция"));
	Запрос.Текст="ВЫБРАТЬ
	             |	СоответствиеНоменклатурыВЕТИС.Номенклатура КАК Номенклатура,
	             |	СоответствиеНоменклатурыВЕТИС.Продукция КАК Продукция
	             |ПОМЕСТИТЬ йцу
	             |ИЗ
	             |	РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
	             |ГДЕ
	             |	СоответствиеНоменклатурыВЕТИС.Продукция В(&Продукция)
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	СоответствиеНоменклатурыВЕТИС.Номенклатура,
	             |	СоответствиеНоменклатурыВЕТИС.Продукция
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	йцу.Номенклатура КАК Номенклатура,
	             |	йцу.Продукция КАК Продукция,
	             |	СУММА(1) КАК колво
	             |ПОМЕСТИТЬ йцу1ё
	             |ИЗ
	             |	йцу КАК йцу
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	йцу.Продукция,
	             |	йцу.Номенклатура
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	йцу1ё.Номенклатура КАК Номенклатура,
	             |	йцу1ё.Продукция КАК Продукция,
	             |	йцу1ё.колво КАК колво
	             |ИЗ
	             |	йцу1ё КАК йцу1ё
	             |ГДЕ
	             |	йцу1ё.колво = 1";
	
	Выборка=Запрос.Выполнить().Выбрать();
	
	Пока выборка.Следующий() Цикл
		
		Отбор=Новый структура;
		Отбор.Вставить("продукция",выборка.продукция);
		строки=Объект.Товары.НайтиСтроки(отбор);	
		Для каждого стр из строки цикл
			
			Если не ЗначениеЗаполнено(стр.номенклатура) Тогда
				стр.номенклатура=выборка.номенклатура;
			КонецЕСли;
			
			отборТоварыУточнение=Новый структура;
			отборТоварыУточнение.Вставить("ИдентификаторСтроки",стр.ИдентификаторСтроки);
			
			строкиТоварыУточнение=Объект.ТоварыУточнение.НайтиСтроки(отборТоварыУточнение);;
			
			Для каждого стрТоварыУточнение из строкиТоварыУточнение цикл
				Если не ЗначениеЗаполнено(стр.номенклатура) Тогда
					стрТоварыУточнение.номенклатура=выборка.номенклатура;
				КонецЕСли;
			КонецЦикла;

		КонецЦикла;
					
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
&Вместо("ТоварыНоменклатураНачалоВыбора")
Процедура КочетовТоварыНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	ПараметрыНоменклатуры = ИнтеграцияВЕТИСВызовСервера.ПараметрыСозданияНоменклатуры(ТекущиеДанные.Продукция,
								ТекущиеДанные.ЕдиницаИзмеренияВЕТИС);
	Если ТекущиеДанные.ДанныеВСД <> Неопределено И
		ЗначениеЗаполнено(ТекущиеДанные.ДанныеВСД.ВетеринарноСопроводительныйДокумент) Тогда
		
		ПараметрыНоменклатуры.Вставить("СтранаПроизводства", ТекущиеДанные.ДанныеВСД.СтранаПроизводства);
		ПараметрыНоменклатуры.Вставить("Производители", ТекущиеДанные.ДанныеВСД.АдресаТабличныхЧастей.Производители);
		
	КонецЕсли;
	
	//+++
	ВСтавитьКлючНоменклатураВПоступлении(ПараметрыНоменклатуры);
	//---
	
	СобытияФормВЕТИСКлиентПереопределяемый.ОткрытьФормуВыбораНоменклатуры(ЭтотОбъект, ПараметрыНоменклатуры);

КонецПроцедуры

Процедура ВСтавитьКлючНоменклатураВПоступлении(ПараметрыНоменклатуры)

	Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		//Было:
		//ПараметрыНоменклатуры.вставить("НоменклатураВПоступлении",Объект.ДокументОснование.Товары.Выгрузить().ВыгрузитьКолонку("Номенклатура"));
		
		//Стало:
		//ValMa - 31/07/2019 - найдем товары, уже подобранные на форме документа		
		НоменклатураПодобраннаяТЗ = Объект.Товары.Выгрузить();
		НулевыеСтроки = НоменклатураПодобраннаяТЗ.НайтиСтроки(Новый Структура("Количество",0));
		Для каждого СтрокаТаблицы Из НулевыеСтроки Цикл
			НоменклатураПодобраннаяТЗ.Удалить(СтрокаТаблицы); //отфильтровываем неподобранный товар
		КонецЦикла;
		
		//найдем товары и их количество в Поступлении	
		НоменклатураВПоступленииТЗ = Объект.ДокументОснование.Товары.Выгрузить();
		НоменклатураВПоступленииТЗ.Свернуть("Номенклатура","Количество");
		
		Индекс = НоменклатураВПоступленииТЗ.Количество()-1;
		Пока Индекс >= 0 Цикл			
			НайденныеСтроки = НоменклатураПодобраннаяТЗ.НайтиСтроки(Новый Структура("Номенклатура", НоменклатураВПоступленииТЗ[Индекс].Номенклатура));
			Если НайденныеСтроки.Количество()>0 Тогда 
				//нашли позиции, проверяем их на КОЛИЧЕСТВО товара
				КоличествоПодобраноРаньше = 0;
				Для Каждого НайденнаяСтрока из НайденныеСтроки Цикл
					КоличествоПодобраноРаньше = КоличествоПодобраноРаньше + НайденнаяСтрока.КоличествоВЕТИС;	
				КонецЦикла;
				Если (НоменклатураВПоступленииТЗ[Индекс].Количество*НоменклатураВПоступленииТЗ[Индекс].Номенклатура.ххх_Нетто - КоличествоПодобраноРаньше)<=0 Тогда 
					НоменклатураВПоступленииТЗ.Удалить(Индекс); //количество товара в Поступлении и во Вх.трансп.операцииВетИС равно, значит не показываем этот товар
				КонецЕсли;	
			КонецЕсли;
			Индекс = Индекс-1;
		КонецЦикла;
		ПараметрыНоменклатуры.Вставить("НоменклатураВПоступлении", НоменклатураВПоступленииТЗ.ВыгрузитьКолонку("Номенклатура"));
		//---
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура КочетовПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	ПерезаполнитьПоСоответсвиям();
	Если не значениеЗаполнено(параметры.Ключ) тогда
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
&Вместо("УточнитьНоменклатуру")
Процедура КочетовУточнитьНоменклатуру(Команда)
	// Вставить содержимое метода.
	РеквизитыУточнения = "Номенклатура, Характеристика, Серия, Количество, КоличествоВЕТИС, ИдентификаторСтроки, ИдентификаторПартии";
	ДопРеквизитыУточнения = "СопоставлениеНоменклатура, Сопоставлено, ХарактеристикиИспользуются, СопоставленоКоличество,
	| СопоставлениеХарактеристика, СтатусУказанияСерий, ТипНоменклатуры, Артикул, ЕдиницаИзмерения";
	
	ИдентификаторСтроки = Элементы.Товары.ТекущиеДанные.ИдентификаторСтроки;
	ОтборТекущейСтроки = Новый Структура("ИдентификаторСтроки", ИдентификаторСтроки);
	ТоварыУточненияТекущейСтроки = Объект.ТоварыУточнение.НайтиСтроки(ОтборТекущейСтроки);
	МассивУточнений = Новый Массив;
	Для каждого ТекущееУточнение Из ТоварыУточненияТекущейСтроки Цикл
		СтруктураУточнения = Новый Структура(РеквизитыУточнения + ", " + ДопРеквизитыУточнения);
		ЗаполнитьЗначенияСвойств(СтруктураУточнения, Элементы.Товары.ТекущиеДанные);
		ЗаполнитьЗначенияСвойств(СтруктураУточнения, ТекущееУточнение, РеквизитыУточнения);
		СтруктураУточнения.Номенклатура= Элементы.Товары.ТекущиеДанные.Номенклатура;
		МассивУточнений.Добавить(СтруктураУточнения);
	КонецЦикла;
	Если МассивУточнений.Количество() = 0 Тогда
		СтруктураУточнения = Новый Структура(РеквизитыУточнения + ", " + ДопРеквизитыУточнения);
		ЗаполнитьЗначенияСвойств(СтруктураУточнения, Элементы.Товары.ТекущиеДанные);
		МассивУточнений.Добавить(СтруктураУточнения);
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("ВетеринарноСопроводительныйДокумент, Продукция, КоличествоВЕТИС, ЕдиницаИзмеренияВЕТИС, ИдентификаторСтроки, ЗаписьСкладскогоЖурнала, ПредставлениеЗаписьСкладскогоЖурнала");
	ЗаполнитьЗначенияСвойств(ПараметрыФормы, Элементы.Товары.ТекущиеДанные);
	
	ПараметрыФормы.Вставить("ТоварыУточнение", МассивУточнений);
	ПараметрыФормы.Вставить("Документ",        Объект.Ссылка);
	ПараметрыФормы.Вставить("ТорговыйОбъект",  Объект.ТорговыйОбъект);
	
	Если ПараметрыУказанияСерий <> Неопределено Тогда
		ПараметрыФормы.Вставить("ПараметрыУказанияСерий", ПараметрыУказанияСерий.ТоварыУточнение);	
	КонецЕсли;
	
	НоменклатураДляВыбораТекущейСтроки = НоменклатураДляВыбора.НайтиСтроки(Новый Структура("Продукция", Элементы.Товары.ТекущиеДанные.Продукция));
	МассивНоменклатурыДляВыбора = Новый Массив;
	Для каждого ТекущаяНоменклатураДляВыбора Из НоменклатураДляВыбора Цикл
		СтруктураНоменклатурыДляВыбора = Новый Структура("Продукция, Номенклатура, Характеристика");
		ЗаполнитьЗначенияСвойств(СтруктураНоменклатурыДляВыбора, ТекущаяНоменклатураДляВыбора);
		МассивНоменклатурыДляВыбора.Добавить(СтруктураНоменклатурыДляВыбора);
	КонецЦикла;
	ПараметрыФормы.Вставить("МассивНоменклатурыДляВыбора", МассивНоменклатурыДляВыбора);
	ПараметрыФормы.Вставить("ПараметрыФункциональныхОпций", ПолучитьПараметрыФункциональныхОпцийФормы());
	
	ПараметрыФормы.Вставить("РедактированиеФормыНедоступно",РедактированиеФормыНедоступно);
	ПараметрыФормы.Вставить("ТолькоПросмотр",ТолькоПросмотр);
	
	//zorius
	ПараметрыФормы.Вставить("ДокументОснование",Объект.ДокументОснование);
	//zorius
	
	ПараметрыОповещения = Новый Структура("ИмяПоля, ИдентификаторСтроки", "ТоварыУточнение", Элементы.Товары.ТекущиеДанные.ПолучитьИдентификатор());
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ОбновитьДанные", ЭтотОбъект, ПараметрыОповещения);
	ОткрытьФорму("Документ.ВходящаяТранспортнаяОперацияВЕТИС.Форма.ТоварыУточнение", ПараметрыФормы, ЭтотОбъект,,,, ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

//&НаКлиенте
//&После("ПослеЗаписи")
//Процедура КочетовПослеЗаписи(ПараметрыЗаписи)
//	Для каждого стр из Объект.Товары цикл
//		стр.КоличествоРасхождений=стр.КоличествоВЕТИС-стр.Количество;
//	КонецЦикла;
//КонецПроцедуры

&НаКлиенте
Процедура КочетовПриОткрытииПосле(Отказ)
	
	Для каждого стр из Объект.Товары цикл
		стр.Всего=стр.КоличествоВЕТИС-стр.ВозвращаемоеКоличествоВЕТИС-стр.КоличествоРасхождений;
	КонецЦикла;
	
	//Элементы.Товары.ПодчиненныеЭлементы.ТоварыСпискомГруппаДанные.ПодчиненныеЭлементы.ТоварыКоличествоВЕТИС.Видимость=Ложь;
	//Элементы.Товары.ПодчиненныеЭлементы.ТоварыСпискомГруппаДанные.ПодчиненныеЭлементы.ТоварыКоличествоРасхождений.Видимость=Ложь;
	
КонецПроцедуры

&НаСервере
Процедура КочетовПерезаполнитьПоПоступлениюВместоНаСервере()
		
	Запрос=Новый запрос;
	Запрос.УстановитьПараметр("ДокОснТовары",Объект.ДокументОснование.Товары.выгрузить());
	Запрос.УстановитьПараметр("ВетисТовары",Объект.Товары.выгрузить());
	Запрос.Текст="ВЫБРАТЬ
	             |	ДокОснТовары.Номенклатура КАК Номенклатура,
	             |	ДокОснТовары.Количество КАК Количество
	             |ПОМЕСТИТЬ ДокОснТовары
	             |ИЗ
	             |	&ДокОснТовары КАК ДокОснТовары
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ВетисТовары.Номенклатура КАК Номенклатура,
	             |	ВетисТовары.КоличествоВЕТИС КАК КоличествоВЕТИС,
	             |	ВетисТовары.ЕдиницаИзмеренияВЕТИС КАК ЕдиницаИзмеренияВЕТИС
	             |ПОМЕСТИТЬ ВетисТовары
	             |ИЗ
	             |	&ВетисТовары КАК ВетисТовары
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ДокОснТовары.Номенклатура КАК Номенклатура,
	             |	СУММА(ДокОснТовары.Количество) КАК Количество
	             |ПОМЕСТИТЬ ДокОснТоварыСгруппированные
	             |ИЗ
	             |	ДокОснТовары КАК ДокОснТовары
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ДокОснТовары.Номенклатура
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ВетисТовары.Номенклатура КАК Номенклатура,
	             |	СУММА(ВетисТовары.КоличествоВЕТИС) КАК КоличествоВЕТИС,
	             |	ВетисТовары.ЕдиницаИзмеренияВЕТИС КАК ЕдиницаИзмеренияВЕТИС
	             |ПОМЕСТИТЬ ВетисТоварыСгруппированные
	             |ИЗ
	             |	ВетисТовары КАК ВетисТовары
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ВетисТовары.Номенклатура,
	             |	ВетисТовары.ЕдиницаИзмеренияВЕТИС
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ДокОснТоварыСгруппированные.Номенклатура КАК Номенклатура,
	             |	ДокОснТоварыСгруппированные.Количество КАК Количество,
	             |	ВетисТоварыСгруппированные.КоличествоВЕТИС КАК КоличествоВЕТИС,
	             |	ВетисТоварыСгруппированные.ЕдиницаИзмеренияВЕТИС КАК ЕдиницаИзмеренияВЕТИС,
	             |	ВЫБОР
	             |		КОГДА ВетисТоварыСгруппированные.КоличествоВЕТИС ЕСТЬ NULL
	             |			ТОГДА ИСТИНА
	             |		ИНАЧЕ ЛОЖЬ
	             |	КОНЕЦ КАК Занулить
	             |ИЗ
	             |	ВетисТоварыСгруппированные КАК ВетисТоварыСгруппированные
	             |		ЛЕВОЕ СОЕДИНЕНИЕ ДокОснТоварыСгруппированные КАК ДокОснТоварыСгруппированные
	             |		ПО (ДокОснТоварыСгруппированные.Номенклатура = ВетисТоварыСгруппированные.Номенклатура)
	             |ГДЕ
	             |	НЕ ДокОснТоварыСгруппированные.Номенклатура ЕСТЬ NULL";
		
	выборка=Запрос.Выполнить().Выбрать();
	
	Пока выборка.Следующий() Цикл
			
		//Коды ЕдИзмы: почему то замножились ЕдИзмы посему по коду.
		//кг 166
		//шт 796
		Если не (выборка.номенклатура.ЕдиницаИзмерения.код="796" и выборка.ЕдиницаИзмеренияВЕТИС.ЕдиницаИзмерения.код="166"
					или выборка.номенклатура.ЕдиницаИзмерения.код="166" и выборка.ЕдиницаИзмеренияВЕТИС.ЕдиницаИзмерения.код="166") тогда
			продолжить;
		КонецЕсли;
		
		КолвоПослеПересчетаПоНетто=выборка.Количество*выборка.номенклатура.ххх_Нетто;
		
		отборТовары=Новый структура;
		отборТовары.Вставить("номенклатура",выборка.номенклатура);

		строкиТовары=Объект.Товары.НайтиСтроки(отборТовары);
		
		Если выборка.Занулить тогда
			
			Для каждого стр из строкиТовары цикл	
				стр.ВозвращаемоеКоличествоВЕТИС=стр.КоличествоВЕТИС;
				стр.КоличествоВЕТИС=стр.ВетеринарноСопроводительныйДокумент.КоличествоВЕТИС;
				стр.Количество=0;//стр.ВетеринарноСопроводительныйДокумент.КоличествоВЕТИС;
				стр.КоличествоРасхождений=0;
				стр.ВозвращаемоеКоличествоВЕТИС=стр.Количество;
			КонецЦикла;

		КонецЕсли;
		//
		Колво=КолвоПослеПересчетаПоНетто;
		
		Дельта=Колво*строкиТовары.количество()-КолвоПослеПересчетаПоНетто;
		
		Если КолвоПослеПересчетаПоНетто>выборка.КоличествоВЕТИС и (100-выборка.КоличествоВЕТИС/КолвоПослеПересчетаПоНетто*100)>=5  Тогда
				
				Сообщить("По позиции: "+выборка.номенклатура.наименование+" количество в Нашей накладной больше чем в Ветисе/Меркурии. Необходимо: либо отказаться от данной позиции, либо исправить в поступлении количество на то количество, что в ВЕТИСе и запросить у поставщика ВСД на расхождение.");
					
				Для каждого стр из строкиТовары цикл	
					стр.ВозвращаемоеКоличествоВЕТИС=стр.КоличествоВЕТИС;
					стр.КоличествоВЕТИС=стр.ВетеринарноСопроводительныйДокумент.КоличествоВЕТИС;
					стр.Количество=стр.ВетеринарноСопроводительныйДокумент.КоличествоВЕТИС;
					стр.КоличествоРасхождений=0;
				КонецЦикла;
				
				продолжить;
				
		ИначеЕсли КолвоПослеПересчетаПоНетто>выборка.КоличествоВЕТИС и (100-выборка.КоличествоВЕТИС/КолвоПослеПересчетаПоНетто*100)<5  Тогда
			
			Для каждого стр из строкиТовары цикл	
				стр.ВозвращаемоеКоличествоВЕТИС=0;
				стр.КоличествоВЕТИС=стр.ВетеринарноСопроводительныйДокумент.КоличествоВЕТИС;
				стр.Количество=КолвоПослеПересчетаПоНетто;
				стр.КоличествоРасхождений=-КолвоПослеПересчетаПоНетто+выборка.КоличествоВЕТИС;
			КонецЦикла;
				
			продолжить;
			
		КонецЕсли;
		//
		КоличествоВЕТИС=выборка.КоличествоВЕТИС;
		Для каждого стр из строкиТовары цикл
							
			//Если КолвоПослеПересчетаПоНетто>стр.КоличествоВЕТИС и стр.КоличествоВЕТИС/КолвоПослеПересчетаПоНетто<0.05 Тогда
			//	
			//	
			//	Расхождение=стр.КоличествоВЕТИС*(стр.КоличествоВЕТИС/КолвоПослеПересчетаПоНетто);	
			//	
			//	//Для каждого стр из строкиТовары цикл
			//		стр.КоличествоВЕТИС=стр.КоличествоВЕТИС-Расхождение;
			//		стр.Количество=стр.КоличествоВЕТИС;
			//		стр.ВозвращаемоеКоличествоВЕТИС=КолвоПослеПересчетаПоНетто-Расхождение;
			//	//КонецЦикла;
			//	
			//				
			//Иначе	
			//	
				//Для каждого стр из строкиТовары цикл
					//стр.ВозвращаемоеКоличествоВЕТИС=стр.КоличествоВЕТИС-КолвоПослеПересчетаПоНетто;
				//КонецЦикла;
				
			//КонецЕсли;
			
			Если стр.количество<КолвоПослеПересчетаПоНетто тогда  
				//стр.ВозвращаемоеКоличествоВЕТИС=стр.КоличествоВЕТИС-КолвоПослеПересчетаПоНетто;
				КолвоПослеПересчетаПоНетто=КолвоПослеПересчетаПоНетто-стр.количество;
			Иначе
				стр.ВозвращаемоеКоличествоВЕТИС=стр.количество-КолвоПослеПересчетаПоНетто;
				стр.всего=КолвоПослеПересчетаПоНетто;
			КонецЕсли;
				
		КонецЦикла;
	КонецЦикла;
	
	Для каждого СтрокаТовары Из Объект.Товары Цикл
		
		Если СтрокаТовары.ЕстьУточнения Тогда
			
			ОтборУточнений = Новый Структура("ИдентификаторСтроки", СтрокаТовары.ИдентификаторСтроки);
			ТоварыУточнения = Объект.ТоварыУточнение.НайтиСтроки(ОтборУточнений);
				
			дробитель=ТоварыУточнения.Количество();
			Кусок=СтрокаТовары.КоличествоВЕТИС/дробитель;
			
			флаг=ложь;
			КолвоВсего=0;
			Для каждого стр из ТоварыУточнения цикл
				
				Если стр.количествоВетис=0 Тогда 
					стр.номенклатура=СтрокаТовары.номенклатура;
					стр.количество=Кусок;
					стр.количествоВетис=Кусок;
					флаг=Истина;
				КонецЕсли;	
				
				КолвоВсего=КолвоВсего+стр.количество;
			КонецЦикла;
			
			Если флаг Тогда
				//ИтогКоличество=ТоварыУточнения.Итог("количество");
				если КолвоВсего<>СтрокаТовары.КоличествоВЕТИС Тогда
					стр=ТоварыУточнения[0];
					стр.количествоВетис=стр.количествоВетис+СтрокаТовары.КоличествоВЕТИС-КолвоВсего;
					стр.количество=стр.количествоВетис;
				КонецЕсли;
			КонецЕсли;
	
		КонецЕсли;

	КонецЦикла;
		
	ЭтаФорма.Модифицированность=истина;
	УстановитьПараметрыОбновленияСтатуса = ЭтаФорма.Модифицированность;
	ОбновитьСтатусВЕТИС(ЭтаФорма, УстановитьПараметрыОбновленияСтатуса);
КонецПроцедуры

процедура ЗаполнитьСтрокиКоличеством(строкиТовары, количествоВозврат,Знач КоличествоРасхождений=0)
	
	Для каждого стр из строкиТовары цикл	
		стр.ВозвращаемоеКоличествоВЕТИС=количествоВозврат;
	КонецЦикла;

КонецПроцедуры	

&НаКлиенте
Процедура КочетовПерезаполнитьПоПоступлениюВместо(Команда)
	
	Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		КочетовПерезаполнитьПоПоступлениюВместоНаСервере();
		Для каждого стр из Объект.Товары Цикл
			
			Если стр.Количество=0 тогда
				стр.Количество=стр.КоличествоВЕТИС;
				//р.ВозвращаемоеКоличествоВЕТИС=стр.КоличествоВЕТИС;
			КонецЕсли;

			стр.Всего=стр.КоличествоВЕТИС-стр.ВозвращаемоеКоличествоВЕТИС-стр.КоличествоРасхождений;
			
		КонецЦикла;	
	Иначе
		Сообщить("Не заполнен документ основание: поступление/возврат!");
	КонецЕсли;
	
КонецПроцедуры                                      

&НаКлиентеНаСервереБезКонтекста
&После("НастроитьЗависимыеЭлементыФормы")
Процедура КочетовНастроитьЗависимыеЭлементыФормы(Форма, ИдентификаторСтроки, СписокРеквизитов)
	
	Элементы = Форма.Элементы;
	Элементы.ТоварыКоличество.АвтоОтметкаНезаполненного=ложь;
	
КонецПроцедуры

//&НаСервере
//&После("ИнициализироватьСлужебныеРеквизитыТоваров")
//Процедура КочетовИнициализироватьСлужебныеРеквизитыТоваров()
//	Для каждого стр из Объект.Товары цикл
//		стр.КоличествоРасхождений=стр.КоличествоВЕТИС-стр.Количество;
//		стр.ПредставлениеРасхождения="";
//	КонецЦикла;
//КонецПроцедуры

//&НаКлиенте
//&После("Подключаемый_ОбновитьКоманды")
//Процедура КочетовПодключаемый_ОбновитьКоманды()
//	Для каждого стр из Объект.Товары цикл
//		стр.КоличествоРасхождений=стр.КоличествоВЕТИС-стр.Количество;
//	КонецЦикла;
//КонецПроцедуры













































