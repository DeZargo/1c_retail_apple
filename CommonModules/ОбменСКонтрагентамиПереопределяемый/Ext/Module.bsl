

////////////////////////////////////////////////////////////////////////////////
// ОбменСКонтрагентамиПереопределяемый: механизм обмена электронными документами.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Заполняет массив актуальными видами электронных документов для прикладного решения.
//
// Параметры:
//  Массив - Массив - виды актуальных ЭД.
//
Процедура ПолучитьАктуальныеВидыЭД(Массив) Экспорт
	
	ОбменСКонтрагентамиРТ.ПолучитьАктуальныеВидыЭД(Массив);
	
КонецПроцедуры

// Определяет параметры электронного документа по типу владельца.
//
// Параметры:
//  Источник - Объект, ЛюбаяСсылка - документ или справочник источника.
//  ПараметрыЭД - Структура - параметры источника, необходимых для определения
//                настроек обмена ЭД. Обязательные параметры: НаправлениеЭД, ВидЭД,
//                Контрагент, СоглашениеЭД или Организация.
//  ФорматCML - Булево - если истина, то для формирования ЭД будут использоваться схемы CML (не ФНС),
//    в параметрах должны быть указаны соответствующие виды ЭД.
//
Процедура ЗаполнитьПараметрыЭДПоИсточнику(Источник, ПараметрыЭД, ФорматCML = Ложь) Экспорт
	
	ОбменСКонтрагентамиРТ.ЗаполнитьПараметрыЭДПоИсточнику(Источник, ПараметрыЭД, ФорматCML);
	
КонецПроцедуры

// Определяет является ли документ информационной базы счет-фактурой.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка - документ информационной базы.
//  Результат - Булево - является ли документ счет-фактурой.
//
Процедура ОпределитьДокументЯвляетсяСчетомФактурой(ДокументСсылка, Результат) Экспорт
	
	ОбменСКонтрагентамиРТ.ОпределитьДокументЯвляетсяСчетомФактурой(ДокументСсылка, Результат);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Определение соответствий объектов библиотеки ЭД и прикладного решения.

// Определяет имя реквизита владельца справочника НоменклатураПоставщика.
//
// Параметры:
//  ИмяРеквизитаВладельца - строка - имя реквизита владельца.
//
Процедура ОпределитьИмяРеквизитаВладельцаНоменклатурыПоставщиков(ИмяРеквизитаВладельца) Экспорт
	
	ОбменСКонтрагентамиРТ.ОпределитьИмяРеквизитаВладельцаНоменклатурыПоставщиков(ИмяРеквизитаВладельца);
	
КонецПроцедуры

// Получает значение перечисления по имени объектов метаданных.
// 
// Параметры:
//  СоответствиеПеречислений - Соответствие - соответствие библиотечных и прикладных перечислений.
//
Процедура ПолучитьСоответствиеПеречислений(СоответствиеПеречислений) Экспорт
	
	ОбменСКонтрагентамиРТ.ПолучитьСоответствиеПеречислений(СоответствиеПеречислений);
	
КонецПроцедуры

// В процедуре указывается соответствие строковых представлений ставок НДС (используемые в БЭД)
// с прикладными значениями этих ставок.
//
// Параметры:
//   Соответствие - Соответствие - заполняемое соответствие ставок НДС.
//
// Пример:
//   Соответствие.Вставить("0",       Перечисления.СтавкиНДС.НДС0);
//   Соответствие.Вставить("10",      Перечисления.СтавкиНДС.НДС10);
//   Соответствие.Вставить("18",      Перечисления.СтавкиНДС.НДС18);
//   Соответствие.Вставить("10/110",  Перечисления.СтавкиНДС.НДС10_110);
//   Соответствие.Вставить("18/118",  Перечисления.СтавкиНДС.НДС18_118);
//   Соответствие.Вставить("20",      Перечисления.СтавкиНДС.НДС20);
//   Соответствие.Вставить("20/120",  Перечисления.СтавкиНДС.НДС20_120);
//   Соответствие.Вставить("без НДС", Перечисления.СтавкиНДС.БезНДС);
//
Процедура ЗаполнитьСоответствиеСтавокНДС(Соответствие) Экспорт
	
	ОбменСКонтрагентамиРТ.ЗаполнитьСоответствиеСтавокНДС(Соответствие);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Настройка обмена ЭД.

// Процедура возвращает признак использования справочника Партнеров в качестве
// дополнительной аналитики к справочнику Контрагенты.
//
// Параметры:
//  ИспользуетсяСправочникПартнеры - Булево - флаг использования в библиотеке справочника Партнеры.
//
Процедура ДополнительнаяАналитикаКонтрагентовСправочникПартнеры(ИспользуетсяСправочникПартнеры) Экспорт
	
	ОбменСКонтрагентамиРТ.ДополнительнаяАналитикаКонтрагентовСправочникПартнеры(ИспользуетсяСправочникПартнеры);
	
КонецПроцедуры

// Процедура возвращает признак использования справочника "Характеристики номенклатуры" в качестве
// дополнительной аналитики к справочнику Номенклатура.
//
// Параметры:
//  ИспользуетсяСправочникХарактеристикиНоменклатуры - Булево - флаг использования справочника "Характеристики номенклатуры".
//
Процедура ДополнительнаяАналитикаСправочникХарактеристикиНоменклатуры(ИспользуетсяСправочникХарактеристикиНоменклатуры) Экспорт
	
	ОбменСКонтрагентамиРТ.ДополнительнаяАналитикаСправочникХарактеристикиНоменклатуры(ИспользуетсяСправочникХарактеристикиНоменклатуры);
	
КонецПроцедуры

// Процедура возвращает признак использования справочника "Упаковка номенклатуры" в качестве
// дополнительной аналитики к справочнику Номенклатура.
//
// Параметры:
//  ИспользуетсяСправочникУпаковкиНоменклатуры - Булево - флаг использования справочника "Упаковки номенклатуры".
//
Процедура ДополнительнаяАналитикаСправочникУпаковкиНоменклатуры(ИспользуетсяСправочникУпаковкиНоменклатуры) Экспорт
	
	ОбменСКонтрагентамиРТ.ДополнительнаяАналитикаСправочникУпаковкиНоменклатуры(ИспользуетсяСправочникУпаковкиНоменклатуры);
	
КонецПроцедуры

// Заполняет список команд ЭДО в прикладном решении.
// 
// Параметры:
//  СоставКомандЭДО - Структура - структура состава команд ЭДО.
//    Исходящие - Массив - состав объектов, например "Документ.РеализацияТоваровУслуг".
//    Входящие - Массив - состав объектов.
//    БезПодписи - Массив - состав объектов для обмена без ЭП.
//    Интеркампани - Массив - состав объектов Интеркампани.
//
Процедура ПодготовитьСтруктуруОбъектовКомандЭДО(СоставКомандЭДО) Экспорт
	
	ОбменСКонтрагентамиРТ.ПодготовитьСтруктуруОбъектовКомандЭДО(СоставКомандЭДО);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Формирование данных для электронных документов.

// Работа с деревом данных ФНС.

// Подготавливает данные для электронного документа типа УПД (информация продавца).
//
// Параметры:
//  СсылкаНаОбъект - ДокументСсылка - ссылка на объект информационной базы, по которому необходимо 
//                                    создать электронный документ.
//  СтруктураЭД - Структура - структура данных для формирования электронного документа.
//  ДеревоДанных - ДеревоЗначений - дерево данных заполнения электронного документа.
//  Отказ - Булево - если нужно отказаться от создания электронного документа, необходимо установить значение в Истина.
//                   После этого дальнейшие действия по формированию документа производиться не будут, поэтому
//                   нужно сформировать сообщения пользователю при необходимости самостоятельно.
//
Процедура ЗаполнитьДанныеДляУПДИнформацияПродавцаФНС(СсылкаНаОбъект, СтруктураЭД, ДеревоДанных, Отказ) Экспорт
	
	ОбменСКонтрагентамиРТ.ЗаполнитьДанныеДляУПДИнформацияПродавцаФНС(СсылкаНаОбъект, СтруктураЭД, ДеревоДанных, Отказ);
	
КонецПроцедуры

// Подготавливает данные для электронного документа типа УПД (информация продавца).
//
// Параметры:
//  СсылкаНаОбъект - ДокументСсылка - ссылка на объект информационной базы, по которому необходимо 
//                                    создать электронный документ.
//  СтруктураЭД - Структура - структура данных для формирования электронного документа.
//  ДеревоДанных - ДеревоЗначений - дерево данных заполнения электронного документа.
//  Отказ - Булево - если нужно отказаться от создания электронного документа, необходимо установить значение в Истина.
//                   После этого дальнейшие действия по формированию документа производиться не будут, поэтому
//                   нужно сформировать сообщения пользователю при необходимости самостоятельно.
//
Процедура ЗаполнитьДанныеДляДОПИнформацияПродавцаФНС(СсылкаНаОбъект, СтруктураЭД, ДеревоДанных, Отказ) Экспорт
	
	ОбменСКонтрагентамиРТ.ЗаполнитьДанныеДляДОПИнформацияПродавцаФНС(СсылкаНаОбъект, СтруктураЭД, ДеревоДанных, Отказ);
	
КонецПроцедуры

// Подготавливает данные для электронного документа типа УПД (информация покупателя).
//
// Параметры:
//  СсылкаНаЭД - Ссылка - ссылка на ЭД, по которому необходимо сформировать электронный документ.
//  СтруктураЭД - Структура - структура данных для формирования электронного документа.
//  ДеревоДанных - ДеревоЗначений - дерево данных заполнения электронного документа.
//  Отказ - Булево - если нужно отказаться от создания электронного документа, необходимо установить значение в Истина.
//                   После этого дальнейшие действия по формированию документа производиться не будут, поэтому
//                   нужно сформировать сообщения пользователю при необходимости самостоятельно.
//
Процедура ЗаполнитьДанныеДляУПДИнформацииПокупателяФНС(СсылкаНаЭД, СтруктураЭД, ДеревоДанных, Отказ) Экспорт
	
	ОбменСКонтрагентамиРТ.ЗаполнитьДанныеДляУПДИнформацииПокупателяФНС(СсылкаНаЭД, СтруктураЭД, ДеревоДанных, Отказ);
	
КонецПроцедуры

// Подготавливает данные для электронного документа типа УПД (информация продавца).
//
// Параметры:
//  СсылкаНаОбъект - ДокументСсылка - ссылка на объект информационной базы, по которому необходимо 
//                                    создать электронный документ.
//  СтруктураЭД - Структура - структура данных для формирования электронного документа.
//  ДеревоДанных - ДеревоЗначений - дерево данных заполнения электронного документа.
//  Отказ - Булево - если нужно отказаться от создания электронного документа, необходимо установить значение в Истина.
//                   После этого дальнейшие действия по формированию документа производиться не будут, поэтому
//                   нужно сформировать сообщения пользователю при необходимости самостоятельно.
//
Процедура ЗаполнитьДанныеДляСЧФИнформацияПродавцаФНС(СсылкаНаОбъект, СтруктураЭД, ДеревоДанных, Отказ) Экспорт
	
	ОбменСКонтрагентамиРТ.ЗаполнитьДанныеДляСЧФИнформацияПродавцаФНС(СсылкаНаОбъект, СтруктураЭД, ДеревоДанных, Отказ);
	
КонецПроцедуры

// Подготавливает данные для электронного документа типа УКД (информация продавца).
//
// Параметры:
//  СсылкаНаОбъект - ДокументСсылка - ссылка на объект информационной базы, по которому необходимо
//                                    создать электронный документ.
//  СтруктураЭД - Структура - структура данных для формирования электронного документа.
//  ДеревоДанных - ДеревоЗначений - дерево данных заполнения электронного документа.
//  Отказ - Булево - если нужно отказаться от создания электронного документа, необходимо установить значение в Истина.
//                   После этого дальнейшие действия по формированию документа производиться не будут, поэтому
//                   нужно сформировать сообщения пользователю при необходимости самостоятельно.
//
Процедура ЗаполнитьДанныеДляУКДИнформацияПродавцаФНС(СсылкаНаОбъект, СтруктураЭД, ДеревоДанных, Отказ) Экспорт
	
КонецПроцедуры

// Подготавливает данные для электронного документа типа УКД (информация продавца).
//
// Параметры:
//  СсылкаНаОбъект - ДокументСсылка - ссылка на объект информационной базы, по которому необходимо
//                                    создать электронный документ.
//  СтруктураЭД - Структура - структура данных для формирования электронного документа.
//  ДеревоДанных - ДеревоЗначений - дерево данных заполнения электронного документа.
//  Отказ - Булево - если нужно отказаться от создания электронного документа, необходимо установить значение в Истина.
//                   После этого дальнейшие действия по формированию документа производиться не будут, поэтому
//                   нужно сформировать сообщения пользователю при необходимости самостоятельно.
//
Процедура ЗаполнитьДанныеДляДИСИнформацияПродавцаФНС(СсылкаНаОбъект, СтруктураЭД, ДеревоДанных, Отказ) Экспорт
	
КонецПроцедуры

// Подготавливает данные для электронного документа типа УКД (информация покупателя).
//
// Параметры:
//  СсылкаНаЭД - Ссылка - ссылка на ЭД, по которому необходимо сформировать электронный документ.
//  СтруктураЭД - Структура - структура данных для формирования электронного документа.
//  ДеревоДанных - ДеревоЗначений - дерево данных заполнения электронного документа.
//  Отказ - Булево - если нужно отказаться от создания электронного документа, необходимо установить значение в Истина.
//                   После этого дальнейшие действия по формированию документа производиться не будут, поэтому
//                   нужно сформировать сообщения пользователю при необходимости самостоятельно.
//
Процедура ЗаполнитьДанныеДляУКДИнформацииПокупателяФНС(СсылкаНаЭД, СтруктураЭД, ДеревоДанных, Отказ) Экспорт
	
КонецПроцедуры

// Подготавливает данные для электронного документа типа УКД (информация продавца).
//
// Параметры:
//  СсылкаНаОбъект - ДокументСсылка - ссылка на объект информационной базы, по которому необходимо
//                                    создать электронный документ.
//  СтруктураЭД - Структура - структура данных для формирования электронного документа.
//  ДеревоДанных - ДеревоЗначений - дерево данных заполнения электронного документа.
//  Отказ - Булево - если нужно отказаться от создания электронного документа, необходимо установить значение в Истина.
//                   После этого дальнейшие действия по формированию документа производиться не будут, поэтому
//                   нужно сформировать сообщения пользователю при необходимости самостоятельно.
//
Процедура ЗаполнитьДанныеДляКСЧФИнформацияПродавцаФНС(СсылкаНаОбъект, СтруктураЭД, ДеревоДанных, Отказ) Экспорт
	
КонецПроцедуры

// Подготавливает данные для электронного документа типа Торг12 титул покупателя.
//
// Параметры:
//  СсылкаНаЭД - Ссылка - ссылка на ЭД, по которому необходимо сформировать электронный документ.
//  СтруктураЭД - Структура - структура данных для формирования электронного документа.
//  ДеревоДанных - ДеревоЗначений - дерево данных заполнения электронного документа.
//  Отказ - Булево - если нужно отказаться от создания электронного документа, необходимо установить значение в Истина.
//                   После этого дальнейшие действия по формированию документа производиться не будут, поэтому
//                   нужно сформировать сообщения пользователю при необходимости самостоятельно.
//
Процедура ЗаполнитьДанныеПоТорг12ПокупательФНС(СсылкаНаЭД, СтруктураЭД, ДеревоДанных, Отказ) Экспорт
	
	ОбменСКонтрагентамиРТ.ЗаполнитьДанныеПоТорг12ПокупательФНС(СсылкаНаЭД, СтруктураЭД, ДеревоДанных, Отказ);
	
КонецПроцедуры

// Подготавливает данные титула заказчика для электронного документа типа Акт выполненных работ формата 5.01.
//
// Параметры:
//  СсылкаНаЭД - Ссылка - ссылка на ЭД, по которому необходимо сформировать электронный документ.
//  СтруктураЭД - Структура - структура данных для формирования электронного документа.
//  ДеревоДанных - ДеревоЗначений - дерево данных заполнения электронного документа.
//  Отказ - Булево - если нужно отказаться от создания электронного документа, необходимо установить значение в Истина.
//                   После этого дальнейшие действия по формированию документа производиться не будут, поэтому
//                   нужно сформировать сообщения пользователю при необходимости самостоятельно.
//
Процедура ЗаполнитьДанныеПоАкт501ЗаказчикФНС(СсылкаНаЭД, СтруктураЭД, ДеревоДанных, Отказ) Экспорт
	
	ОбменСКонтрагентамиРТ.ЗаполнитьДанныеПоАкт501ЗаказчикФНС(СсылкаНаЭД, СтруктураЭД, ДеревоДанных, Отказ);
	
КонецПроцедуры

// Подготавливает данные для электронного документа типа СоглашениеОбИзмененииСтоимостиПолучатель.
//
// Параметры:
//  СсылкаНаЭД - Ссылка - ссылка на ЭД, по которому необходимо сформировать электронный документ.
//  СтруктураЭД - Структура - структура данных для формирования электронного документа.
//  ДеревоДанных - ДеревоЗначений - дерево данных заполнения электронного документа.
//  Отказ - Булево - если нужно отказаться от создания электронного документа, необходимо установить значение в Истина.
//                   После этого дальнейшие действия по формированию документа производиться не будут, поэтому
//                   нужно сформировать сообщения пользователю при необходимости самостоятельно.
//
Процедура ЗаполнитьДанныеПоКорректировочномуДокументуПолучатель(СсылкаНаЭД, СтруктураЭД, ДеревоДанных, Отказ) Экспорт
	
КонецПроцедуры

// Подготавливает данные для электронного документа типа ПередачаТоваровПродавец.
//
// Параметры:
//  СсылкаНаОбъект - Ссылка - ссылка на ЭД, по которому необходимо сформировать электронный документ.
//  СтруктураЭД - Структура - структура данных для формирования электронного документа.
//  ДеревоДанных - ДеревоЗначений - дерево данных заполнения электронного документа.
//  Отказ - Булево - если нужно отказаться от создания электронного документа, необходимо установить значение в Истина.
//                   После этого дальнейшие действия по формированию документа производиться не будут, поэтому
//                   нужно сформировать сообщения пользователю при необходимости самостоятельно.
//
Процедура ЗаполнитьДанныеПередачаТоваровПродавец(СсылкаНаОбъект, СтруктураЭД, ДеревоДокумента, Отказ) Экспорт
	
	ОбменСКонтрагентамиРТ.ЗаполнитьДанныеПередачаТоваровПродавец(СсылкаНаОбъект, СтруктураЭД, ДеревоДокумента, Отказ);
	
КонецПроцедуры

// Подготавливает данные для электронного документа типа ПередачаРаботИсполнитель.
//
// Параметры:
//  СсылкаНаОбъект - Ссылка - ссылка на ЭД, по которому необходимо сформировать электронный документ.
//  СтруктураЭД - Структура - структура данных для формирования электронного документа.
//  ДеревоДанных - ДеревоЗначений - дерево данных заполнения электронного документа.
//  Отказ - Булево - если нужно отказаться от создания электронного документа, необходимо установить значение в Истина.
//                   После этого дальнейшие действия по формированию документа производиться не будут, поэтому
//                   нужно сформировать сообщения пользователю при необходимости самостоятельно.
//
Процедура ЗаполнитьДанныеПередачаРаботИсполнитель(СсылкаНаОбъект, СтруктураЭД, ДеревоДанных, Отказ) Экспорт
	
КонецПроцедуры

// Работа со деревом данных CML

// Подготавливает данные для электронного документа типа Реквизиты организации формата CML 2.
//
// Параметры:
//  СсылкаНаОбъект - СправочникСсылка - ссылка на объект информационной базы, по которому необходимо создать электронный документ.
//  СтруктураЭД - Структура - структура данных для формирования электронного документа.
//  ДеревоДанных - ДеревоЗначений - дерево значений, соответствующее макету РеквизитыОрганизации обработки ОбменСКонтрагентами.
//  Отказ - Булево - если нужно отказаться от создания электронного документа, необходимо установить значение в Истина.
//                   После этого дальнейшие действия по формированию документа производиться не будут, поэтому
//                   нужно сформировать сообщения пользователю при необходимости самостоятельно.
//
Процедура ЗаполнитьДанныеРеквизитыОрганизации(СсылкаНаОбъект, СтруктураЭД, ДеревоДанных, Отказ) Экспорт

КонецПроцедуры

// Подготавливает данные для электронного документа типа КаталогТоваров формата CML 2.
//
// Параметры:
//  Организация - СправочникСсылка - ссылка на объект информационной базы, по которому необходимо
//                                   создать электронный документ.
//  ТоварыКаталога - Массив - список товаров для заполнения каталога.
//  ДеревоДанных - ДеревоЗначений - дерево данных заполнения электронного документа.
//  Отказ - Булево - если нужно отказаться от создания электронного документа, необходимо установить значение в Истина.
//                   После этого дальнейшие действия по формированию документа производиться не будут, поэтому
//                   нужно сформировать сообщения пользователю при необходимости самостоятельно.
//
Процедура ЗаполнитьДанныеПоКаталогуТоваровCML(Организация, ТоварыКаталога, ДеревоДанных, Отказ) Экспорт
	
	ОбменСКонтрагентамиРТ.ЗаполнитьДанныеПоКаталогуТоваровCML(Организация, ТоварыКаталога, ДеревоДанных, Отказ);
	
КонецПроцедуры

// Подготавливает данные для электронного документа типа ПрайсЛист формата CML 2.
//
// Параметры:
//  СсылкаНаОбъект - ДокументСсылка - ссылка на объект информационной базы, по которому необходимо создать электронный документ.
//  СтруктураЭД - Структура - структура данных для формирования электронного документа.
//  ДеревоДокумента - ДеревоЗначений - Дерево значений, соответствующее макету ПрайсЛист обработки ОбменСКонтрагентами.
//  Отказ - Булево - если нужно отказаться от создания электронного документа, необходимо установить значение в Истина.
//                   После этого дальнейшие действия по формированию документа производиться не будут, поэтому
//                   нужно сформировать сообщения пользователю при необходимости самостоятельно.
//
Процедура ЗаполнитьДанныеПоПрайсЛисту(СсылкаНаОбъект, СтруктураЭД, ДеревоДокумента, Отказ) Экспорт
	
КонецПроцедуры

// Подготавливает данные для электронного документа типа Счет формата CML 2.
//
// Параметры:
//  СсылкаНаОбъект - ДокументСсылка - ссылка на объект информационной базы, по которому необходимо создать электронный документ.
//  СтруктураЭД - Структура - структура данных для формирования электронного документа.
//  ДеревоДокумента - ДеревоЗначений - дерево значений, соответствующее макету СчетНаОплату обработки ОбменСКонтрагентами.
//  Отказ - Булево - если нужно отказаться от создания электронного документа, необходимо установить значение в Истина.
//                   После этого дальнейшие действия по формированию документа производиться не будут, поэтому
//                   нужно сформировать сообщения пользователю при необходимости самостоятельно.
//
Процедура ЗаполнитьДанныеПоСчету(СсылкаНаОбъект, СтруктураЭД, ДеревоДокумента, Отказ) Экспорт
	
КонецПроцедуры

// Подготавливает данные для электронного документа типа ЗаказТоваров формата CML 2.
//
// Параметры:
//  СсылкаНаОбъект - ДокументСсылка - ссылка на объект информационной базы, по которому необходимо создать электронный документ.
//  СтруктураЭД - Структура - структура данных для формирования электронного документа.
//  ДеревоДокумента - ДеревоЗначений - дерево значений, соответствующее макету ЗаказТовара обработки ОбменСКонтрагентами.
//  Отказ - Булево - если нужно отказаться от создания электронного документа, необходимо установить значение в Истина.
//                   После этого дальнейшие действия по формированию документа производиться не будут, поэтому
//                   нужно сформировать сообщения пользователю при необходимости самостоятельно.
//
Процедура ЗаполнитьДанныеПоЗаказуТоваров(СсылкаНаОбъект, СтруктураЭД, ДеревоДокумента, Отказ) Экспорт
	
	ОбменСКонтрагентамиРТ.ЗаполнитьДанныеПоЗаказуТоваров(СсылкаНаОбъект, СтруктураЭД, ДеревоДокумента, Отказ);
	
КонецПроцедуры

// Подготавливает данные для электронного документа типа ОтветНаЗаказ формата CML 2.
//
// Параметры:
//  СсылкаНаОбъект - ДокументСсылка - ссылка на объект информационной базы, по которому необходимо создать электронный документ.
//  СтруктураЭД - Структура - структура данных для формирования электронного документа.
//  ДеревоДокумента - ДеревоЗначений - дерево значений, соответствующее макету ОтветНаЗаказ обработки ОбменСКонтрагентами.
//  Отказ - Булево - если нужно отказаться от создания электронного документа, необходимо установить значение в Истина.
//                   После этого дальнейшие действия по формированию документа производиться не будут, поэтому
//                   нужно сформировать сообщения пользователю при необходимости самостоятельно.
//
Процедура ЗаполнитьДанныеПоОтветуНаЗаказ(СсылкаНаОбъект, СтруктураЭД, ДеревоДокумента, Отказ) Экспорт
	
КонецПроцедуры

// Подготавливает данные для электронного документа типа ОтчетКомитенту формата CML 2.
//
// Параметры:
//  СсылкаНаОбъект - ДокументСсылка - ссылка на объект информационной базы, по которому необходимо создать электронный документ.
//  СтруктураЭД - Структура - структура данных для формирования электронного документа.
//    Параметр ДополнительныеРеквизитыДляТаблицыТоваров в общей структуре параметров предназначен для заполнения
//    колонки ДополнительныеРеквизиты в таблице товаров.
//  ДеревоДокумента - ДеревоЗначений - дерево значений, соответствующее макету ОтчетКомиссионераОПродажах обработки ОбменСКонтрагентами.
//  Отказ - Булево - если нужно отказаться от создания электронного документа, необходимо установить значение в Истина.
//                   После этого дальнейшие действия по формированию документа производиться не будут, поэтому
//                   нужно сформировать сообщения пользователю при необходимости самостоятельно.
//
Процедура ЗаполнитьДанныеПоОтчетуОПродажахКомиссионногоТовара(СсылкаНаОбъект, СтруктураЭД, ДеревоДокумента, Отказ) Экспорт
	
	ОбменСКонтрагентамиРТ.ЗаполнитьДанныеПоОтчетуОПродажахКомиссионногоТовара(СсылкаНаОбъект, СтруктураЭД, ДеревоДокумента, Отказ);
	
КонецПроцедуры

// Подготавливает данные для электронного документа типа ОтчетКомитентуОСписании формата CML 2.
//
// Параметры:
//  СсылкаНаОбъект - ДокументСсылка - ссылка на объект информационной базы, по которому необходимо создать электронный документ.
//  СтруктураЭД - Структура - структура данных для формирования электронного документа.
//  ДеревоДокумента - ДеревоЗначений - дерево значений, соответствующее макету ОтчетКомиссионераОСписании обработки ОбменСКонтрагентами.
//  Отказ - Булево - если нужно отказаться от создания электронного документа, необходимо установить значение в Истина.
//                   После этого дальнейшие действия по формированию документа производиться не будут, поэтому
//                   нужно сформировать сообщения пользователю при необходимости самостоятельно.
//
Процедура ЗаполнитьДанныеПоОтчетуОСписанииКомиссионногоТовара(СсылкаНаОбъект, СтруктураЭД, ДеревоДокумента, Отказ) Экспорт
	
	ОбменСКонтрагентамиРТ.ЗаполнитьДанныеПоОтчетуОСписанииКомиссионногоТовара(СсылкаНаОбъект, СтруктураЭД, ДеревоДокумента, Отказ);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Поиск и создание документов
// Сохраняет данные из электронного документа в объект ИБ.
//
// Параметры:
//  СтрокаДляЗагрузки - Строка - параметры для загрузки.
//  ДеревоРазбора     - ДеревоЗначений - структура параметров документа ИБ.
//  ПараметрыОбработки - Структура - дополнительные параметры для обработки объекта.
//    См. ОбменСКонтрагентамиСлужебный.НовыеПараметрыОбработкиСохранитьДанныеОбъектаВБД.
//    * СсылкаНаВладельца - ДокументСсылка - владелец электронного документа (передается при перезаполнении уже
//                                           существующего документа учета). Необязательный.
//    * Записывать - Булево - если Истина, то объект должен быть записан. По умолчанию Истина.
//    * СпособОбработки - Строка - способ сохранения данных в информационной базе. Необязательный.
//      См. ОбменСКонтрагентамиПереопределяемый.СписокОперацийВидаЭД,
//      См. ОбменСКонтрагентамиПереопределяемый.ПриОпределенииСпособовОбработкиПрикладногоВидаЭлектронногоДокумента.
//  НайденныйОбъект - Произвольный - созданный объект.
//
// Возвращаемое значение:
//  НайденныйОбъект - ссылка на объект.
//
Процедура СохранитьДанныеОбъектаВБД(СтрокаДляЗагрузки, ДеревоРазбора, ПараметрыОбработки = Неопределено,
	НайденныйОбъект = Неопределено) Экспорт
	
	ОбменСКонтрагентамиРТ.СохранитьДанныеОбъектаВБД(СтрокаДляЗагрузки, ДеревоРазбора, ПараметрыОбработки, НайденныйОбъект);
	
КонецПроцедуры

// Поиск и создание документа передачи товаров.
//
// Параметры:
//  ДеревоДанных		 - ДеревоЗначений - дерево данных электронного документа.
//  СсылкаНаВладельца	 - ДокументСсылка - ссылка на документ учета.
//  Записывать			 - Булево - признак записи документа.
//  СпособОбработки		 - Строка - способ сохранения данных в информационной базе.
//
Процедура НайтиСоздатьДокументПередачаТоваров(ДеревоДанных, СсылкаНаВладельца, Записывать = Истина, СпособОбработки = "") Экспорт
	
	ОбменСКонтрагентамиРТ.НайтиСоздатьДокументПередачаТоваров(ДеревоДанных, СсылкаНаВладельца, Записывать, СпособОбработки);
	
КонецПроцедуры

// Поиск и создание документа передачи результатов работ.
//
// Параметры:
//  ДеревоДанных		 - ДеревоЗначений - дерево данных электронного документа.
//  СсылкаНаВладельца	 - ДокументСсылка - ссылка на документ учета.
//  Записывать			 - Булево - признак записи документа.
//  СпособОбработки		 - Строка - способ сохранения данных в информационной базе.
//
Процедура НайтиСоздатьДокументПередачаРезультатовРабот(ДеревоДанных, СсылкаНаВладельца, Записывать = Истина, СпособОбработки = "") Экспорт
	
КонецПроцедуры

// Сохраняет данные из электронного документа в объекты ИБ.
//
// Параметры:
//  ДеревоДанных - ДеревоЗначений - структура параметров документа ИБ.
//  СсылкиНаВладельцев - Массив - документы информационной базы, созданные ранее по входящему электронному документу.
//  Записывать - Булево - признак необходимости записывать объект ИБ.
//  СпособОбработки - Структура - способы сохранения данных в информационной базе.
//     * ПервичныйДокумент - Строка - способ сохранения первичного документа.
//     * СчетФактура       - Строка - способ сохранения счета-фактуры.
//  ОписаниеОшибки - Строка - описание ошибки создания учетного документа.
//
Процедура НайтиСоздатьУниверсальныйПередаточныйДокумент(ДеревоДанных, СсылкиНаВладельцев = Неопределено,
	Записывать = Истина, СпособОбработки = Неопределено, ОписаниеОшибки = "") Экспорт
	
	ОбменСКонтрагентамиРТ.НайтиСоздатьУниверсальныйПередаточныйДокумент(ДеревоДанных, СсылкиНаВладельцев, Записывать, СпособОбработки, ОписаниеОшибки);
	
КонецПроцедуры

// Сохраняет данные из электронного документа в объекты ИБ.
//
// Параметры:
//  ДеревоДанных - ДеревоЗначений - структура параметров документа ИБ.
//  СсылкаНаВладельца - Ссылка - ссылка на объект ИБ, владельца электронного документа.
//  Записывать - Булево - признак необходимости записывать объект ИБ.
//  СпособОбработки - Строка - способ сохранения данных в информационной базе.
//  ОписаниеОшибки - Строка - описание ошибки создания учетного документа.
//
Процедура НайтиСоздатьУПДДокументОПередаче(ДеревоДанных, СсылкаНаВладельца = Неопределено, Записывать = Истина, СпособОбработки = "", ОписаниеОшибки = "") Экспорт
	
	ОбменСКонтрагентамиРТ.НайтиСоздатьУПДДокументОПередаче(ДеревоДанных, СсылкаНаВладельца, Записывать, СпособОбработки, ОписаниеОшибки);
	
КонецПроцедуры

// Сохраняет данные из электронного документа в объекты ИБ.
//
// Параметры:
//  ДеревоДанных - ДеревоЗначений - структура параметров документа ИБ.
//  СсылкаНаВладельца - Ссылка - ссылка на объект ИБ, владельца электронного документа.
//  Записывать - Булево - признак необходимости записывать объект ИБ.
//  СпособОбработки - Строка - способ сохранения данных в информационной базе.
//  ОписаниеОшибки - Строка - описание ошибки создания учетного документа.
//
Процедура НайтиСоздатьУПДСчетФактуру(ДеревоДанных, СсылкаНаВладельца = Неопределено, Записывать = Истина, СпособОбработки = "", ПервичныйДокумент, ОписаниеОшибки = "") Экспорт
	
	ОбменСКонтрагентамиРТ.НайтиСоздатьУПДСчетФактуру(ДеревоДанных, СсылкаНаВладельца, Записывать, СпособОбработки, ПервичныйДокумент, ОписаниеОшибки);
	
КонецПроцедуры

// Сохраняет данные из электронного документа в объекты ИБ.
//
// Параметры:
//  ДеревоДанных - ДеревоЗначений - структура параметров документа ИБ.
//  СсылкиНаВладельцев - Массив - документы информационной базы, созданные ранее по входящему электронному документу.
//  Записывать - Булево - признак необходимости записывать объект ИБ.
//  СпособОбработки - Структура - способы сохранения данных в информационной базе.
//     * ПервичныйДокумент - Строка - способ сохранения первичного документа.
//     * СчетФактура       - Строка - способ сохранения счета-фактуры.
//
Процедура НайтиСоздатьУниверсальныйКорректировочныйДокумент(ДеревоДанных, СсылкиНаВладельцев = Неопределено,
	Записывать = Истина, СпособОбработки  = Неопределено) Экспорт
	
КонецПроцедуры

// Сохраняет данные из электронного документа в объекты ИБ.
//
// Параметры:
//  ДеревоДанных - ДеревоЗначений - структура параметров документа ИБ.
//  СсылкаНаВладельца - Ссылка - ссылка на объект ИБ, владельца электронного документа.
//  Записывать - Булево - признак необходимости записывать объект ИБ.
//  СпособОбработки - Строка - способ сохранения данных в информационной базе.
//
Процедура НайтиСоздатьУКДДокументОбИзмененииСтоимости(ДеревоДанных, СсылкаНаВладельца = Неопределено, Записывать = Истина, СпособОбработки = "") Экспорт
	
КонецПроцедуры

// Сохраняет данные из электронного документа в объекты ИБ.
//
// Параметры:
//  ДеревоДанных - ДеревоЗначений - структура параметров документа ИБ.
//  СсылкаНаВладельца - Ссылка - ссылка на объект ИБ, владельца электронного документа.
//  Записывать - Булево - признак необходимости записывать объект ИБ.
//  СпособОбработки - Строка - способ сохранения данных в информационной базе.
//
Процедура НайтиСоздатьУКДСчетФактуру(ДеревоДанных, СсылкаНаВладельца = Неопределено, Записывать = Истина, СпособОбработки = "") Экспорт
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Создание элементов справочников.

// Создает объект в ИБ по дереву параметров и помещает ссылку на него в "НовыйЭлемент".
//
// Параметры:
//  СтрокаОбъекта - Структура - параметры записываемого объекта.
//  ДеревоРазбора - ДеревоЗначений - результат разбора электронного документа.
//  НовыйЭлемент - СправочникСсылка - в этот параметр необходимо вернуть ссылку на созданный элемент справочника.
//
Процедура СоздатьОбъектВБД(СтрокаОбъекта, ДеревоРазбора, НовыйЭлемент) Экспорт
	
	ОбменСКонтрагентамиРТ.СоздатьОбъектВБД(СтрокаОбъекта, ДеревоРазбора, НовыйЭлемент);
	
КонецПроцедуры

// Поиска элемента справочника по реквизитам ИНН и КПП.
//
// Параметры:
//  ТипОбъекта - Строка - имя справочника в метаданных.
//  ИНН - Строка - ИНН.
//  КПП - Строка - КПП.
//  Организация - СправочникСсылка - ссылка на элемент справочника организации.
//  Ссылка - СправочникСсылка - Ссылка на найденный объект.
//
Процедура СсылкаНаОбъектПоИННКПП(ТипОбъекта, ИНН, КПП, Ссылка, Организация = Неопределено) Экспорт
	
	ОбменСКонтрагентамиРТ.СсылкаНаОбъектПоИННКПП(ТипОбъекта, ИНН, КПП, Ссылка, Организация);
	
КонецПроцедуры

// Заполняет реквизиты объекта данными из структуры реквизитов.
//
// Параметры:
//  СтруктураРеквизитов - структура - перечень значений реквизитов.
//  КонтрагентСсылка    - СправочникСсылка.Контрагенты - ссылка на контрагента, которого нужно заполнить.
//
Процедура ЗаполнитьРеквизитыКонтрагента(СтруктураРеквизитов, КонтрагентСсылка) Экспорт
	
КонецПроцедуры

// Заполняет структуру реквизитов товара.
//
// Параметры:
//  РеквизитыНоменклатуры - Структура - параметры поиска.
//  СтруктураВозврата - Структура - содержит ссылки на номенклатуру, характеристику, упаковку.
//  ИД - Строка - идентификатор обмена ЭД.
//
Процедура ПолучитьРеквизитыТовара(РеквизитыНоменклатуры, СтруктураВозврата, ИД = Неопределено) Экспорт
	
КонецПроцедуры

// Заполняет ИД контрагента.
//
// Параметры:
//  Контрагент - ОпределяемыйТип.Контрагент - ссылка на контрагента (Организация или Контрагент).
//  ВидКонтрагента - Строка - вид контрагента.
//  ИдКонтрагента - Строка - значение ИдКонтрагента.
//
Процедура ПолучитьИДКонтрагента(Контрагент, ВидКонтрагента, ИдКонтрагента) Экспорт
	
	ОбменСКонтрагентамиРТ.ПолучитьИДКонтрагента(Контрагент, ВидКонтрагента, ИдКонтрагента);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Получение данных для формирования электронных документов.

// Получает значение перечисления по имени перечисления и представлению в библиотеке.
// 
// Параметры:
//  ИмяПеречисления - Строка - наименование перечисления.
//  ПредставлениеПеречисления - Строка - наименование значения перечисления.
//  НайденноеЗначение - ПеречислениеСсылка - значение искомого перечисления.
//
Процедура ПолучитьЗначениеПеречисления(ИмяПеречисления, ПредставлениеПеречисления, НайденноеЗначение) Экспорт
	
КонецПроцедуры

// Получает данные свидетельства о регистрации ИП по ссылке.
//
// Параметры:
//  ИП - СправочникСсылка - источник, по которому нужно получить данные;
//  Сведения - Строка - сведения о регистрации индивидуального предпринимателя.
//
Процедура ДанныеСвидетельстваОРегистрацииИП(ИП, Сведения) Экспорт
	
КонецПроцедуры

// Получение контактной информации организации по ссылке.
//
// Параметры:
//  Организация - Ссылка - элемент справочника Организации, по которому нужно получить данные.
//  ТаблицаКонтактов - ТаблицаЗначений - контактная информация по организации.
//
Процедура ПолучитьКонтактнуюИнформацию(Организация, ТаблицаКонтактов) Экспорт
	
КонецПроцедуры

// Заполняет "НазваниеРегиона" по "КодРегиона".
//
// Параметры:
//  КодРегиона - Строка - строка, содержащая двухсимвольный код региона.
//  НазваниеРегиона - Строка - наименование региона.
//
Процедура НазваниеРегиона(КодРегиона, НазваниеРегиона) Экспорт
	
КонецПроцедуры

// Получает адрес электронной почты контрагента.
//
// Параметры:
//  Контрагент - СправочникСсылка - ссылка на элемент справочника контрагенты, адрес которого надо получить.
//  АдресЭП - Строка - адрес электронной почты.
//
Процедура АдресЭлектроннойПочтыКонтрагента(Контрагент, АдресЭП) Экспорт
		
КонецПроцедуры

// Получает банковские счета.
//
// Параметры:
//  Организация - СправочникСсылка.Организация - ссылка на организацию.
//  Банк - СправочникСсылка - ссылка на элемент справочника с банками.
//  Таблица - ТаблицаЗначений - таблица значений с перечнем банковских счетов.
//
Процедура ПолучитьБанковскиеСчета(Организация, Таблица, Банк = Неопределено) Экспорт
	
КонецПроцедуры

// Получает банковские реквизиты.
//
// Параметры:
//  МассивСчетов - массив - список банковских счетов.
//  Таблица - ТаблицаЗначений - перечень банковских реквизитов. Должна содержать следующие колонки:
//    * Ссылка - Ссылка - ссылка на банковский счет.
//    * РасчетныйСчет - Строка - номер расчетного счета.
//    * КорреспондентскийСчет - Строка - номер корреспондентского счета.
//    * БИК - Строка - БИК банка.
//    * Банк - Ссылка - ссылка на банк.
//    * БанкДляРасчетов - Ссылка - ссылка на банк для расчетов.
//    * БанкДляРасчетовБИК - БИК банка для расчетов.
//    * БанкДляРасчетовКоррСчет - Строка - корреспондентский счет банка для расчетов.
//
Процедура ПолучитьБанковскиеРеквизиты(МассивСчетов, Таблица) Экспорт
	
КонецПроцедуры

// В процедуре выполняется заполнение реквизитов (дата выставления, признак выставления,
// дата получения, признак получения) документов счета-фактуры, по ключевым событиям,
// описанным в приказе от 25 апреля 2011 г. N 50н.: получение ПДО, ПДП, ИП, ПДОИП.
//
// Параметры:
//  ВладелецЭД - документ-ссылка, ссылка на документ ИБ счет-фактура выданный/полученный.
//  ЭД - справочник-ссылка, ссылка на элемент справочника ЭДПрисоединенныеФайлы.
//
Процедура ЗаполнитьРеквизитыЭСФ(ВладелецЭД, ЭД) Экспорт
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// Просмотр электронных документов.

// Формирует текст НДС по этапу оплаты.
//
// Параметры:
//  СоответствиеСтавокНДС - Соответствие - соответствие, полученное с помощью функции ПолучитьСоответствиеСтавокНДС().
//  ПроцентПлатежа - Число - Процент платежа по этапу.
//  ТекстНДС - Строка - описание ставки НДС.
//
Процедура СформироватьТекстНДСЭтапаОплаты(СоответствиеСтавокНДС, ПроцентПлатежа, ТекстНДС) Экспорт
		
КонецПроцедуры

// Заполняет текстовое представление суммы.
//
// Параметры:
//  СуммаКПрописи - Число - сумма, по которой надо получить представление.
//  КодВалюты - Число - код используемой валюты.
//  ЧН - Строка - параметр нулевого значения числа.
//  ЧРГ - Строка - разделитель групп целой части числа.
//  Результат - Строка - текстовое представление суммы, которое будет заполнено. 
//
Процедура ФорматСумм(СуммаКПрописи, Результат, КодВалюты = Неопределено, ЧН = "", ЧРГ = "") Экспорт
	
	ОбменСКонтрагентамиРТ.ФорматСумм(СуммаКПрописи, Результат, КодВалюты, ЧН, ЧРГ);
	
КонецПроцедуры

// Заполняет сумму прописью.
//
// Параметры:
//  СуммаЧислом - Число - преобразуемая сумма.
//  КодВалюты - Число - код используемой валюты.
//  Результат - Строка - сумма прописью.
//
Процедура СуммаПрописью(СуммаЧислом, КодВалюты, Результат) Экспорт
	
КонецПроцедуры

// Формирует текст НДС по ставке для печатной формы счета и заказа.
//
// Параметры:
//  СтавкаНДС       - ПеречислениеСсылка.СтавкиНДС - ставка НДС, для которой необходимо сформировать текст.
//  ЦенаВключаетНДС - Булево - Признак включения НДС в цену.
//  Результат       - Строка - текстовое представление ставки НДС.
//
Процедура ТекстНДСПоСтавке(СтавкаНДС, ЦенаВключаетНДС, Результат) Экспорт
	
КонецПроцедуры

// Используется для простановки ответственного при создании электронного документа.
//
// Параметры:
//  Контрагент - СправочникСсылка - ссылка на контрагента, по которому надо получить ответственного.
//  Соглашение - СправочникСсылка.СоглашениеОбИспользованииЭД - соглашение, по которому надо найти ответственного.
//  ОтветственныйПоЭД - СправочникСсылка.Пользователи - ответственное лицо.
//
Процедура ПолучитьОтветственногоПоЭД(Контрагент, Соглашение, ОтветственныйПоЭД) Экспорт
	
КонецПроцедуры

// Возврат признака физического лица.
//
// Параметры:
//  ДанныеКонтрагента - СправочникСсылка - ссылка на элемент справочника.
//  ПризнакФизЛица - Булево - Истина если физическое лицо.
//
Процедура ЭтоФизЛицо(ДанныеКонтрагента, ПризнакФизЛица) Экспорт
	
	ОбменСКонтрагентамиРТ.ЭтоФизЛицо(ДанныеКонтрагента, ПризнакФизЛица);
	
КонецПроцедуры

// Вывод данных о скидках в печатную форму документа.
//
// Параметры:
//  Товары - ТаблицаЗначений, ВыборкаИзРезультатаЗапроса - список товаров.
//  ИспользоватьСкидки - Булево - используются скидки.
//  ВыводитьСкидки - Булево - заполняемый процедурой признак.
//
Процедура НужноВыводитьСкидки(Знач Товары, ИспользоватьСкидки, ВыводитьСкидки) Экспорт
	
КонецПроцедуры

// Определяет имя дополнительной колонки, которая выводится в печатных формах электронных документов Счет на оплату,
// Заказ клиента, Заказ поставщику, Отчет о списании комиссионного товара, Отчет о продажах комиссионного товара.
// В качестве дополнительной колонки могут выступать "Код", "Артикул".
//
// Параметры:
//  Результат - Строка - доступные значения: "Код", "Артикул".
//
Процедура ИмяДополнительнойКолонки(Результат) Экспорт
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Переопределение поведения электронных документов.

// Данное событие возникает при изменении элемента справочника ЭДПрисоединенныеФайлы.
// Предназначено для переопределения или добавления изменяемых реквизитов электронного документа.
//
// Параметры:
//  Объект - СправочникСсылка.ЭДПрисоединенныеФайлы - изменяемый объект.
//  СтруктураПараметров - Структура - структура изменяемых реквизитов.
//
Процедура ПриИзмененииПрисоединенногоФайла(Объект, СтруктураПараметров) Экспорт
	
КонецПроцедуры

// Описывает действия, которые нужно выполнить после формирования электронного документа.
//
// Параметры:
//  ЭлектронныйДокумент	 - СправочникСсылка.ЭДПрисоединенныеФайлы - ссылка на электронный документ.
//
Процедура ЭлектронныйДокументСформирован(ЭлектронныйДокумент) Экспорт
	
КонецПроцедуры

// Выполняет дополнительную обработку электронного документа, которому назначили статус "Утвержден".
// 
// Параметры:
//  ЭлектронныйДокумент - СправочникСсылка - ссылка на присоединенный файл.
//
Процедура НазначенСтатусУтвержден(ЭлектронныйДокумент) Экспорт
	
КонецПроцедуры

// Выполняет дополнительную обработку электронного документа, которому назначили статус "Подписан".
// 
// Параметры:
//  ЭлектронныйДокумент - СправочникСсылка - ссылка на присоединенный файл.
//
Процедура НазначенСтатусПодписан(ЭлектронныйДокумент) Экспорт
	
КонецПроцедуры

// Вызывается при изменении состояния документооборота на ОбменЗавершен, ОбменЗавершенСИсправлением.
//
// Параметры:
//  ОснованияЭлектронногоДокумента - ДокументСсылка - ссылка на документ основания электронного документа.
//
Процедура УстановленоСостояниеОбменЗавершен(ОснованияЭлектронногоДокумента) Экспорт
	
	
	
КонецПроцедуры

// Проверка выполнения условия для утверждения документа.
//
// Параметры:
//  ЭлектронныйДокумент - Ссылка - ссылка на электронный документ.
//  Готов - Булево - заполняемый процедурой признак.
//
Процедура ЭлектронныйДокументГотовКУтверждению(ЭлектронныйДокумент, Готов) Экспорт
	
КонецПроцедуры

// Определяет возможно ли редактировать объект информационной базы.
//
// Параметры:
//  Источник - ДокументОбъект - проверяемый объект.
//  РедактированиеРазрешено - Булево - возвращает разрешено или нет редактирование.
//
Процедура ПроверитьВозможностьРедактированияОбъекта(Источник, РедактированиеРазрешено) Экспорт
	
КонецПроцедуры

// Выполняется проверка возможности корректного чтения Пакета ЭД.
// Необходимость данной проверки возникает при работе с данными внешней информационной базы (через com-соединение).
//
// Параметры:
//  ПакетЭД - ДокументСсылка.ПакетЭД - исследуемый пакет электронных документов.
//  ЧтениеПакетаВозможно - Булево, Неопределено - Ложь - чтение пакета не будет выполняться, во всех остальных случаях,
//                                                       (включая пустое значение) пакет будет прочитан.
//
Процедура ОпределитьВозможностьЧтенияДвоичныхДанныхПакетаЭД(ПакетЭД, ЧтениеПакетаВозможно) Экспорт
	
	
	
КонецПроцедуры

// Проверяет на корректность заполнения параметров электронного документа.
//
// Параметры:
//  ПараметрыЭД - структура - перечень параметров ЭД.
//  Результат - Булево - Истина если правильно заполнен объект выгрузки.
//
Процедура ПроверитьПравильностьЗаполненияОбъекта(ПараметрыЭД, Результат) Экспорт
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Общие процедуры и функции.

// Создает таблицу порядка создания типов при загрузке электронного документа.
//
//  Таблица - таблица значений.
//
// Позволяет переопределить порядок создания типов объектов в дереве. Это может быть необходимо, когда одни типы
// зависимы от других, например, номенклатура поставщика, как правило, зависима от номенклатуры. Используется при
// заполнении в дереве электронного документа ссылок на объекты информационной базы.
//
// Параметры:
//  Таблица	 - ТаблицаЗначений - содержит колонки:
//    * ТипОбъекта - Строка - строковый идентификатор библиотечного типа.
//    * Порядок - Число - порядок создания типа в дереве (нумеруется с 1).
//
Процедура ЗаполнитьТаблицуПорядкаСозданияТиповОбъектов(Таблица) Экспорт
	
КонецПроцедуры

// Получает имя временного файла.
//
// Параметры:
//  ИмяВременногоФайла - Строка - имя временного файла;
//  Расширение - Строка - расширение для временного файла.
//
Процедура ТекущееИмяВременногоФайла(ИмяВременногоФайла, Расширение = "") Экспорт
	
КонецПроцедуры

// Осуществляет разбор файла с реквизитами контрагента
// в ней можно внести изменения в структуру возвращаемых данных.
//
// Параметры:
//  СсылкаНаФайл - Строка - адрес хранилища файла с реквизитами контрагента.
//  СтруктураВозврата - Структура - перечень параметров.
//  РезультатРазбора - Булево - Истина - разбор файла выполнен; Ложь - разбор файла не выполнялся.
//  ОшибкаРазбора - Строка - текст, описание ошибки.
//
Процедура РазобратьФайлРеквизитовКонтрагента(СсылкаНаФайл, СтруктураВозврата, РезультатРазбора, ОшибкаРазбора) Экспорт
	
	
КонецПроцедуры

// Возвращает структуру, содержащую значения реквизитов прочитанные из информационной базы
// по ссылке на объект. Если не задан альтернативный алгоритм получения значений реквизитов (процедура пуста),
// то используется функция БСП: ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, ИменаРеквизитов).
// 
// Параметры:
//  Ссылка - Ссылка - произвольная ссылка.
//  ИменаРеквизитов - Строка, Структура - если Строка, то имена реквизитов, 
//               перечисленные через запятую, в формате требований к свойствам структуры.
//               Например, "Код, Наименование, Родитель".
//               Если Структура, то в качестве ключа передается псевдоним поля для
//               возвращаемой структуры с результатом, а в качестве значения (опционально) 
//               - фактическое имя поля в таблице. 
//               Если значение не определено, то имя поля берется из ключа.
//  СтруктураДанных - Структура - содержит список свойств, как список имен в строке
//                 ИменаРеквизитов, со значениям реквизитов, прочитанных
//                 из информационной базы.
// 
Процедура ПолучитьЗначенияРеквизитов(Ссылка, ИменаРеквизитов, СтруктураДанных) Экспорт
	
	
	
КонецПроцедуры

// Определяет Счета-Фактуры по документам основаниям.
// 
// Параметры:
//  МассивОснований - Массив - массив ссылок на документы основания.
//  МассивСФ - Массив - массив для заполнения ссылками на счета-фактуры.
//  НаправлениеЭД - ПеречислениеСсылка.НаправленияЭД - направление электронного документа.
// 
Процедура ЗаполнитьСчетаФактурыПоДокументамОснования(МассивОснований, МассивСФ, НаправлениеЭД) Экспорт
	
КонецПроцедуры

// Определение имен связей параметров выбора для полей форм библиотеки, в которые выбирается договор контрагента.
//
// Параметры:
//  ИмяСвязиПоОрганизации  - Строка - Имя связи параметров выбора для связанного поля "Организация",
//                                    если значение не будет установлено, то связь параметров выбора не будет установлена.
//  ИмяСвязиПоКонтрагенту  - Строка - Имя связи параметров выбора для связанного поля "Контрагент",
//                                    если значение не будет установлено, то связь параметров выбора не будет установлена.
//
Процедура УстановитьИменаСвязейПараметровВыбораДоговорКонтрагента(ИмяСвязиПоОрганизации, ИмяСвязиПоКонтрагенту) Экспорт

КонецПроцедуры
	
////////////////////////////////////////////////////////////////////////////////
// Механизм однократной сделки.

// Выполняет заполнение списка документов по виду электронного документа.
//
// Параметры:
//  ВидЭД           - Перечисления   - вид электронного документа;
//  СписокВозврата  - СписокЗначений - список ссылок на документы информационной базы.
//
Процедура СписокТиповДокументовПоВидуЭД(ВидЭД, СписокВозврата) Экспорт
	
	ОбменСКонтрагентамиРТ.СписокТиповДокументовПоВидуЭД(ВидЭД, СписокВозврата);
	
КонецПроцедуры

// Задает имя файла "по умолчанию", с которым будет предложено пользователю сохранить
// ЭД при выгрузке по сценарию "Однократной сделки".
//
// Параметры:
//  ВладелецЭД - ДокументСсылка - ссылка на документ ИБ, на основании которого формируется и выгружается ЭД.
//  НаименованиеФайла - Строка - имя файла.
//
Процедура ЗадатьИмяСохраняемогоФайлаПриБыстромОбмене(ВладелецЭД, НаименованиеФайла) Экспорт
	
КонецПроцедуры

// Получает реквизиты элемента справочника "Организации", для выгрузки в xml-файл.
//
// Параметры:
//  Организация - СправочникСсылка.Организации - элемент справочника организации;
//  СтруктураВозврата - структура - перечень параметров организации.
//
Процедура ПолучитьРеквизитыОрганизацииДляВыгрузкиВФайл(Организация, СтруктураВозврата) Экспорт
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Механизм выгрузки электронных документов в файлы для отправки в ФНС через сервис 1С-Отчетность.

// Метод заполняет соответствие выгружаемым документам дату и номер основания (договора).
//
// Параметры:
//  МассивСсылок - Массив - массив ссылок на документы ИБ (в качестве возможных значений следует принимать те типы 
//                          документов, на основании которых в данном прикладном решении формируется электронный
//                          документ вида «Акт приемки-сдачи работ (услуг).
//  ВозвращаемоеСоответствие - Соответствие - в случае, если требуемые реквизиты у договора не заполнены
//                             или при невозможности получения данных реквизитов, то помещать пустые 
//                             значения указанных типов.
//                             Соответствие со следующими свойствами:
//                             * ключ соответствия - ссылка на выгружаемый документ ИБ, взятая из входящего параметра;
//                             * значение соответствия - Структура:
//                               ** НомерДоговора - Строка;
//                               ** ДатаДоговора - Дата.
//
Процедура ПолучитьНомерДатаДоговораДокументов(МассивСсылок, ВозвращаемоеСоответствие) Экспорт
	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Механизм прямого обмена между организациями.

// Переопределяет разрешение использовать механизм прямого обмена между организациями.
//
// Параметры:
//  Отказ - Булево - Истина, если использование обмена между организациями запрещено;
//    Ложь - в противном случае;
//    Значение по умолчанию - Ложь;
//
// Пример:
//	Если <Выражение> Тогда
//		Отказ = Истина;
//	КонецЕсли;
//
Процедура ИспользоватьОбменЭДМеждуОрганизациями(Отказ) Экспорт
	
	ОбменСКонтрагентамиРТ.ИспользоватьОбменЭДМеждуОрганизациями(Отказ);
	
КонецПроцедуры

// Подготавливает данные для электронного документа типа ПередачаТоваровМеждуОрганизациями.
//
// Параметры:
//  СсылкаНаОбъект - ДокументСсылка - ссылка на объект информационной базы, по которому необходимо
//                                    создать электронный документ.
//  СтруктураЭД - Структура - данные для формирования электронного документа.
//  ДеревоЭД - ДеревоЗначений - дерево данных для заполнения электронного документа.
//
Процедура ПодготовитьДанныеПоПередачеТоваровМеждуОрганизациями(СсылкаНаОбъект, СтруктураЭД, ДеревоЭД) Экспорт
		
КонецПроцедуры

// Подготавливает данные для электронного документа типа ВозвратТоваровМеждуОрганизациями.
//
// Параметры:
//  СсылкаНаОбъект - ДокументСсылка - ссылка на объект информационной базы, по которому необходимо
//                                    создать электронный документ.
//  СтруктураЭД - Структура - структура данных для формирования электронного документа.
//  ДеревоЭД - ДеревоЗначений - дерево данных для заполнения электронного документа.
//
Процедура ПодготовитьДанныеПоВозвратуТоваровМеждуОрганизациями(СсылкаНаОбъект, СтруктураЭД, ДеревоЭД) Экспорт
		
КонецПроцедуры

// Заполнение состояния ЭДО.
//
// Параметры:
//  Форма - Форма - текущая форма.
//
Процедура ЗаполнитьСостояниеЭДО(Форма) Экспорт
	
КонецПроцедуры

// Возвращает список имен документов доступных для создания при загрузке электронного документа.
//
// Параметры:
//  ВидЭД			 - Перечисление.ВидыЭД - вид электронного документа
//  СписокСпособовОбработки - Строка - список для добавления операций по отражению электронного документа.
//
Процедура СписокОперацийВидаЭД(ВидЭД,СписокСпособовОбработки) Экспорт 
	
	ОбменСКонтрагентамиРТ.СписокОперацийВидаЭД(ВидЭД, СписокСпособовОбработки);
	
КонецПроцедуры

// Процедура - переопределяет имя объекта метаданных для способа обработки входящего электронного документа,
//			   по-умолчанию совпадает с именем способа обработки.
//
// Параметры:
//  СпособОбработки - Строка - один из доступных способов обработки входящего документа.
//  ИмяДокумента - Строка - переменная в которую будет помещено имя объекта метаданных, соответствующее переданному способу обработки.
//
Процедура ИмяДокументаПоСпособуОбработки(СпособОбработки, ИмяДокумента) Экспорт 
	
КонецПроцедуры

// Процедура - Переопределяет заполнение таблицы соответствия видов ЭД и способов обработки по имени профиля,
//			   который используется в форме настройки ЭДО на закладке "Входящие электронные документы".
//
// Параметры:
//  ТаблицаПрофиля	 - ТаблицаЗначений - таблица, содержащая соответствие видов электронных документов и способов обработки
//  Профиль			 - Строка - имя профиля настроек: "Автоматически", "Вручную", "Поставщик", "Покупатель".
//
Процедура ТаблицаПредопределенногоПрофиля(ТаблицаПрофиля,Профиль) Экспорт 
	
КонецПроцедуры 

// Ищет документ владелец электронного документа, который мог быть получен через ЕГАИС.
//
// Параметры:
//  Документ - ДокументСсылка - Ссылка на документ, полученный через ЕГАИС.
//  ИдентификаторДокумента - Строка - Идентификатор документа отправителя.
//
Процедура НайтиРанееПолученныйДокумент(Документ, ИдентификаторДокумента) Экспорт
	
	
	
КонецПроцедуры

// Заполняет соответствие исходящих видов электронных документов и представлений документов информационной базы,
// на основании которых они формируются.
//
// Параметры:
//  СоответствиеВидовЭДДокументамИБ - Соответствие - перечень видов электронных документов.
//    - Соответствие - с свойствами:
//    * Ключ             - Перечисление.ВидыЭД - вид электронного документа.
//    * Значение         - Строка - представление документа информационной базы (хоз. операции).
//
Процедура СоответствиеИсходящихВидовЭДДокументамИБ(СоответствиеВидовЭДДокументамИБ) Экспорт 
	
	ОбменСКонтрагентамиРТ.СоответствиеИсходящихВидовЭДДокументамИБ(СоответствиеВидовЭДДокументамИБ);
	
КонецПроцедуры

#Область Права

// Выполняется при проверке прав пользователя на операции чтения электронных документов.
//
// Параметры:
//  ЕстьПраво - Булево - признак наличия права чтения данных. Для изменения. По умолчанию Истина.
//
Процедура ПриПроверкеПраваЧтенияЭлектронныхДокументов(ЕстьПраво) Экспорт
	
КонецПроцедуры

// Выполняется при проверке прав пользователя на операции добавления и изменения электронных документов.
//
// Параметры:
//  ЕстьПраво - Булево - признак наличия права добавления и изменения данных. Для изменения. По умолчанию Истина.
//
Процедура ПриПроверкеПраваОбработкиЭлектронныхДокументов(ЕстьПраво) Экспорт
	
КонецПроцедуры

#КонецОбласти

// Выполняется при получении описания основания электронного документа,
// которое используется для представления данных прикладного объекта в подсистеме.
//
// Параметры:
//  ОснованиеОбъект - ОпределяемыйТип.ОснованияЭлектронныхДокументов - объект или ссылка на основание электронного документа.
//  Описание - Структура - данные, описывающие основание электронного документа:
//   * Вид - Строка - представление вида объекта. По умолчанию синоним объекта метаданных.
//   * Организация - ОпределяемыйТип.Организация - организация основания.
//   * Контрагент - ОпределяемыйТип.КонтрагентБЭД - контрагент основания.
//   * Дата - Дата - дата основания.
//   * Номер - Строка - номер основания.
//   * СуммаДокумента - Число - сумма основания.
//  СтандартнаяОбработка - Булево - признак формирования описания по умолчанию. 
//                                  Если Ложь, то используются данные из параметра Описание. По умолчанию Истина.
//
Процедура ПриПолученииОписанияОснованияЭлектронногоДокумента(ОснованиеОбъект, Описание, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

#Область СопоставлениеНоменклатуры

// Определяет владельца номенклатуры, которой пользуется контрагент.
//
// Параметры:
//  Контрагент - ОпределяемыйТип.УчастникЭДО - контрагент, для которого нужно определить владельца номенклатуры.
//  Владелец - ОпределяемыйТип.ВладелецНоменклатурыБЭД - владелец номенклатуры (для изменения). По умолчанию равен параметру Контрагент.
//
Процедура ПриОпределенииВладельцаНоменклатурыКонтрагента(Знач Контрагент, Владелец) Экспорт
	
КонецПроцедуры

// Определяет взаимосвязь между частями номенклатуры информационной базы.
// Устанавливает зависимость характеристик и упаковок от номенклатуры.
// Используется при заполнении свойства "СвязиПараметровВыбора" в элементах формы.
//
// Параметры:
//  СтруктураНоменклатуры - Структура - описание структуры номенклатуры информационной базы (для изменения):
//   * ИмяПараметраСвязиХарактеристики - Строка - имя параметра связи выбора характеристики по номенклатуре. По умолчанию "Отбор.Владелец".
//   * ИмяПараметраСвязиУпаковки - Строка - имя параметра связи выбора упаковки по номенклатуре. По умолчанию "Отбор.Владелец".
//
Процедура ПриОпределенииСтруктурыНоменклатурыИнформационнойБазы(СтруктураНоменклатуры) Экспорт
	
	ОбменСКонтрагентамиРТ.ПриОпределенииСтруктурыНоменклатурыИнформационнойБазы(СтруктураНоменклатуры);
	
КонецПроцедуры

// Определяет свойства экземпляра номенклатуры информационной базы.
// Устанавливает обязательность использования характеристик и упаковок номенклатуры.
//
// Параметры:
//  НоменклатураИБ - Структура - элемент номенклатуры информационной базы. 
//                               См. ОбменСКонтрагентамиКлиентСервер.НоваяНоменклатураИнформационнойБазы.
//  Свойства - Структура - свойства элемента номенклатуры информационной базы (для изменения):
//   * ИспользоватьХарактеристики - Булево - признак использования характеристик. По умолчанию Ложь.
//   * ИспользоватьУпаковки - Булево - признак использования упаковок. По умолчанию Ложь.
//
Процедура ПриОпределенииСвойствНоменклатурыИнформационнойБазы(Знач НоменклатураИБ, Свойства) Экспорт
	
	ОбменСКонтрагентамиРТ.ПриОпределенииСвойствНоменклатурыИнформационнойБазы(НоменклатураИБ, Свойства);
	
КонецПроцедуры

// Определяет реквизиты экземпляра номенклатуры информационной базы.
//
// Параметры:
//  НоменклатураИБ - Структура - элемент номенклатуры информационной базы. 
//                               См. ОбменСКонтрагентамиКлиентСервер.НоваяНоменклатураИнформационнойБазы.
//  Реквизиты - Структура - реквизиты элемента номенклатуры информационной базы (для изменения):
//   * Наименование - Строка - наименование номенклатуры.
//   * Артикул - Строка - артикул номенклатуры.
//   * СтавкаНДС - Произвольный - ставка НДС номенклатуры.  Значение из соответствия, заданного в методе
//                                ОбменСКонтрагентамиПереопределяемый.ЗаполнитьСоответствиеСтавокНДС.
//
Процедура ПриОпределенииРеквизитовНоменклатурыИнформационнойБазы(Знач НоменклатураИБ, Реквизиты) Экспорт
	
	ОбменСКонтрагентамиРТ.ПриОпределенииРеквизитовНоменклатурыИнформационнойБазы(НоменклатураИБ, Реквизиты);
	
КонецПроцедуры

// Определяет заголовки форм и полей сопоставления номенклатуры,
// которые могут зависеть от прикладного решения и его настроек.
//
// Параметры:
//  Представления - Структура - набор представлений, которые можно переопределить.
//   * ВладелецНоменклатурыПредставлениеОбъекта - Строка - представление поля владельца номенклатуры.
//                                                         По умолчанию берется из определяемого типа ВладелецНоменклатурыБЭД.
//   * НоменклатураПредставлениеОбъекта - Строка - представление поля номенклатуры.
//                                                 По умолчанию берется из определяемого типа НоменклатураБЭД.
//   * ХарактеристикаПредставлениеОбъекта - Строка - представление поля характеристики номенклатуры.
//                                                   По умолчанию берется из определяемого типа ХарактеристикаНоменклатурыБЭД.
//   * УпаковкаПредставлениеОбъекта - Строка - представление поля упаковки номенклатуры.
//                                             По умолчанию берется из определяемого типа УпаковкаНоменклатурыБЭД.
//   * НоменклатураКонтрагентаПредставлениеСписка - Строка - представление списка номенклатуры контрагентов.
//                                                           По умолчанию "Номенклатура контрагентов".
//   * НоменклатураКонтрагентаПредставлениеОбъекта - Строка - представление объекта номенклатуры контрагентов.
//                                                            По умолчанию "Номенклатура контрагента".
//
// Пример:
//  Представления.НоменклатураКонтрагентаПредставлениеСписка = НСтр("ru = 'Номенклатура партнеров'");
//  Представления.НоменклатураКонтрагентаПредставлениеОбъекта = НСтр("ru = 'Номенклатура партнера'");
//  Представления.ВладелецНоменклатурыПредставлениеОбъекта = НСтр("ru = 'Партнер'");
//
Процедура ПриОпределенииПредставленийСопоставленияНоменклатуры(Представления) Экспорт
	
	ОбменСКонтрагентамиРТ.ПриОпределенииПредставленийСопоставленияНоменклатуры(Представления);
	
КонецПроцедуры

// Выполняется при подборе вариантов сопоставления номенклатуры контрагента и информационной базы.
//
// Параметры:
//  НаборНоменклатурыКонтрагентов - Массив - набор номенклатуры контрагентов, для которой нужно подобрать варианты.
//                                           См. ОбменСКонтрагентамиКлиентСервер.НоваяНоменклатураКонтрагента
//  Варианты - Массив - варианты сопоставления (для изменения). Элементы представлены структурой:
//   * НоменклатураКонтрагента - Структура - элемент из параметра НаборНоменклатурыКонтрагентов.
//   * НоменклатураИБ - Структура - подобранный вариант номенклатуры ИБ.
//                                  См. ОбменСКонтрагентамиКлиентСервер.НоваяНоменклатураИнформационнойБазы.
//   * Наименование - Строка - наименование номенклатуры в ИБ.
//   * Артикул - Строка - артикул номенклатуры в ИБ.
//   * Штрихкод - Строка - штрихкод номенклатуры в ИБ.
//  СтандартнаяОбработка - Булево - признак использования стандартных (библиотечных) алгоритмов поиска. По умолчанию Истина.
//                                  Поддерживаются алгоритм полнотекстового поиска по наименованию номенклатуры.
//
Процедура ПриПодбореВариантовСопоставленияНоменклатуры(Знач НаборНоменклатурыКонтрагентов, Варианты, СтандартнаяОбработка = Истина) Экспорт
	
	ОбменСКонтрагентамиРТ.ПриПодбореВариантовСопоставленияНоменклатуры(НаборНоменклатурыКонтрагентов, Варианты, СтандартнаяОбработка);
	
КонецПроцедуры

// Выполняется при подборе недостающих данных о номенклатуре информационной базы по уже имеющимся,
// а также номенклатуре контрагента.
//
// Параметры:
//  НоменклатураКонтрагента - Структура - данные номенклатуры контрагента. 
//                                        См. ОбменСКонтрагентамиСлужебныйКлиентСервер.НоваяНоменклатураКонтрагента.
//  НоменклатураИБ - Структура - данные о номенклатуре информационной базы (имеющиеся или требующие подбора).
//                               См. ОбменСКонтрагентамиСлужебныйКлиентСервер.НоваяНоменклатураИнформационнойБазы.
//
Процедура ПриПодбореНоменклатурыИнформационнойБазы(Знач НоменклатураКонтрагента, НоменклатураИБ) Экспорт
	
	ОбменСКонтрагентамиРТ.ПриПодбореНоменклатурыИнформационнойБазы(НоменклатураКонтрагента, НоменклатураИБ);
	
КонецПроцедуры

// Заполняет форму номенклатуру по данным контрагента.
//
// Параметры:
//  НоменклатураКонтрагента - Структура - данные контрагента для заполнения формы номенклатуры.
//                                        См. ОбменСКонтрагентамиКлиентСервер.НоваяНоменклатураКонтрагента.
//  Форма - УправляемаяФорма, Форма - форма номенклатуры, которую нужно заполнить.
//
Процедура ПриЗаполненииФормыНоменклатурыПоДаннымКонтрагента(Знач НоменклатураКонтрагента, Форма) Экспорт
	
	ОбменСКонтрагентамиРТ.ПриЗаполненииФормыНоменклатурыПоДаннымКонтрагента(НоменклатураКонтрагента, Форма);
	
КонецПроцедуры

// Заполняет форму характеристики по данным контрагента.
//
// Параметры:
//  НоменклатураКонтрагента - Структура - данные контрагента для заполнения формы характеристики.
//                                        См. ОбменСКонтрагентамиКлиентСервер.НоваяНоменклатураКонтрагента.
//  Форма - УправляемаяФорма - форма характеристики, которую нужно заполнить.
//
Процедура ПриЗаполненииФормыХарактеристикиПоДаннымКонтрагента(Знач НоменклатураКонтрагента, Форма) Экспорт
	
	ОбменСКонтрагентамиРТ.ПриЗаполненииФормыХарактеристикиПоДаннымКонтрагента(НоменклатураКонтрагента, Форма);
	
КонецПроцедуры

// Выполняется при отражении в учете электронного документа, содержащего информацию для сопоставления номенклатуры.
// Позволяет определить необходимость сопоставления номенклатуры для указанного способа обработки электронных документов,
// а также отказаться от отражения в учете, если сопоставление не выполнено.
// Если в электронном документе не передана информация для сопоставления,
// то отражение в учете будет продолжено независимо от настроек.
//
// Параметры:
//  Документ - Структура - данные электронного документа (только чтение):
//   * СпособОбработки - Строка - способ отражения в учете электронного документа. См. СписокОперацийВидаЭД.
//                     - Структура - способ отражения в учете УПД (расширенный):
//                        ** ПервичныйДокумент - Строка - способ отражения в учете первичного документа.
//                        ** СчетФактура - Строка - способ отражения в учете счет-фактуры.
//  Настройки - Структура - настройки сопоставления номенклатуры (для изменения):
//   * ОтражатьТолькоСопоставленные - Булево - признак разрешения отражать в учете только документы с сопоставленной номенклатурой. По умолчанию Истина.
//                                             Если в электронном документе не передана информация для сопоставления,
//                                             то отражение в учете будет продолжено независимо от настроек.
//
Процедура ПриОтраженииВУчетеЭлектронногоДокументаСНоменклатурой(Знач Документ, Настройки) Экспорт
	
КонецПроцедуры

// Выполняется при поиске номенклатуры информационной базы по идентификатору.
// Если при формировании электронного документа для сопоставления номенклатуры заполняется идентификатор без использования
// автоматической генерации с помощью библиотеки, то в данном методе необходимо описать алгоритм обратного получения данных
// информационной базы из идентификатора.
//
// Параметры:
//  Идентификатор - Строка - идентификатор, по которому нужно определить номенклатуру ИБ.
//  НоменклатураИБ - Структура - результаты поиска номенклатуры ИБ по идентификатору.
//                               См. ОбменСКонтрагентамиКлиентСервер.НоваяНоменклатураИнформационнойБазы.
Процедура ПриПоискеНоменклатурыПоИдентификатору(Знач Идентификатор, НоменклатураИБ) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ПрикладныеВидыЭлектронныхДокументов

// Определяет прикладные виды электронных документов.
//
// Параметры:
//  ВидыЭлектронныхДокументов - Массив - прикладные виды актуальных электронных документов.
//
Процедура ПриОпределенииПрикладныхВидовЭлектронныхДокументов(ВидыЭлектронныхДокументов) Экспорт
	
КонецПроцедуры

// Определяет сведения о прикладных форматах электронных документов.
// 
// Параметры:
//  ТаблицаФорматов - ТаблицаЗначений - Таблица сведений о прикладных форматах.
//     * ВидЭлектронногоДокумента    - ОпределяемыйТип.ПрикладныеВидыЭлектронныхДокументов - Ссылка на прикладной вид электронного документа.
//     * ИдентификаторФормата        - Строка - Текстовый идентификатор формата,
//          используется для идентификации формата в программном коде библиотеки.
//     * ПредставлениеФормата        - Строка - Пользовательское представление для вывода пользователю.
//     * Отключен                    - Булево - Если указано "Да", то формат не используется.
//     * ДатаНачалаДействия          - Дата - Дата, начиная с которой формат вступает в силу.
//     * ДатаОкончанияДействия       - Дата - Дата, после которой формат не должен использоваться.
//     * УсловиеВыводаПредупреждения - Строка - Задает условие вывода предупреждения для входящих документов.
//          Возможные значения:
//          ""ДатаФормированияЭлектронногоДокумента"" - предупреждение выводится только в том случае,
//          если электронный документ сформирован вне периода действия формата.
//          Пустая строка - предупреждение выводится в любом случае.
//     * ТекстПредупрежденияДляВходящегоДокумента - Строка - Содержит текст предупреждения,
//          который будет выводиться в форме визуализации входящего документа, сформированного по данному формату.
//          Используется для утративших силу форматов и для других предупреждений.
//          Может содержать в тексте символы ""%"", которые будут заменены на параметры из колонки ""ПараметрыПредупрежденияДляВходящегоДокумента"".
//          Если не задано, предупреждение выводиться не будет. Локализуется.
//
Процедура ПриОпределенииСведенийОПрикладныхФорматах(ТаблицаФорматов) Экспорт
	
КонецПроцедуры

// Определяет настройки регламента электронного документооборота для прикладных видов электронных документов.
//
// Параметры:
//  Настройки - Структура - 
//     * ТребуетсяИзвещениеОПолучении - Булево - По данному признаку, на стороне получателя определяется необходимость отправки извещения о получении.
//     * ТребуетсяОтветнаяПодпись     - Булево - По данному признаку, на стороне получателя определяется, требуется ответное подписание документа.
//     * РедактироватьПодпись         - Булево - Признак редактирования параметра "Подписывать документ" в форме настроек регламента ЭДО.
//     * РедактироватьИзвещение       - Булево - Признак редактирования параметра "Ожидать извещение о получении" в форме настроек регламента ЭДО.
//     * РедактироватьОтветнуюПодпись - Булево - Признак редактирования параметра "Ожидать ответную подпись" в форме настроек регламента ЭДО.
//  ВидЭлектронногоДокумента - ОпределяемыйТип.ПрикладныеВидыЭлектронныхДокументов - Ссылка на прикладной вид электронного документа.
//  ВерсияФормата            - Строка - Текстовый идентификатор формата соответствующего прикладного вида электронного документа.
//  СтандартнаяОбработка     - Булево - Признак использования настроек регламента по умолчанию.
//          Если Ложь, то используются данные из параметра Настройки. По умолчанию Истина.
//
Процедура ПриОпределенииНастроекРегламентаЭДО(Настройки, ВидЭлектронногоДокумента, ВерсияФормата, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

// Определяет соответствие списка учетных документов прикладному виду электронного документа.
//
// Параметры:
//  ВидЭлектронногоДокумента - ОпределяемыйТип.ПрикладныеВидыЭлектронныхДокументов - Ссылка на прикладной вид электронного документа.
//  ТипыУчетныхДокументов    - СписокЗначений - Список пустых ссылок на документы информационной базы.
//
Процедура ПриОпределенииТиповУчетныхДокументовПоПрикладномуВидуЭлектронногоДокумента(ВидЭлектронногоДокумента, ТипыУчетныхДокументов) Экспорт
	
КонецПроцедуры

// Определяет соответствие исходящих видов электронных документов и представлений документов информационной базы,
// на основании которых они формируются.
//
// Параметры:
//  СоответствиеВидовДокументам - Соответствие - перечень видов электронных документов.
//    * Ключ     - ОпределяемыйТип.ПрикладныеВидыЭлектронныхДокументов - Ссылка на прикладной вид электронного документа.
//    * Значение - Строка - представление документа информационной базы (хоз. операции).
//
Процедура ПриОпределенииСоответствияИсходящихПрикладныхВидовДокументамУчета(СоответствиеВидовДокументам) Экспорт 
	
КонецПроцедуры

// Определяет список имен документов доступных для создания при загрузке электронного документа.
//
// Параметры:
//  ВидЭлектронногоДокумента - ОпределяемыйТип.ПрикладныеВидыЭлектронныхДокументов - Ссылка на прикладной вид электронного документа.
//  СпособыОбработки - СписокЗначений - Список операций по отражению электронного документа в учете.
//
Процедура ПриОпределенииСпособовОбработкиПрикладногоВидаЭлектронногоДокумента(ВидЭлектронногоДокумента, СпособыОбработки) Экспорт 
	
КонецПроцедуры

// Определяет список команд ЭДО для основания прикладного электронного документа.
// 
// Параметры:
//  СоставКомандЭДО - Структура - структура состава команд ЭДО.
//    Исходящие - Массив - состав объектов, например "Документ.РеализацияТоваровУслуг".
//    Входящие - Массив - состав объектов.
//    БезПодписи - Массив - состав объектов для обмена без ЭП.
//    Интеркампани - Массив - состав объектов Интеркампани.
//
Процедура ПриОпределенииСоставаКомандЭДООснованияПрикладногоЭлектронногоДокумента(СоставКомандЭДО) Экспорт
	
КонецПроцедуры

// Выполняется при получении описания основания электронного документа,
// которое используется для представления данных прикладного объекта в подсистеме.
//
// Параметры:
//  ОснованиеОбъект - ОпределяемыйТип.ОснованияЭлектронныхДокументов - объект или ссылка на основание электронного документа.
//  Описание - Структура - данные, описывающие основание электронного документа:
//   * Вид - Строка - представление вида объекта. По умолчанию синоним объекта метаданных.
//   * Организация - ОпределяемыйТип.Организация - организация основания.
//   * Контрагент - ОпределяемыйТип.КонтрагентБЭД - контрагент основания.
//   * Дата - Дата - дата основания.
//   * Номер - Строка - номер основания.
//   * СуммаДокумента - Число - сумма основания.
//  СтандартнаяОбработка - Булево - признак формирования описания по умолчанию. 
//        Если Ложь, то используются данные из параметра Описание. По умолчанию Истина.
//
Процедура ПриПолученииОписанияОснованияПрикладногоЭлектронногоДокумента(ОснованиеОбъект, Описание, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

// Определяет параметры электронного документа по типу владельца.
//
// Параметры:
//  Источник  - Объект, ОпределяемыйТип.ОснованияЭлектронныхДокументов - документ или справочник источника.
//  Параметры - Структура - параметры источника, необходимых для определения
//     * ВидЭлектронногоДокумента - ОпределяемыйТип.ПрикладныеВидыЭлектронныхДокументов - Ссылка на прикладной вид электронного документа.
//     * Входящий                 - Булево - Признак того, что электронный документ является входящим.
//     * Организация              - ОпределяемыйТип.Организация - Организация, указанная в источнике.
//     * Контрагент               - ОпределяемыйТип.КонтрагентБЭД - Контрагент, указанный в источнике.
//     * ДоговорКонтрагента       - ОпределяемыйТип.ДоговорСКонтрагентом - Договор, указанный в источнике.
//     * Партнер                  - ОпределяемыйТип.Партнер - Договор, указанный в источнике.
//           Указывается, если используется дополнительная аналитика к справочнику Контрагенты.
//
Процедура ПриОпределенииПараметровПрикладногоЭлектронногоДокументаПоИсточнику(Источник, Параметры) Экспорт
	
КонецПроцедуры

// Определяет параметры прикладного электронного документа по данным файла.
//
// Параметры:
//  ДанныеФайла     - ДвоичныеДанные - Данные файла прикладного электронного документа.
//  РасширениеФайла - Строка - Расширение файла без точки.
//  Параметры       - Структура - Параметры прикладного электронного документа.
//     * ВидЭлектронногоДокумента - ОпределяемыйТип.ПрикладныеВидыЭлектронныхДокументов - Ссылка на прикладной вид электронного документа.
//     * НаименованиеДокументаОтправителя - Строка - Наименование документа по данным отправителя.
//     * НомерДокументаОтправителя        - Строка - Номер документа по данным отправителя.
//     * ДатаДокументаОтправителя         - Дата  - Дата документа по данным отправителя.
//     * СуммаДокумента                   - Число - Сумма документа по данным отправителя 
//
Процедура ПриОпределенииПараметровФайлаПрикладногоЭлектронногоДокумента(ДанныеФайла, РасширениеФайла, Параметры) Экспорт
	
КонецПроцедуры

// Формирует файл прикладного электронного документа.
//
// Параметры:
//  ПараметрыФормирования - Структура - данные для формирования файла электронного документа.
//     * СсылкаНаОбъект           - ОпределяемыйТип.ОснованияЭлектронныхДокументов - объект, по которому необходимо сформировать электронный документ.
//     * ВидЭлектронногоДокумента - ОпределяемыйТип.ПрикладныеВидыЭлектронныхДокументов - вид формируемого электронного документа.
//  РезультатФормирования - Структура - данные, которые необходимо заполнить по результатам формирования файла электронного документа.
//     * ДанныеФайла                      - ДвоичныеДанные - файл электронного документа.
//     * ИмяФайла                         - Строка - Имя файла без расширения.
//     * Расширение                       - Строка - Расширение файла (без точки вначале).
//     * НаименованиеДокументаОтправителя - Строка - наименование электронного документа в информационной базе.
//     * НомерДокументаОтправителя        - Строка - номер электронного документа в информационной базе.
//     * ДатаДокументаОтправителя         - Строка - дата электронного документа в информационной базе.
//     * СуммаДокумента                   - Число - сумма электронного документа в информационной базе.
//  Отказ - Булево - если нужно отказаться от создания электронного документа, необходимо установить значение в Истина.
//                   После этого дальнейшие действия по формированию документа производиться не будут, поэтому
//                   нужно сформировать сообщения пользователю при необходимости самостоятельно.
//
Процедура ПриФормированииФайлаПрикладногоЭлектронногоДокумента(ПараметрыФормирования, РезультатФормирования, Отказ) Экспорт
	
КонецПроцедуры

// Формирование представления прикладного электронного документа по данным файла.
//
// Параметры:
//  ТабличныйДокумент   - ТабличныйДокумент - Представление прикладного электронного документа.
//  ДанныеФайла         - ДвоичныеДанные - Данные файла прикладного электронного документа.
//  ПараметрыЗаполнения - Структура - Дополнительные параметры для формирования табличного документа.
//     * ВыводитьБанковскиеРеквизиты     - Булево - Значение настройки "Отображать банковские реквизиты",
//            установленной в форме просмотра электронного документа.
//            Если Истина, то в представлении участника ЭДО следует выводить банковские реквизиты.
//     * СкрыватьДопДанные               - Булево - Инвертированное значение настройки "Отображать дополнительную информацию",
//            установленной в форме просмотра электронного документа.
//            Если Ложь, то в табличном документе следует отображать дополнительную информацию, если она есть.
//     * ВыводитьПостраничныйРазделитель - Булево - Признак необходимости выводить постраничный разделитель.
//            Принимает значение Истина при выводе представления электронного документа на печать.
//     * ЭлектронныеПодписи              - Массив - Список установленных подписей.
//        ** ЭлементМассива - Структура - Свойства установленной подписи.
//           *** ОтветнаяПодпись       - Булево - Признак ответной подписи.
//               Производные свойства: см. ЭлектроннаяПодпись.УстановленныеПодписи.
//
Процедура ПриЗаполненииТабличногоДокументаИзФайлаПрикладногоЭлектронногоДокумента(ТабличныйДокумент, ДанныеФайла, ПараметрыЗаполнения) Экспорт
	
КонецПроцедуры

// Определяет необходимость использования механизма сопоставления номенклатуры контрагентов для прикладного вида электронного документа.
//
// Параметры:
//  ВидЭлектронногоДокумента - ОпределяемыйТип.ПрикладныеВидыЭлектронныхДокументов - Ссылка на прикладной вид электронного документа.
//  Использовать             - Булево - Признак использования сопоставления номенклатуры контрагентов. По умолчанию Ложь.
//
Процедура ПриОпределенииИспользованияСопоставленияНоменклатурыКонтрагентов(ВидЭлектронногоДокумента, Использовать) Экспорт
	
	
	
КонецПроцедуры

// Заполнение информации о товаре прикладного электронного документа по данным в файла.
// Выполняется при использовании сопоставления номенклатуры контрагентов.
//
// Параметры:
//  ДанныеФайла       - ДвоичныеДанные - Данные файла прикладного электронного документа.
//  РасширениеФайла   - Строка - Расширение файла без точки.
//  ИнформациюОТоваре - ТаблицаЗначений - Таблица товаров.
//     * ИД                                    - Строка - Идентификатор товара по данным поставщика.
//     * Наименование                          - Строка - Наименование номенклатуры.
//     * НаименованиеХарактеристики            - Строка - Наименование характеристики.
//     * КодТовара                             - Строка - Код товара.
//     * Артикул                               - Строка - Артикул.
//     * БазоваяЕдиницаКод                     - Строка - Код единицы измерения.
//     * БазоваяЕдиницаНаименование            - Строка - Наименование единицы измерения.
//     * БазоваяЕдиницаНаименованиеПолное      - Строка - Полное наименование единицы измерения.
//     * БазоваяЕдиницаМеждународноеСокращение - Строка - Международное сокращение единицы измерения.
//     * Описание                              - Строка - Произвольное описание товара.
//     * Сопоставление                         - Структура - Параметры сопоставления номенклатуры.
//                                               Заполняется, если необходимо переопределить стандартный механизм.
//        ** Идентификатор    - Строка - Идентификатор товара.
//        ** Наименование     - Строка - Наименование номенклатуры.
//        ** Характеристика   - Строка - Наименование характеристики.
//        ** ЕдиницаИзмерения - Строка - Наименование единицы измерения.
//        ** Артикул          - Строка - Артикул.
//
Процедура ПриЗаполненииИнформацииОТовареИзФайлаПрикладногоЭлектронногоДокумента(ДанныеФайла, РасширениеФайла, ИнформациюОТоваре) Экспорт
	
	
	
КонецПроцедуры

// Выполняется при отражении в учете прикладного электронного документа, содержащего информацию для сопоставления номенклатуры.
// Позволяет определить необходимость сопоставления номенклатуры для указанного способа обработки электронных документов,
// а также отказаться от отражения в учете, если сопоставление не выполнено.
// Если в электронном документе не передана информация для сопоставления,
// то отражение в учете будет продолжено независимо от настроек.
// Выполняется при использовании сопоставления номенклатуры контрагентов.
//
// Параметры:
//  Документ - Структура - данные электронного документа (только чтение):
//   * СпособОбработки - Строка - способ отражения в учете электронного документа.
//                       См. ПриОпределенииСпособовОбработкиПрикладногоВидаЭлектронногоДокумента.
//  Настройки - Структура - настройки сопоставления номенклатуры (для изменения):
//   * ОтражатьТолькоСопоставленные - Булево - признак разрешения отражать в учете только документы с сопоставленной номенклатурой. По умолчанию Истина.
//                                             Если в электронном документе не передана информация для сопоставления,
//                                             то отражение в учете будет продолжено независимо от настроек.
//
Процедура ПриОтраженииВУчетеПрикладногоЭлектронногоДокументаСНоменклатурой(Знач Документ, Настройки) Экспорт
	
	
	
КонецПроцедуры

// Выполняется при создании или при повторном заполнении документа учета по данным файла электронного документа.
//
// Параметры:
//  ПараметрыФайлаЭлектронногоДокумента - Структура - Параметры 
//     * ДанныеФайла     - ДвоичныеДанные - Данные файла прикладного электронного документа.
//     * СпособОбработки - Строка - Способ отражения в учете электронного документа.
//                       См. ПриОпределенииСпособовОбработкиПрикладногоВидаЭлектронногоДокумента.
//     * Входящий        - Булево - Признак того, что электронный документ является входящим.
//  СсылкиНаОбъекты - Массив - Документы информационной базы, созданные ранее по электронному документу.
//
Процедура ПриСозданииОбъектовУчетаИзФайлаПрикладногоЭлектронногоДокумента(ПараметрыФайлаЭлектронногоДокумента, СсылкиНаОбъекты) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область УстаревшиеПроцедурыИФункции

// Устарела. Следует использовать ОбменСКонтрагентамиПереопределяемый.ПолучитьЗначенияРеквизитов.
// Возвращает структуру, содержащую значения реквизитов прочитанные из информационной базы
// по ссылке на объект. Если не задан альтернативный алгоритм получения значений реквизитов (процедура пуста),
// то используется функция БСП: ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, ИменаРеквизитов).
// 
// Параметры:
//  Ссылка - Ссылка - произвольная ссылка.
//  ИменаРеквизитов - Строка, Структура - если Строка, то имена реквизитов, 
//               перечисленные через запятую, в формате требований к свойствам структуры.
//               Например, "Код, Наименование, Родитель".
//               Если Структура, то в качестве ключа передается псевдоним поля для
//               возвращаемой структуры с результатом, а в качестве значения (опционально) 
//               - фактическое имя поля в таблице. 
//               Если значение не определено, то имя поля берется из ключа.
//  СтруктураДанных - Структура - содержит список свойств, как список имен в строке
//                 ИменаРеквизитов, со значениям реквизитов, прочитанных
//                 из информационной базы.
// 
Процедура ПолучитьСтруктуруЗначенийРеквизитов(Ссылка, ИменаРеквизитов, СтруктураДанных) Экспорт
	
	
	
КонецПроцедуры

// Устарела. Заполнение реквизитов формы переданными значениями.
//
// Параметры:
//  ДанныеФормы - УправляемаяФорма - данные управляемой формы.
//  ЗначениеЗаполнения - Строка - ссылка данные во временном хранилище.
//
Процедура ЗаполнитьИсточник(ДанныеФормы, ЗначениеЗаполнения) Экспорт
	
КонецПроцедуры

// Устарела. Заполняет структуру, содержащую информацию об адресе участника ЭДО.
//
// Параметры:
//  СтруктураАдреса - структура - информация об адресе;
//   * Поля структуры для адреса РФ.
//    ** АдресРФ - Булево - признак, что адрес РФ;
//    ** Индекс - Строка - почтовый индекс организации;
//    ** Регион - Строка - код региона организации;
//    ** Район - Строка;
//    ** Город - Строка;
//    ** НаселенныйПункт - Строка - населенный пункт расположения организации;
//    ** Улица - Строка;
//    ** Дом - Строка;
//    ** Корпус - Строка;
//    ** Квартира - Строка;
//    ** Поля структуры для иностранного адреса или адреса РФ строкой.
//   * КодСтраны - Строка - код страны;
//    ** АдресТекст - Строка - представление адреса;
//  СтруктураПараметров - Структура - содержит ссылки на элементы справочника;
//  ВидКонтрагента - Строка - имя метаданных справочника;
//  ВидАдреса - Строка - "Факт" или "Юр";
//  ТекстОшибки - Строка - описание ошибки.
//
Процедура ПолучитьАдресСтруктурой(СтруктураАдреса, СтруктураПараметров, ВидКонтрагента = "Контрагент", ВидАдреса = "Юр", ТекстОшибки = "") Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область НастройкиФормированияДокумента

// Выполняется при выводе формы настроек регламента ЭДО. Используется для получения возможных вариантов
// заполнения некоторых полей формализованных форматов.
//
// Параметры:
//  ВариантыЗаполненияПолей	 - Структура - описание полей и вариантов их заполнения. В качестве ключа задается идентификатор поля,
//     а в качестве значения - список значений возможных вариантов заполнения.
//     Возможные идентификаторы:
//       * УПД_ТоварКод - на входе содержит список значений: {"Код", "Внутренний код"}; {"Штрихкод", "Штрихкод"}
//       * ПередачаТоваров_ТоварКод - на входе содержит список значений: {"Код", "Внутренний код"}; {"Штрихкод", "Штрихкод"}
//
Процедура ПриОпределенииВариантовЗаполненияПолейЭлектронныхДокументов(ВариантыЗаполненияПолей) Экспорт
	
	ОбменСКонтрагентамиРТ.ПриОпределенииВариантовЗаполненияПолейЭлектронныхДокументов(ВариантыЗаполненияПолей);
	
КонецПроцедуры

// Получает запросы, описывающие документы-источники данных для формирования электронного документа указанного вида.
// Запросы используются для указания пользователем формулы заполнения значений доп. полей по данным источника.
// Запрос должен включать в себя отбор по параметру Ссылка.
//
// Параметры:
//  Параметры - Структура - параметры электронного документа, для которого производится настройка.
//     * ВидЭлектронногоДокумента - ПеречислениеСсылка.ВидыЭД - вид электронного документа. Могут передаваться следующие виды документов:
//                                  АктИсполнитель, ТОРГ12Продавец, СчетФактура, КорректировочныйСчетФактура,
//                                  СоглашениеОбИзмененииСтоимостиОтправитель, АктНаПередачуПрав.
//     * ИспользоватьУПД - Булево - признак использования универсального передаточного документа.
//     * ИспользоватьУКД - Булево - признак использования универсального корректировочного документа.
//  ТекстЗапроса             - Строка - текст запроса, который должен быть использован в конструкторе доп. полей шапки.
//
Процедура ПолучитьЗапросКонструктораДополнительныхПолейШапки(Параметры, ТекстЗапроса) Экспорт
	
КонецПроцедуры

#КонецОбласти

// Подготавливает данные для электронного документа вида "Акт о расхождениях".
//
// Параметры:
//  СсылкаНаОбъект - ДокументСсылка - ссылка на объект информационной базы, по которому необходимо 
//                                    создать электронный документ.
//  СтруктураЭД - Структура - структура данных для формирования электронного документа.
//  ДеревоДанных - ДеревоЗначений - дерево данных заполнения электронного документа.
//  Отказ - Булево - если нужно отказаться от создания электронного документа, необходимо установить значение в Истина.
//                   После этого дальнейшие действия по формированию документа производиться не будут, поэтому
//                   нужно сформировать сообщения пользователю при необходимости самостоятельно.
//
Процедура ЗаполнитьДанныеДляАктОРасхождениях(Знач СсылкаНаОбъект, Знач СтруктураЭД, ДеревоДанных, Отказ) Экспорт
	
КонецПроцедуры

// Сохраняет данные из электронного документа в объекты ИБ (Акт о расхождениях, ФНС, версия 5.01).
//
// Параметры:
//  ДеревоДанных - ДеревоЗначений - структура параметров документа ИБ.
//  ДокументУчета - Ссылка - ссылка на объект ИБ, владельца электронного документа.
//  СпособОбработки - Строка - способ сохранения данных в информационной базе.
//  ОписаниеОшибки - Строка - описание ошибки создания учетного документа.
//
Процедура НайтиСоздатьАктОРасхождениях_ФНС_2019(ДеревоДанных, ДокументУчета = Неопределено, СпособОбработки = "", ОписаниеОшибки = "") Экспорт
	
КонецПроцедуры

// Выполняется при проверке возможности создания учетного документа по электронному документу.
//
// Параметры:
//  Параметры - Структура - параметры электронного документа, отражаемого в учете.
//   * ЭтоСводныйУПД - Булево - электронный документ имеет формат УПД и содержит несколько продавцов, покупателей и т.п.
//  Отказ - Булево - признак отказа от отражения в учете. Если установить Истина, то документ не отражается в учете (для изменения). По умолчанию Ложь.
//  Описание - Строка - описание причины отказа от отражения в учете.
//
Процедура ПриПроверкеВозможностиСозданияУчетногоДокумента(Знач Параметры, Отказ, Описание) Экспорт
	
	ОбменСКонтрагентамиРТ.ПриПроверкеВозможностиСозданияУчетногоДокумента(Параметры, Отказ, Описание);
	
КонецПроцедуры

#Область УПД_2019

// Подготавливает данные для электронного документа типа УПД (информация продавца).
//
// Параметры:
//  СсылкаНаОбъект - ДокументСсылка - ссылка на объект информационной базы, по которому необходимо 
//                                    создать электронный документ.
//  СтруктураЭД - Структура - структура данных для формирования электронного документа.
//  ДеревоДанных - ДеревоЗначений - дерево данных заполнения электронного документа.
//  Отказ - Булево - если нужно отказаться от создания электронного документа, необходимо установить значение в Истина.
//                   После этого дальнейшие действия по формированию документа производиться не будут, поэтому
//                   нужно сформировать сообщения пользователю при необходимости самостоятельно.
//
Процедура ЗаполнитьДанныеДляУПДИнформацияПродавцаФНС_2019(СсылкаНаОбъект, СтруктураЭД, ДеревоДанных, Отказ) Экспорт
	
	ОбменСКонтрагентамиРТ.ЗаполнитьДанныеДляУПДИнформацияПродавцаФНС_2019(СсылкаНаОбъект, СтруктураЭД, ДеревоДанных, Отказ);
	
КонецПроцедуры

// Подготавливает данные для электронного документа типа УПД (информация продавца).
//
// Параметры:
//  СсылкаНаОбъект - ДокументСсылка - ссылка на объект информационной базы, по которому необходимо 
//                                    создать электронный документ.
//  СтруктураЭД - Структура - структура данных для формирования электронного документа.
//  ДеревоДанных - ДеревоЗначений - дерево данных заполнения электронного документа.
//  Отказ - Булево - если нужно отказаться от создания электронного документа, необходимо установить значение в Истина.
//                   После этого дальнейшие действия по формированию документа производиться не будут, поэтому
//                   нужно сформировать сообщения пользователю при необходимости самостоятельно.
//
Процедура ЗаполнитьДанныеДляДОПИнформацияПродавцаФНС_2019(СсылкаНаОбъект, СтруктураЭД, ДеревоДанных, Отказ) Экспорт
	
	ОбменСКонтрагентамиРТ.ЗаполнитьДанныеДляДОПИнформацияПродавцаФНС_2019(СсылкаНаОбъект, СтруктураЭД, ДеревоДанных, Отказ);
	
КонецПроцедуры

// Подготавливает данные для электронного документа типа УПД (информация продавца).
//
// Параметры:
//  СсылкаНаОбъект - ДокументСсылка - ссылка на объект информационной базы, по которому необходимо 
//                                    создать электронный документ.
//  СтруктураЭД - Структура - структура данных для формирования электронного документа.
//  ДеревоДанных - ДеревоЗначений - дерево данных заполнения электронного документа.
//  Отказ - Булево - если нужно отказаться от создания электронного документа, необходимо установить значение в Истина.
//                   После этого дальнейшие действия по формированию документа производиться не будут, поэтому
//                   нужно сформировать сообщения пользователю при необходимости самостоятельно.
//
Процедура ЗаполнитьДанныеДляСЧФИнформацияПродавцаФНС_2019(СсылкаНаОбъект, СтруктураЭД, ДеревоДанных, Отказ) Экспорт
	
	ОбменСКонтрагентамиРТ.ЗаполнитьДанныеДляСЧФИнформацияПродавцаФНС_2019(СсылкаНаОбъект, СтруктураЭД, ДеревоДанных, Отказ);
	
КонецПроцедуры

// Подготавливает данные для электронного документа типа УПД (информация покупателя).
//
// Параметры:
//  СсылкаНаЭД - Ссылка - ссылка на ЭД, по которому необходимо сформировать электронный документ.
//  СтруктураЭД - Структура - структура данных для формирования электронного документа.
//  ДеревоДанных - ДеревоЗначений - дерево данных заполнения электронного документа.
//  Отказ - Булево - если нужно отказаться от создания электронного документа, необходимо установить значение в Истина.
//                   После этого дальнейшие действия по формированию документа производиться не будут, поэтому
//                   нужно сформировать сообщения пользователю при необходимости самостоятельно.
//
Процедура ЗаполнитьДанныеДляУПДИнформацииПокупателяФНС_2019(СсылкаНаЭД, СтруктураЭД, ДеревоДанных, Отказ) Экспорт
	
	ОбменСКонтрагентамиРТ.ЗаполнитьДанныеДляУПДИнформацииПокупателяФНС_2019(СсылкаНаЭД, СтруктураЭД, ДеревоДанных, Отказ);
	
КонецПроцедуры

// Сохраняет данные из электронного документа в объекты ИБ (УПД версии 2019).
//
// Параметры:
//  ДеревоДанных - ДеревоЗначений - структура параметров документа ИБ.
//  СсылкиНаВладельцев - Массив - документы информационной базы, созданные ранее по входящему электронному документу.
//  СпособОбработки - Структура - способы сохранения данных в информационной базе.
//     * ПервичныйДокумент - Строка - способ сохранения первичного документа.
//     * СчетФактура       - Строка - способ сохранения счета-фактуры.
//  ОписаниеОшибки - Строка - описание ошибки создания учетного документа.
//
Процедура НайтиСоздатьУниверсальныйПередаточныйДокумент_2019(ДеревоДанных, СсылкиНаВладельцев = Неопределено, СпособОбработки = Неопределено, ОписаниеОшибки = "") Экспорт
	
	ОбменСКонтрагентамиРТ.НайтиСоздатьУниверсальныйПередаточныйДокумент_2019(ДеревоДанных, СсылкиНаВладельцев, СпособОбработки, ОписаниеОшибки);
	
КонецПроцедуры

// Сохраняет данные из электронного документа в объекты ИБ (УПД-ДОП версии 2019).
//
// Параметры:
//  ДеревоДанных - ДеревоЗначений - структура параметров документа ИБ.
//  СсылкаНаВладельца - Ссылка - ссылка на объект ИБ, владельца электронного документа.
//  Записывать - Булево - признак необходимости записывать объект ИБ.
//  СпособОбработки - Строка - способ сохранения данных в информационной базе.
//  ОписаниеОшибки - Строка - описание ошибки создания учетного документа.
//
Процедура НайтиСоздатьУПДДокументОПередаче_2019(ДеревоДанных, СсылкаНаВладельца, Записывать, СпособОбработки, ОписаниеОшибки) Экспорт
	
	ОбменСКонтрагентамиРТ.НайтиСоздатьУПДДокументОПередаче_2019(ДеревоДанных, СсылкаНаВладельца, Записывать, СпособОбработки, ОписаниеОшибки);
	
КонецПроцедуры

// Сохраняет данные из электронного документа в объекты ИБ (УПД-СЧФ версия 2019).
//
// Параметры:
//  ДеревоДанных - ДеревоЗначений - структура параметров документа ИБ.
//  СсылкаНаВладельца - Ссылка - ссылка на объект ИБ, владельца электронного документа.
//  СпособОбработки - Строка - способ сохранения данных в информационной базе.
//  ОписаниеОшибки - Строка - описание ошибки создания учетного документа.
//
Процедура НайтиСоздатьУПДСчетФактуру_2019(ДеревоДанных, СсылкаНаВладельца = Неопределено, СпособОбработки = "", ОписаниеОшибки = "") Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

