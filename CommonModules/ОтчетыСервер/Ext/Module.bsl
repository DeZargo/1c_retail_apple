
//&Вместо("ПерегруппироватьЭлементыФормыНастроек")
//Процедура КочетовПерегруппироватьЭлементыФормыНастроек(Форма, Знач УзелИерархииЭлементов, СвойстваЭлементов, ИменаРеквизитов, ВидыСтилизованныхЭлементов)
//	 Вставить содержимое метода.
//	ПродолжитьВызов(Форма, УзелИерархииЭлементов, СвойстваЭлементов, ИменаРеквизитов, ВидыСтилизованныхЭлементов);
//КонецПроцедуры

&Вместо("СвойстваЭлементовФормыНастроек")
Функция КочетовСвойстваЭлементовФормыНастроек(ТипФормы, КомпоновщикНастроек, ДополнительныеПараметры)
		#Область ПодготовкаСтруктуры
	
	СвойстваЭлементов = Новый Структура("Группы, Поля");
	СвойстваЭлементов.Группы = Новый Структура;
	
	ОписаниеСтроки = Новый ОписаниеТипов("Строка");
	ОписаниеЧисла = Новый ОписаниеТипов("Число");
	
	Поля = Новый ТаблицаЗначений;
	Поля.Колонки.Добавить("ИндексНастройки", ОписаниеЧисла);
	Поля.Колонки.Добавить("ИдентификаторНастройки", ОписаниеСтроки);
	Поля.Колонки.Добавить("Настройки");
	Поля.Колонки.Добавить("ЭлементНастройки");
	Поля.Колонки.Добавить("ОписаниеНастройки");
	Поля.Колонки.Добавить("Представление", ОписаниеСтроки);
	Поля.Колонки.Добавить("ИдентификаторГруппы", ОписаниеСтроки);
	Поля.Колонки.Добавить("ПоложениеЗаголовка", Новый ОписаниеТипов("ПоложениеЗаголовкаЭлементаФормы"));
	Поля.Колонки.Добавить("РастягиватьПоГоризонтали");
	Поля.Колонки.Добавить("Ширина", ОписаниеЧисла);
	
	ДоступныеРежимы = Новый Массив;
	ДоступныеРежимы.Добавить(РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
	Если ТипФормы = ТипФормыОтчета.Настройка Тогда 
		ДоступныеРежимы.Добавить(РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный);
	КонецЕсли;
	
	НедоступныеЭлементыСтруктуры = Новый Соответствие;
	НедоступныеЭлементыСтруктуры.Вставить(Тип("ГруппировкаКомпоновкиДанных"), ТипФормыОтчета.Настройка);
	НедоступныеЭлементыСтруктуры.Вставить(Тип("ГруппировкаТаблицыКомпоновкиДанных"), ТипФормыОтчета.Настройка);
	НедоступныеЭлементыСтруктуры.Вставить(Тип("ГруппировкаДиаграммыКомпоновкиДанных"), ТипФормыОтчета.Настройка);
	НедоступныеЭлементыСтруктуры.Вставить(Тип("ТаблицаКомпоновкиДанных"), ТипФормыОтчета.Настройка);
	НедоступныеЭлементыСтруктуры.Вставить(Тип("ДиаграммаКомпоновкиДанных"), ТипФормыОтчета.Настройка);
	
	СинхронизируемыеСвойства = Новый Соответствие;
	//СинхронизируемыеСвойства.Вставить(Тип("ЭлементОтбораКомпоновкиДанных"), "ЛевоеЗначение, Представление");
	СинхронизируемыеСвойства.Вставить(Тип("ЭлементУсловногоОформленияКомпоновкиДанных"), "Представление");
	
	#КонецОбласти
	
	#Область ЗаполнениеСтруктуры
	
	Сведения = СведенияОПользовательскихНастройках(КомпоновщикНастроек.Настройки);
	ПользовательскиеНастройки = КомпоновщикНастроек.ПользовательскиеНастройки;
	Для Каждого ЭлементПользовательскойНастройки Из ПользовательскиеНастройки.Элементы Цикл 
		попытка 
			НайденныеСведения = Сведения[ЭлементПользовательскойНастройки.ИдентификаторПользовательскойНастройки];
			ЭлементНастройки = НайденныеСведения.ЭлементНастройки;
			
			Если ЭлементНастройки = Неопределено
				Или НедоступныеЭлементыСтруктуры.Получить(ТипЗнч(ЭлементНастройки)) = ТипФормы
				Или ДоступныеРежимы.Найти(ЭлементНастройки.РежимОтображения) = Неопределено Тогда 
				Продолжить;
			КонецЕсли;
			
			ТипЭлемента = ТипЗнч(ЭлементНастройки);
			Если ТипЭлемента = Тип("ЭлементУсловногоОформленияКомпоновкиДанных")
				И Не ЗначениеЗаполнено(ЭлементНастройки.Представление) Тогда 
				ЭлементНастройки.Представление = ОтчетыКлиентСервер.ПредставлениеЭлементаУсловногоОформления(
					ЭлементНастройки, Неопределено, "");
			КонецЕсли;
			
			Свойства = СинхронизируемыеСвойства[ТипЭлемента];
			Если Свойства <> Неопределено Тогда 
				ЗаполнитьЗначенияСвойств(ЭлементПользовательскойНастройки, ЭлементНастройки, Свойства);
			КонецЕсли;
			
			Поле = Поля.Добавить();
			Поле.ИдентификаторНастройки = ЭлементПользовательскойНастройки.ИдентификаторПользовательскойНастройки;
			Поле.ИндексНастройки = ПользовательскиеНастройки.Элементы.Индекс(ЭлементПользовательскойНастройки);
			Поле.Настройки = НайденныеСведения.Настройки;
			Поле.ЭлементНастройки = ЭлементНастройки;
			Поле.ОписаниеНастройки = НайденныеСведения.ОписаниеНастройки;
			Поле.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Авто;
			
			Если НедоступныеЭлементыСтруктуры.Получить(ТипЗнч(ЭлементНастройки)) <> Неопределено Тогда 
				Представление = ЭлементНастройки.ПараметрыВывода.Элементы.Найти("TITLE");
				Если Представление <> Неопределено
					И ЗначениеЗаполнено(Представление.Значение) Тогда 
					Поле.Представление = Представление.Значение;
				КонецЕсли;
			КонецЕсли;
			
			Если ТипЗнч(ЭлементНастройки) = Тип("ЭлементУсловногоОформленияКомпоновкиДанных") Тогда 
				Поле.ИдентификаторГруппы = "Дополнительно";
			КонецЕсли;
		Исключение
		КонецПопытки;
	КонецЦикла;
	
	Если Поля.Найти("Дополнительно", "ИдентификаторГруппы") <> Неопределено Тогда 
		СвойстваЭлементов.Группы.Вставить("Дополнительно", СвойстваГруппыЭлементовФормы());
	КонецЕсли;
	
	Поля.Сортировать("ИндексНастройки");
	СвойстваЭлементов.Поля = Поля;
	
	Если ДополнительныеПараметры.События.ПриОпределенииСвойствЭлементовФормыНастроек Тогда 
		ОтчетОбъект(ДополнительныеПараметры.ПолноеИмя).ПриОпределенииСвойствЭлементовФормыНастроек(
			ТипФормы, СвойстваЭлементов, ПользовательскиеНастройки.Элементы);
	КонецЕсли;
	
	#КонецОбласти
	
	Возврат СвойстваЭлементов;
КонецФункции
