
#Область ПрограммныйИнтерфейс

// Процедура заполнения структуры настроек при выгрузке методом GetSettings web-сервиса EquipmentService
// так же используется при выгрузке на ККМ Offline при использовании драйвера 1С:ККМ Offline.
// Для заполнения используются подготовленные пустые структуры получаемые функциями из модуля МенеджерОборудованияСервисыКлиентСервер.
// 
Процедура ЗаполнитьНастройкиУстройства(ИДУстройства, Настройки) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПодключаемоеОборудование.ПравилоОбмена
	|ИЗ
	|	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
	|ГДЕ
	|	ПодключаемоеОборудование.УстройствоИспользуется
	|	И ПодключаемоеОборудование.ИдентификаторWebСервисОборудования = &ИдентификаторWebСервисОборудования
	|	И ПодключаемоеОборудование.ТипОборудования = ЗНАЧЕНИЕ(Перечисление.ТипыПодключаемогоОборудования.WebСервисОборудование)";
	
	Запрос.УстановитьПараметр("ИдентификаторWebСервисОборудования", ИДУстройства);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если НЕ Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	ПравилоОбмена = Выборка.ПравилоОбмена;
	ПодключаемоеОборудованиеOfflineВызовСервера.ЗаполнитьСтруктуруНастроекПоПравилуОбмена(Настройки, ПравилоОбмена);
	
КонецПроцедуры

//Процедура заполнения структуры товара при выгрузке методом GetGood web-сервиса EquipmentService
//
Процедура ЗагрузитьТовар (ИДУстройства, СтруктураТовара, Штрихкод) Экспорт
	
	ТолькоИзмененные = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПодключаемоеОборудование.Ссылка
	|ИЗ
	|	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
	|ГДЕ
	|	ПодключаемоеОборудование.УстройствоИспользуется
	|	И ПодключаемоеОборудование.ИдентификаторWebСервисОборудования = &ИдентификаторWebСервисОборудования
	|	И ПодключаемоеОборудование.ТипОборудования = ЗНАЧЕНИЕ(Перечисление.ТипыПодключаемогоОборудования.WebСервисОборудование)";
	
	Запрос.УстановитьПараметр("ИдентификаторWebСервисОборудования", ИДУстройства);
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если НЕ Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	Параметры = ПодключаемоеОборудованиеOfflineВызовСервера.ПолучитьПараметрыУстройства(Выборка.Ссылка);
	Параметры.Вставить("ЧастичнаяВыгрузка", ТолькоИзмененные);
	
	ТаблицаТоваров = ПодключаемоеОборудованиеOfflineВызовСервера.ПолучитьТоварыКВыгрузкеПоШтрихкоду(Выборка.Ссылка, Параметры, Штрихкод);
	
	ПодключаемоеОборудованиеOfflineВызовСервера.ЗаполнитьСтруктуруПрайсЛистаИзДанныхКВыгрузке(СтруктураТовара, ТаблицаТоваров);
	
КонецПроцедуры

// Процедура заполнения структуры прайс-листа при выгрузке методом GetPriceList web-сервиса EquipmentService
// так же используется при выгрузке на ККМ Offline при использовании драйвера 1С:ККМ Offline.
// Для заполнения используются подготовленные пустые структуры получаемые функциями из модуля МенеджерОборудованияСервисыКлиентСервер.
// 
Процедура ЗаполнитьПрайсЛист(ИДУстройства, СтруктураПрайсЛиста) Экспорт
	
	ТолькоИзмененные = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПодключаемоеОборудование.Ссылка
	|ИЗ
	|	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
	|ГДЕ
	|	ПодключаемоеОборудование.УстройствоИспользуется
	|	И ПодключаемоеОборудование.ИдентификаторWebСервисОборудования = &ИдентификаторWebСервисОборудования
	|	И ПодключаемоеОборудование.ТипОборудования = ЗНАЧЕНИЕ(Перечисление.ТипыПодключаемогоОборудования.WebСервисОборудование)";
	
	Запрос.УстановитьПараметр("ИдентификаторWebСервисОборудования", ИДУстройства);
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если НЕ Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	Параметры = ПодключаемоеОборудованиеOfflineВызовСервера.ПолучитьПараметрыУстройства(Выборка.Ссылка);
	Параметры.Вставить("ЧастичнаяВыгрузка", ТолькоИзмененные);
	ТаблицаТоваров = ПодключаемоеОборудованиеOfflineВызовСервера.ПолучитьТоварыКВыгрузке(Выборка.Ссылка, Параметры);
	
	ПодключаемоеОборудованиеOfflineВызовСервера.ЗаполнитьСтруктуруПрайсЛистаИзДанныхКВыгрузке(СтруктураПрайсЛиста, ТаблицаТоваров);
	
КонецПроцедуры

// Процедура заполнения ответа web-сервиса EquipmentService на вызов метода PostDocs.
// В процедуру, через параметр "Документы", передается структура принимаемых документов.
// 
Процедура ЗагрузитьДокумент(ИДУстройства, СтруктураОтвета, СтруктураДокументов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПодключаемоеОборудование.Ссылка
	|ИЗ
	|	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
	|ГДЕ
	|	ПодключаемоеОборудование.УстройствоИспользуется
	|	И ПодключаемоеОборудование.ИдентификаторWebСервисОборудования = &ИдентификаторWebСервисОборудования
	|	И ПодключаемоеОборудование.ТипОборудования = ЗНАЧЕНИЕ(Перечисление.ТипыПодключаемогоОборудования.WebСервисОборудование)";
	
	Запрос.УстановитьПараметр("ИдентификаторWebСервисОборудования", ИДУстройства);
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если НЕ Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	Устройство = Выборка.Ссылка;
	
	Если СтруктураДокументов.ТипДокумента = "ОтчетОПродажах" Тогда
		
		МассивДокументов = ПодключаемоеОборудованиеOfflineВызовСервера.ПриЗагрузкеОтчетаОРозничныхПродажах(Выборка.Ссылка, СтруктураДокументов.Документы, Истина);
		
		Если МассивДокументов = Неопределено Тогда
			СтруктураОтвета.Успешно = Ложь;
			СтруктураОтвета.Описание = НСтр("ru = 'Ошибка загрузки. Принимающая сторона не смогла обработать принятый отчет.'");
		Иначе
			СтруктураОтвета.Успешно = Истина;
			СтруктураОтвета.Описание = НСтр("ru = 'Загружено отчетов о продажах:'") + " " + МассивДокументов.Количество();
		КонецЕсли;
		
	ИначеЕсли СтруктураДокументов.ТипДокумента = "ОтчетОЦенниках" Тогда 
		
		Если Устройство.СохранятьЦенникиВКонфигурации Тогда
			
			ВыполненоУспешно = Ложь;
			
			ПодключаемоеОборудованиеOfflineВызовСервера.ЗагрузитьЦенники(Выборка.Ссылка, СтруктураДокументов, ВыполненоУспешно); 
			
			Если ВыполненоУспешно = Ложь Тогда
				СтруктураОтвета.Успешно = Ложь;
				СтруктураОтвета.Описание = "Ошибка загрузки. Принимающая сторона не смогла обработать принятый отчет";
			Иначе
				СтруктураОтвета.Успешно = Истина;
				СтруктураОтвета.Описание = "Ценники загружены";
			КонецЕсли;
			
		Иначе
			
			МассивСозданныхДокументов = Новый Массив;
			
			Для Каждого Документ ИЗ СтруктураДокументов.Документы Цикл
			
				Товары = Новый ТаблицаЗначений;
				Товары.Колонки.Добавить("Номенклатура");
				Товары.Колонки.Добавить("Характеристика");
				Товары.Колонки.Добавить("Упаковка");
				Товары.Колонки.Добавить("Штрихкод");
				Товары.Колонки.Добавить("КоличествоЦенников");
				
				ДанныеОТоваре = Новый Структура;
				
				Для Каждого Строка Из Документ.Товары Цикл
					
					ПодключаемоеОборудованиеOfflineВызовСервера.ПолучитьДанныеОТоваре(Строка, ДанныеОТоваре);
					СтрокаТовар = Товары.Добавить();
					СтрокаТовар.Номенклатура =       ДанныеОТоваре.Номенклатура;
					СтрокаТовар.Характеристика =     ДанныеОТоваре.Характеристика;
					СтрокаТовар.Упаковка =           ДанныеОТоваре.Упаковка;
					СтрокаТовар.Штрихкод =           Строка.Штрихкод;
					
				КонецЦикла;
				
			КонецЦикла;
			Результат = УправлениеПечатьюРТ.ПечатьЦенников(Товары, Устройство);
			СтруктураОтвета.Успешно = Истина;
			СтруктураОтвета.Описание = "Ценники распечатаны";
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполнения массива типов документов, поддерживаемых конфигурацией.
// Вызывается методом GetDocTypes web-сервиса EquipmentService.
// 
Процедура ЗаполнитьТипыДокументов(МассивТипов) Экспорт
	
	ТипОтчетОПродажах = МенеджерОборудованияСервисыКлиентСервер.ПолучитьСтруктуруЗаписиМассиваТиповДокументов();
	ТипОтчетОПродажах.ТипДокумента   = "SalesReport";
	ТипОтчетОПродажах.МожноПолучать  = Ложь;
	ТипОтчетОПродажах.МожноЗагружать = Истина;
	
	МассивТипов.Добавить(ТипОтчетОПродажах);
	
КонецПроцедуры

#КонецОбласти