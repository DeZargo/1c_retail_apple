#Область ПрограммныйИнтерфейс

#Область ФормаПоискНоменклатурыПоШтрихкоду

// См. РаботаСНоменклатуройКлиентПереопределяемый.ПоискНоменклатурыПоШтрихкодуПриОткрытии.
Процедура ПоискНоменклатурыПоШтрихкодуПриОткрытии(Форма) Экспорт
	
	#Если Не ВебКлиент Тогда
		Сигнал();
	#КонецЕсли
	
	// Подключение сканера штрихкодов
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, Форма, "СканерШтрихкода");
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ПоискНоменклатурыПоШтрихкодуПриЗакрытии.
Процедура ПоискНоменклатурыПоШтрихкодуПриЗакрытии(Форма, ЗавершениеРаботы) Экспорт
	
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, Форма);
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ПоискНоменклатурыПоШтрихкодуНоменклатураПриИзменении.
Процедура ПоискНоменклатурыПоШтрихкодуНоменклатураПриИзменении(Форма, Элемент) Экспорт
	
	ТекущиеДанные = Форма.Элементы.ШтрихкодыНоменклатуры.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) Тогда
		
		РеквизитыНоменклатуры = ОбщегоНазначенияРТВызовСервера.ПолучитьЗначенияРеквизитовОбъекта(
			ТекущиеДанные.Номенклатура,
			Новый Структура("ЕдиницаИзмерения, ВидНоменклатуры"));
		
		Если ЗначениеЗаполнено(РеквизитыНоменклатуры.ВидНоменклатуры) Тогда
			
			ИспользоватьХарактеристики = ОбщегоНазначенияРТВызовСервера.
				ЗначениеРеквизитаОбъекта(РеквизитыНоменклатуры.ВидНоменклатуры, "ИспользоватьХарактеристики");
			
			ТекущиеДанные.ХарактеристикиИспользуются = ИспользоватьХарактеристики;
			
		КонецЕсли;
		
		ТекущиеДанные.ЕдиницаИзмерения = РеквизитыНоменклатуры.ЕдиницаИзмерения;
	Иначе
		ТекущиеДанные.ЕдиницаИзмерения = ПредопределенноеЗначение("Справочник.БазовыеЕдиницыИзмерения.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ПоискНоменклатурыПоШтрихкодуХарактеристикаСоздание.
Процедура ПоискНоменклатурыПоШтрихкодуХарактеристикаСоздание(Форма, Элемент, СтандартнаяОбработка) Экспорт
	
	ОбработкаТабличнойЧастиТоварыКлиент.СоздатьХарактеристикуНоменклатуры(
		Форма, Элемент, СтандартнаяОбработка, Форма.Элементы.ШтрихкодыНоменклатуры.ТекущиеДанные);
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ПоискНоменклатурыПоШтрихкодуХарактеристикаНачалоВыбора.
Процедура ПоискНоменклатурыПоШтрихкодуХарактеристикаНачалоВыбора(Форма, Элемент, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	ОбработкаТабличнойЧастиТоварыКлиент.ВыбратьХарактеристикуНоменклатуры(
		Форма, Элемент, СтандартнаяОбработка, Форма.Элементы.ШтрихкодыНоменклатуры.ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

// См. РаботаСНоменклатуройКлиентПереопределяемый.СоздатьНоменклатуруИнтерактивно.
Процедура СоздатьНоменклатуруИнтерактивно(ПараметрыФормы, ОписаниеОповещенияОЗакрытии) Экспорт
	
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаЭлемента", ПараметрыФормы ,,,,, ОписаниеОповещенияОЗакрытии);
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.СоздатьВидНоменклатурыИнтерактивно.
Процедура СоздатьВидНоменклатурыИнтерактивно(ПараметрыФормы, ОписаниеОповещенияОЗакрытии) Экспорт
	
	ОткрытьФорму("Справочник.ВидыНоменклатуры.Форма.ФормаЭлемента", 
	ПараметрыФормы, , , , , ОписаниеОповещенияОЗакрытии, РежимОткрытияОкнаФормы.Независимый);
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ОткрытьФормуДополнительногоЗначения.
Процедура ОткрытьФормуДополнительногоЗначения(ПараметрыФормы, Форма) Экспорт
	
	ИспользоватьДополнительныеРеквизитыИСведения = ОбщегоНазначенияРТВызовСервера.ФункциональнаяОпция(
													"ИспользоватьДополнительныеРеквизитыИСведения");
	Если ИспользоватьДополнительныеРеквизитыИСведения Тогда
		
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("Владелец",     ПараметрыФормы.РеквизитСсылка);
		ЗначенияЗаполнения.Вставить("Наименование", ПараметрыФормы.Наименование);
		
		ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
		
		ОткрытьФорму("Справочник.ЗначенияСвойствОбъектов.Форма.ФормаЭлемента", ПараметрыФормы, Форма);
		
	Иначе
		Текст = НСтр("ru = 'Отключено использование дополнительных реквизитов'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
	КонецЕсли;
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ОткрытьФормуДополнительногоРеквизита.
Процедура ОткрытьФормуДополнительногоРеквизита(ПараметрыФормы, Владелец) Экспорт
	
	ИспользоватьДополнительныеРеквизитыИСведения = ОбщегоНазначенияРТВызовСервера.ФункциональнаяОпция(
												   "ИспользоватьДополнительныеРеквизитыИСведения");
	Если ИспользоватьДополнительныеРеквизитыИСведения Тогда
		ОткрытьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.Форма.ФормаЭлемента", ПараметрыФормы, Владелец);
	Иначе
		Текст = НСтр("ru = 'Отключено использование дополнительных реквизитов'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
	КонецЕсли;
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ОткрытьФормуНоменклатуры.
Процедура ОткрытьФормуНоменклатуры(НоменклатураСсылка, Владелец) Экспорт
	
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаЭлемента", 
		Новый Структура("Ключ", НоменклатураСсылка), Владелец);
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ОткрытьФормуВидаНоменклатуры.
Процедура ОткрытьФормуВидаНоменклатуры(ВидНоменклатурыСсылка, Владелец) Экспорт
	
	ОткрытьФорму("Справочник.ВидыНоменклатуры.Форма.ФормаЭлемента", 
		Новый Структура("Ключ", ВидНоменклатурыСсылка), Владелец);
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ОткрытьФормуСпискаВидаНоменклатуры.
Процедура ОткрытьФормуСпискаВидаНоменклатуры(ВидНоменклатурыСсылка, Владелец) Экспорт
	
	ОткрытьФорму("Справочник.ВидыНоменклатуры.Форма.ФормаСписка",,Владелец);
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.ОткрытьФормуСпискаНоменклатуры.
Процедура ОткрытьФормуСпискаНоменклатуры(НоменклатураСсылка, Владелец) Экспорт
	
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаСписка",,Владелец);
	
КонецПроцедуры

// Поиск номенклатуры в сервисе 1С:Номенклатура по штрихкоду.
//  В случае успеха открывается карточка номенклатуры, из которой можно загрузить номенклатуру
//  в информационную базу.
//
// Параметры:
//  ШтрихКод			 - Строка	 - строка штрихкода.
//  Форма				 - УправляемаяФорма - форма владелец.
//  ОповещениеОЗакрытии	 - ОписаниеОповещения - оповещение о закрытии окна. 
//                         При закрытии формы карточки номенклатуры возвращается структура с ключом: 
//                         СозданнаяНоменклатура - массив ссылок на созданную номенклатуру.
//
Функция НайтиНоменклатуруПоШтрихкодуВСервисе(ШтрихКод) Экспорт
	
	Если Не РаботаСНоменклатуройКлиент.ДоступнаФункциональностьПодсистемы() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ИспользоватьПоискПоШтрихкоду 
		= РаботаСНоменклатуройСлужебныйВызовСервера.НастройкиПодсистемы().ИспользоватьПоискПоШтрихкодуВСервисе;
		
	Если НЕ ИспользоватьПоискПоШтрихкоду Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ИдентификаторыНоменклатуры 
		= РаботаСНоменклатуройСлужебныйВызовСервера.ПолучитьДанныеПоНоменклатуреПоШтрихкоду(ШтрихКод);
	
	Если Не ЗначениеЗаполнено(ИдентификаторыНоменклатуры) Тогда
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Номенклатура не найдена'"),,
			СтрШаблон(НСтр("ru = 'По штрихкоду %1 номенклатура не найдена.'"), ШтрихКод),,
			СтатусОповещенияПользователя.Информация);
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ИдентификаторыНоменклатуры
	
КонецФункции

#КонецОбласти
