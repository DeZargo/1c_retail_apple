#Область СлужебныйПрограмныйИнтерфейс

// Возвращает через второй параметр признак наличия табачной продукции.
//
// Параметры:
//  Коллекция             - ДанныеФормыКоллекция - ТЧ с товарами.
//  ЕстьТабачнаяПродукция - Булево - Исходящий, признак наличия табачной продукции.
Процедура ЕстьТабачнаяПродукцияВКоллекции(Коллекция, ЕстьТабачнаяПродукция) Экспорт
	
	ПроверкаИПодборПродукцииМОТПРТ.ЕстьТабачнаяПродукцияВКоллекции(Коллекция, ЕстьТабачнаяПродукция);
	
КонецПроцедуры

// Возвращает через второй параметр таблицу товаров документа.
//
// Параметры:
//  Контекст             - УправляемаяФорма, ДокументСсылка - контекст определения типа документа.
//  ТаблицаТабачнойПродукции - ТаблицаЗначений - Исходящий, таблица с товарами документа.
Процедура ПриОпределенииТабачнойПродукцииДокумента(Контекст, ТаблицаТабачнойПродукции) Экспорт
	
	ТаблицаТабачнойПродукции = ПроверкаИПодборПродукцииМОТПРТ.ТаблицаТабачнойПродукцииДокумента(Контекст);
		
КонецПроцедуры

// Предназначена для реализации функциональности по отражению результатов проверки и подбора в документе, из которого была вызвана соотвествующая форма.
// 
// Параметры:
//  ПараметрыОкончанияСканирования - (См. ПроверкаИПодборМОТП.ЗафиксироватьРезультатПроверкиИПодбора).
Процедура ОтразитьРезультатыСканированияВДокументе(ПараметрыОкончанияСканирования) Экспорт
	
	ИнтеграцияМОТПРТ.ОтразитьРезультатыСканированияВДокументе(ПараметрыОкончанияСканирования);
	
КонецПроцедуры

// Получает сформированный ранее Акт о расхождениях для переданного документа.
// 
// Параметры:
//  Документ - ДокументСсылка - ссылка на документ, для которого необходимо получить Акт о расхождениях:
//  АктОРасхождениях - ДокументСсылка - ссылка на Акт о расхождениях:
Процедура ПолучитьСформированныйАктОРасхождениях(Документ, АктОРасхождениях) Экспорт
	
	АктОРасхождениях = ИнтеграцияМОТПРТ.СформированныйАктОРасхождениях(Документ);
	
КонецПроцедуры

// Заполняет в табличной части служебные реквизиты, например: признак использования характеристик номенклатуры.
//
// Параметры:
//  Форма - УправляемаяФорма - Форма.
//  ТабличнаяЧасть - ДанныеФормыКоллекция, ТаблицаЗначений - таблица для заполнения.
Процедура ЗаполнитьСлужебныеРеквизитыВКоллекции(Форма, ТабличнаяЧасть) Экспорт
	
	ПроверкаИПодборПродукцииМОТПРТ.ЗаполнитьСлужебныеРеквизитыВКоллекции(Форма, ТабличнаяЧасть);
	
КонецПроцедуры

#Область СерииНоменклатуры

// Определяет параметры указания серий для товаров, указанных в форме.
//
// Параметры:
//  Форма - УправляемаяФорма - форма с товарами, для которой необходимо определить параметры указания серий.
//  ПараметрыУказанияСерий - Структура - заполняемые параметры указания серий, состав полей структуры задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
Процедура ЗаполнитьПараметрыУказанияСерий(Форма, ПараметрыУказанияСерий) Экспорт
	
	Если Не ПараметрыУказанияСерий.Свойство("ИспользоватьСерииНоменклатуры") Тогда 
		Возврат;
	КонецЕсли;
	
	Если Форма.ИмяФормы = "Обработка.ПроверкаИПодборТабачнойПродукцииМОТП.Форма.ПроверкаИПодбор" Тогда 
		ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры = Ложь;
	КонецЕсли;
	
КонецПроцедуры

// Формирует текст запроса для расчета статусов указания серий
// Параметры:
//  ТекстЗапроса           - Строка    - формируемый текст запроса.
//  ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
Процедура СформироватьТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий, ТекстЗапроса) Экспорт
	
	
КонецПроцедуры

// (См. НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий)
Процедура ЗаполнитьСтатусыУказанияСерий(Форма, ПараметрыУказанияСерий) Экспорт
	
	
КонецПроцедуры

// Возвращает через параметр наличие права на добавление элементов справочника СерииНоменклатуры
//
// Параметры:
//  ПравоДобавлениеСерий - Булево - исходящий, наличие права на добавление.
Процедура ОпределитьПравоДобавлениеСерий(ПравоДобавлениеСерий) Экспорт
	
	
КонецПроцедуры

// Устанавливает режим просмотра (доступности, для команд) элементам формы.
//   Переопределение необходимо использовать для совместной работы с аналогичными механизмами.
//   Обработанные здесь реквизиты мледует удалить из массива "Блокируемые элементы".
// 
// Параметры:
//  Форма               - УправляемаяФорма - форма в которой производится изменение доступности
//  БлокируемыеЭлементы - Массив - наименования реквизитов
//  Заблокировать       - Булево - заблокировать или разблокировать реквизиты
Процедура УстановитьТолькоПросмотрЭлементов(
		Форма,
		БлокируемыеЭлементы,
		Заблокировать) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

