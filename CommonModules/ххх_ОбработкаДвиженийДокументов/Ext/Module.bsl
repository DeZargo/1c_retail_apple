

процедура ЗаполнитьДвиженияПоПартиямТовара (Объект)	
	Движения=Объект.Движения.ххх_ПартииТоваров;
	Если ТипЗнч(Объект)=Тип("ДокументОбъект.ВозвратТоваровПоставщику") Тогда
		ЗаполнитьДвиженияПоПартиямТовараРасходВозвратТоваровПоставщику(Объект,Движения);
	иначеЕсли ТипЗнч(Объект)=Тип("ДокументОбъект.ПоступлениеТоваров") или 
			ТипЗнч(Объект)=Тип("ДокументОбъект.ОприходованиеТоваров") или
			ТипЗнч(Объект)=Тип("ДокументОбъект.ВозвратТоваровОтПокупателя") Тогда
				ЗаполнитьДвиженияПоПартиямТовараПриходСтандарт(Объект,Движения);
	ИначеЕсли ТипЗнч(Объект)=Тип("ДокументОбъект.РеализацияТоваров") или
			ТипЗнч(Объект)=Тип("ДокументОбъект.СписаниеТоваров") или
			ТипЗнч(Объект)=Тип("ДокументОбъект.ЧекККМ") или
			ТипЗнч(Объект)=Тип("ДокументОбъект.ОтчетОРозничныхПродажах") Тогда
				ЗаполнитьДвиженияПоПартиямТовараРасходСтандарт(Объект,Движения,Объект.Товары.выгрузить());
	КонецЕсли;	
	наб=РегистрыНакопления.ххх_ПартииТоваров.СоздатьНаборЗаписей();	
	наб.Отбор.Регистратор.установить(Объект.ссылка);
	Наб.прочитать();
	наб.загрузить(Движения.выгрузить());
	наб.записать();
	
КонецПроцедуры


процедура ЗаполнитьДвиженияПоПартиямТовараПриходСтандарт(Объект,Движения)	
	Запрос=Новый запрос;
	запрос.УстановитьПараметр("тч",Объект.Товары.Выгрузить());
	запрос.УстановитьПараметр("номка",Объект.Товары.ВыгрузитьКолонку("Номенклатура"));
	запрос.УстановитьПараметр("Дата",Новый граница(Новый моментвремени(Объект.Дата,объект.ссылка),ВидГраницы.Исключая));
	запрос.УстановитьПараметр("Организация",Объект.Организация);
	запрос.УстановитьПараметр("Магазин",Объект.Магазин);
	запрос.УстановитьПараметр("Склад",Объект.Магазин.СкладПродажи);
	Запрос.Текст="ВЫБРАТЬ
	             |	Тч.Номенклатура КАК Номенклатура,
	             |	Тч.Количество КАК Количество,
	             |	Тч.Цена КАК Цена
	             |ПОМЕСТИТЬ тч
	             |ИЗ
	             |	&Тч КАК Тч
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	тч.Номенклатура КАК Номенклатура,
	             |	тч.Количество КАК Количество,
	             |	тч.Цена КАК Цена,
	             |	ЕСТЬNULL(ххх_ПартииТоваровОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток
	             |ИЗ
	             |	тч КАК тч
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ххх_ПартииТоваров.Остатки КАК ххх_ПартииТоваровОстатки
	             |		ПО тч.Номенклатура = ххх_ПартииТоваровОстатки.Номенклатура
	             |			И (ххх_ПартииТоваровОстатки.КоличествоОстаток < 0)
	             |			И (ххх_ПартииТоваровОстатки.Цена = 0)
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	КоличествоОстаток,
	             |	Цена
	             |ИТОГИ
	             |	СУММА(Количество),
	             |	МАКСИМУМ(КоличествоОстаток)
	             |ПО
	             |	Номенклатура,
	             |	Цена";
				 
	ВыборкаТоп=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);		//           Запрос.выполнить().выгрузить()	 
	
	Пока ВыборкаТоп.Следующий()Цикл
		КоличествоТотал=ВыборкаТоп.количество;
		количествоОстаток=-ВыборкаТоп.количествоОстаток;
		выборкаМид=ВыборкаТоп.выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		пока выборкаМид.Следующий()Цикл
			если КоличествоТотал<=0 Тогда
				прервать;
			КонецЕсли;
			Выборка=выборкаМид.выбрать();
			Пока выборка.Следующий()Цикл
				Количество=выборка.количество;
				КоличествоТотал=КоличествоТотал-количество;
				Если количествоОстаток<>0 тогда					
					сторноНеОбеспеченногоРасхода=Движения.добавить();
					сторноНеОбеспеченногоРасхода.ВидДвижения=ВидДвиженияНакопления.Расход;
					сторноНеОбеспеченногоРасхода.период=Объект.Дата;
					сторноНеОбеспеченногоРасхода.Организация=Объект.Организация;
					сторноНеОбеспеченногоРасхода.номенклатура=выборка.номенклатура;
					сторноНеОбеспеченногоРасхода.Магазин=Объект.Магазин;
					сторноНеОбеспеченногоРасхода.Склад=Объект.Магазин.СкладПродажи;			
								
					ОбеспечениеНеобеспеченногоРасхода=Движения.добавить();
					ОбеспечениеНеобеспеченногоРасхода.ВидДвижения=ВидДвиженияНакопления.Приход;
					ОбеспечениеНеобеспеченногоРасхода.период=Объект.Дата;
					ОбеспечениеНеобеспеченногоРасхода.Организация=Объект.Организация;
					ОбеспечениеНеобеспеченногоРасхода.номенклатура=выборка.номенклатура;
					ОбеспечениеНеобеспеченногоРасхода.Магазин=Объект.Магазин;
					ОбеспечениеНеобеспеченногоРасхода.Склад=Объект.Магазин.СкладПродажи;
					ОбеспечениеНеобеспеченногоРасхода.ПартияТоваров=оБЪЕКТ.ССЫЛКА;
					ОбеспечениеНеобеспеченногоРасхода.Цена=выборка.цена;			
					
					СписаниеОбеспеченногоРасхода=Движения.добавить();
					СписаниеОбеспеченногоРасхода.ВидДвижения=ВидДвиженияНакопления.Расход;
					СписаниеОбеспеченногоРасхода.период=Объект.Дата;
					СписаниеОбеспеченногоРасхода.Организация=Объект.Организация;
					СписаниеОбеспеченногоРасхода.номенклатура=выборка.номенклатура;
					СписаниеОбеспеченногоРасхода.Магазин=Объект.Магазин;
					СписаниеОбеспеченногоРасхода.Склад=Объект.Магазин.СкладПродажи;
					СписаниеОбеспеченногоРасхода.ПартияТоваров=оБЪЕКТ.ССЫЛКА;
					СписаниеОбеспеченногоРасхода.Цена=выборка.цена;
			
					Если количество<=количествоОстаток тогда	
						сторноНеОбеспеченногоРасхода.количество=-количество;
						ОбеспечениеНеобеспеченногоРасхода.количество=количество;
						СписаниеОбеспеченногоРасхода.количество=количество;
						количествоОстаток=количествоОстаток-количество;
						Количество=0;
					Иначе
						СторноНеОбеспеченногоРасхода.количество=-количествоОстаток;
						ОбеспечениеНеобеспеченногоРасхода.количество=количествоОстаток;
						СписаниеОбеспеченногоРасхода.количество=количествоОстаток;	
						
						количество=количество-количествоОстаток;

						Приход=Движения.добавить();
						Приход.ВидДвижения=ВидДвиженияНакопления.Приход;
						Приход.период=Объект.Дата;
						Приход.Организация=Объект.Организация;
						Приход.номенклатура=выборка.номенклатура;
						Приход.Магазин=Объект.Магазин;
						Приход.Склад=Объект.Магазин.СкладПродажи;
						Приход.ПартияТоваров=оБЪЕКТ.ССЫЛКА;
						Приход.Цена=выборка.цена;
						Приход.количество=количество;
						количествоОстаток=0;
						количество=0;
					КонецЕсли;				
				ИначеЕсли Количество>0 Тогда
					Приход=Движения.добавить();
					Приход.ВидДвижения=ВидДвиженияНакопления.приход;
					Приход.период=Объект.Дата;
					Приход.Организация=Объект.Организация;
					Приход.номенклатура=выборка.номенклатура;
					Приход.Магазин=Объект.Магазин;
					Приход.Склад=Объект.Магазин.СкладПродажи;
					Приход.ПартияТоваров=оБЪЕКТ.ССЫЛКА;
					Приход.Цена=выборка.цена;	
					Приход.количество=количество;
					количество=0;
				КонецЕсли;
			КонецЦикла;
		конеццикла	
	КонецЦикла;	

	
	

КонецПроцедуры



процедура ЗаполнитьДвиженияПоПартиямТовараРасходСтандарт(Объект,Движения,Товары)
	Запрос=Новый запрос;
	запрос.УстановитьПараметр("тч",Товары);
	запрос.УстановитьПараметр("номка",Объект.Товары.ВыгрузитьКолонку("Номенклатура"));
	запрос.УстановитьПараметр("Дата",Объект.Дата);
	запрос.УстановитьПараметр("Организация",Объект.Организация);
	запрос.УстановитьПараметр("Магазин",Объект.Магазин);
	запрос.УстановитьПараметр("Склад",Объект.Магазин.СкладПродажи);
	Запрос.Текст="ВЫБРАТЬ
	             |	Тч.Номенклатура КАК Номенклатура,
	             |	Тч.Количество КАК Количество,
	             |	Тч.Цена КАК Цена
	             |ПОМЕСТИТЬ тч
	             |ИЗ
	             |	&Тч КАК Тч
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	тч.Номенклатура КАК Номенклатура,
	             |	тч.Количество КАК Количество,
	             |	ЕСТЬNULL(ххх_ПартииТоваровОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	             |	ЕСТЬNULL(ххх_ПартииТоваровОстатки.Цена, 0) КАК Цена,
	             |	ЕСТЬNULL(ххх_ПартииТоваровОстатки.ПартияТоваров, ЗНАЧЕНИЕ(Документ.ПоступлениеТоваров.пустаяссылка)) КАК Партия,
	             |	тч.Цена КАК ЦенаДок
	             |ИЗ
	             |	тч КАК тч
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ххх_ПартииТоваров.Остатки(
	             |				&Дата,
	             |				Номенклатура В (&номка)
	             |					И Магазин = &Магазин
	             |					И Организация = &Организация
	             |					И Склад = &Склад
	             |					И НЕ(ПартияТоваров ЕСТЬ NULL
	             |							ИЛИ ПартияТоваров = НЕОПРЕДЕЛЕНО)) КАК ххх_ПартииТоваровОстатки
	             |		ПО тч.Номенклатура = ххх_ПартииТоваровОстатки.Номенклатура
	             |			И (ххх_ПартииТоваровОстатки.КоличествоОстаток > 0)
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	ххх_ПартииТоваровОстатки.ПартияТоваров.Дата
	             |ИТОГИ
	             |	МАКСИМУМ(Количество),
	             |	МАКСИМУМ(ЦенаДок)
	             |ПО
	             |	Номенклатура";
				                                                                                 	//           Запрос.выполнить().выгрузить()	 
	ВыборкаТоп=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);			 
				 
	Пока ВыборкаТоп.Следующий()Цикл
		Количество=выборкаТоп.количество;
		выборка=ВыборкаТоп.выбрать();
		Пока выборка.Следующий()Цикл
			Если количество<=0 Тогда
				прервать;
			КонецЕсли;
			стр=Движения.добавить();
			стр.ВидДвижения=ВидДвиженияНакопления.Расход;
			стр.период=Объект.Дата;
			стр.Организация=Объект.Организация;
			стр.номенклатура=выборка.номенклатура;
			стр.Магазин=Объект.Магазин;
			стр.Склад=Объект.Магазин.СкладПродажи;
			стр.цена=выборка.цена;
			стр.партиятОВАРОВ=выборка.партия;
			Если количество<выборка.количествоОстаток или выборка.количествоОстаток=0 тогда	
				стр.количество=количество;
				количество=0;
			ИначеЕсли выборка.количествоОстаток>0 Тогда 
				стр.количество=выборка.количествоОстаток;
				количество=количество-выборка.количествоОстаток;
			КонецЕсли;
		КонецЦикла;
		Если количество>0 Тогда
			стр=Движения.добавить();
			стр.ВидДвижения=ВидДвиженияНакопления.Расход;
			стр.период=Объект.Дата;
			стр.Организация=Объект.Организация;
			стр.номенклатура=ВыборкаТоп.номенклатура;
			стр.Магазин=Объект.Магазин;
			стр.Склад=Объект.Магазин.СкладПродажи;
			стр.цена=ВыборкаТоп.ценаДок;
			стр.количество=количество;
			количество=0;
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры


процедура ЗаполнитьДвиженияПоПартиямТовараРасходВозвратТоваровПоставщику(Объект,Движения)	
	ТоварыБезПартий=Объект.Товары.выгрузить().скопировать();
	ТоварыБезПартий.очистить();
	ТоварыСПартиями=ТоварыБезПартий.Скопировать();
	Для каждого стр из Объект.Товары Цикл
		Если ЗначениеЗаполнено(стр.Партия) Тогда
			ТоварыСПартиямиСтрока=ТоварыСПартиями.добавить();
			ЗаполнитьЗначенияСвойств(ТоварыСПартиямиСтрока,стр);
		Иначе
			ТоварыБезПартийСтрока=ТоварыБезПартий.добавить();
			ЗаполнитьЗначенияСвойств(ТоварыБезПартийСтрока,стр);
		КонецЕсли;
	КонецЦикла;
	Если ТоварыБезПартий.Количество()>0 Тогда
		ЗаполнитьДвиженияПоПартиямТовараРасходСтандарт(Объект,Движения,ТоварыБезПартий);	
	КонецЕсли;
	Если ТоварыСПартиями.количество()>0 Тогда
		ЗаполнитьДвиженияПоПартиямТовараРасходВозвратТоваровПоставщикуПоПартиям(Объект,Движения,ТоварыСПартиями);	
	КонецЕсли;
КонецПроцедуры


процедура ЗаполнитьДвиженияПоПартиямТовараРасходВозвратТоваровПоставщикуПоПартиям(Объект,Движения,Товары)
	Запрос=Новый запрос;
	запрос.УстановитьПараметр("тч",Товары);
	запрос.УстановитьПараметр("номка",Объект.Товары.ВыгрузитьКолонку("Номенклатура"));
	запрос.УстановитьПараметр("Дата",Объект.Дата);
	запрос.УстановитьПараметр("Организация",Объект.Организация);
	запрос.УстановитьПараметр("Магазин",Объект.Магазин);
	запрос.УстановитьПараметр("Склад",Объект.Магазин.СкладПродажи);
	Запрос.Текст="ВЫБРАТЬ
	             |	Тч.Номенклатура КАК Номенклатура,
	             |	Тч.Партия КАК Партия,
	             |	Тч.Количество КАК Количество,
	             |	Тч.Цена КАК Цена
	             |ПОМЕСТИТЬ тч
	             |ИЗ
	             |	&Тч КАК Тч
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	тч.Номенклатура КАК Номенклатура,
	             |	тч.Количество КАК Количество,
	             |	тч.Партия КАК ПартияДок,
	             |	ххх_ПартииТоваровОстатки.ПартияТоваров КАК ПартияРег,
	             |	тч.Цена КАК Цена
	             |ИЗ
	             |	тч КАК тч
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ххх_ПартииТоваров.Остатки(
	             |				&Дата,
	             |				Номенклатура В (&номка)
	             |					И Магазин = &Магазин
	             |					И Организация = &Организация
	             |					И Склад = &Склад) КАК ххх_ПартииТоваровОстатки
	             |		ПО тч.Номенклатура = ххх_ПартииТоваровОстатки.Номенклатура
	             |			И (ххх_ПартииТоваровОстатки.КоличествоОстаток > 0)
	             |			И тч.Партия = ххх_ПартииТоваровОстатки.ПартияТоваров
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	ххх_ПартииТоваровОстатки.ПартияТоваров.Дата";
				                                                                                 	//           Запрос.выполнить().выгрузить()	 
	Выборка=Запрос.Выполнить().Выбрать();			 
				 
	Пока Выборка.Следующий()Цикл
		//Количество=выборкаТоп.количество;
		//выборка=ВыборкаТоп.выбрать();
		//Пока выборка.Следующий()Цикл
		//	Если количество<=0 Тогда
		//		прервать;
		//	КонецЕсли;
		Если Выборка.ПартияДок<>Выборка.ПартияРег Тогда
			Сообщить("Не найдено положительных остатков по партии: "+Строка(Выборка.ПартияДок));
			Движения.очистить();
			прервать;
		КонецЕсли;
			стр=Движения.добавить();
			стр.ВидДвижения=ВидДвиженияНакопления.Расход;
			стр.период=Объект.Дата;
			стр.Организация=Объект.Организация;
			стр.номенклатура=выборка.номенклатура;
			стр.Магазин=Объект.Магазин;
			стр.Склад=Объект.Магазин.СкладПродажи;
			стр.цена=выборка.цена;
			стр.партиятОВАРОВ=выборка.партияДок;
		//	Если количество<выборка.количествоОстаток или выборка.количествоОстаток=0 тогда	
		//		стр.количество=количество;
		//		количество=0;
		//	ИначеЕсли выборка.количествоОстаток>0 Тогда 
				стр.количество=выборка.количество;
				//количество=количество-выборка.количествоОстаток;
			//КонецЕсли;
		//КонецЦикла;
	КонецЦикла;	
КонецПроцедуры



Процедура ххх_ФормированиеДвиженийПартииТоваровОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт      
// Сделано через подписку что бы при обновлении конфиги,
// не думать что у меня в модуле объекта происходит. 
// В расширение не добавлял так как на 8.3.1950 расширять серверные функции нельзя,
// ибо они не перехватываются в фоновых заданиях.
//	ЗаполнитьДвиженияПоПартиямТовара(Источник);
КонецПроцедуры






Процедура ххх_ФормированиеДвиженийПартииПоступВозвратОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт      
// Сделано через подписку что бы при обновлении конфиги,
// не думать что у меня в модуле объекта происходит. 
// В расширение не добавлял так как на 8.3.1950 расширять серверные функции нельзя,
// ибо они не перехватываются в фоновых заданиях.
	если типзнч(Источник)=Тип("ДокументСсылка.ПоступлениеТоваров") и Источник.ххх_ФиктивнаяНакладная Тогда
		возврат;
	Конецесли;
	ЗаполнитьДвиженияПоПартиямТовараПоступВозврат(Источник);
КонецПроцедуры


процедура ЗаполнитьДвиженияПоПартиямТовараПоступВозврат (Объект)
	Движения=Объект.Движения.ххх_ПартииТоваровПоступВозврат;
	Если ТипЗнч(Объект)=Тип("ДокументОбъект.ВозвратТоваровПоставщику") Тогда
		ЗаполнитьДвиженияПоПартиямТовараПоступВозвратРасходВозвратТоваровПоставщику(Объект,Движения);
	иначеЕсли ТипЗнч(Объект)=Тип("ДокументОбъект.ПоступлениеТоваров") Тогда
		ЗаполнитьДвиженияПоПартиямТовараПоступВозвратПриходСтандарт(Объект,Движения);
	КонецЕсли;
	
	
	наб=РегистрыНакопления.ххх_ПартииТоваровПоступВозврат.СоздатьНаборЗаписей();	
	наб.Отбор.Регистратор.установить(Объект.ссылка);
	Наб.прочитать();
	наб.загрузить(Движения.выгрузить());
	наб.записать();	
КонецПроцедуры



процедура ЗаполнитьДвиженияПоПартиямТовараПоступВозвратПриходСтандарт(Объект,Движения)	
	Запрос=Новый запрос;
	запрос.УстановитьПараметр("тч",Объект.Товары.Выгрузить());
	запрос.УстановитьПараметр("номка",Объект.Товары.ВыгрузитьКолонку("Номенклатура"));
	запрос.УстановитьПараметр("Дата",Новый граница(Новый моментвремени(Объект.Дата,объект.ссылка),ВидГраницы.Исключая));
	запрос.УстановитьПараметр("Организация",Объект.Организация);
	запрос.УстановитьПараметр("Магазин",Объект.Магазин);
	запрос.УстановитьПараметр("Склад",Объект.Магазин.СкладПродажи);
	Запрос.Текст="ВЫБРАТЬ
	             |	Тч.Номенклатура КАК Номенклатура,
	             |	Тч.Количество КАК Количество,
	             |	Тч.Цена КАК Цена
	             |ПОМЕСТИТЬ тч
	             |ИЗ
	             |	&Тч КАК Тч
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	тч.Номенклатура КАК Номенклатура,
	             |	тч.Количество КАК Количество,
	             |	тч.Цена КАК Цена,
	             |	ЕСТЬNULL(ххх_ПартииТоваровПоступВозвратОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток
	             |ИЗ
	             |	тч КАК тч
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ххх_ПартииТоваровПоступВозврат.Остатки(, ) КАК ххх_ПартииТоваровПоступВозвратОстатки
	             |		ПО тч.Номенклатура = ххх_ПартииТоваровПоступВозвратОстатки.Номенклатура
	             |			И (ххх_ПартииТоваровПоступВозвратОстатки.КоличествоОстаток < 0)
	             |			И (ххх_ПартииТоваровПоступВозвратОстатки.Цена = 0)
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	КоличествоОстаток,
	             |	Цена
	             |ИТОГИ
	             |	СУММА(Количество),
	             |	МАКСИМУМ(КоличествоОстаток)
	             |ПО
	             |	Номенклатура,
	             |	Цена";
				 
	ВыборкаТоп=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);		//           Запрос.выполнить().выгрузить()	 
	
	Пока ВыборкаТоп.Следующий()Цикл
		КоличествоТотал=ВыборкаТоп.количество;
		количествоОстаток=-ВыборкаТоп.количествоОстаток;
		выборкаМид=ВыборкаТоп.выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		пока выборкаМид.Следующий()Цикл
			если КоличествоТотал<=0 Тогда
				прервать;
			КонецЕсли;
			Выборка=выборкаМид.выбрать();
			Пока выборка.Следующий()Цикл
				Количество=выборка.количество;
				КоличествоТотал=КоличествоТотал-количество;
				Если количествоОстаток<>0 тогда					
					сторноНеОбеспеченногоРасхода=Движения.добавить();
					сторноНеОбеспеченногоРасхода.ВидДвижения=ВидДвиженияНакопления.Расход;
					сторноНеОбеспеченногоРасхода.период=Объект.Дата;
					сторноНеОбеспеченногоРасхода.Организация=Объект.Организация;
					сторноНеОбеспеченногоРасхода.номенклатура=выборка.номенклатура;
					сторноНеОбеспеченногоРасхода.Магазин=Объект.Магазин;
					сторноНеОбеспеченногоРасхода.Склад=Объект.Магазин.СкладПродажи;			
								
					ОбеспечениеНеобеспеченногоРасхода=Движения.добавить();
					ОбеспечениеНеобеспеченногоРасхода.ВидДвижения=ВидДвиженияНакопления.Приход;
					ОбеспечениеНеобеспеченногоРасхода.период=Объект.Дата;
					ОбеспечениеНеобеспеченногоРасхода.Организация=Объект.Организация;
					ОбеспечениеНеобеспеченногоРасхода.номенклатура=выборка.номенклатура;
					ОбеспечениеНеобеспеченногоРасхода.Магазин=Объект.Магазин;
					ОбеспечениеНеобеспеченногоРасхода.Склад=Объект.Магазин.СкладПродажи;
					ОбеспечениеНеобеспеченногоРасхода.ПартияТоваров=оБЪЕКТ.ССЫЛКА;
					ОбеспечениеНеобеспеченногоРасхода.Цена=выборка.цена;			
					
					СписаниеОбеспеченногоРасхода=Движения.добавить();
					СписаниеОбеспеченногоРасхода.ВидДвижения=ВидДвиженияНакопления.Расход;
					СписаниеОбеспеченногоРасхода.период=Объект.Дата;
					СписаниеОбеспеченногоРасхода.Организация=Объект.Организация;
					СписаниеОбеспеченногоРасхода.номенклатура=выборка.номенклатура;
					СписаниеОбеспеченногоРасхода.Магазин=Объект.Магазин;
					СписаниеОбеспеченногоРасхода.Склад=Объект.Магазин.СкладПродажи;
					СписаниеОбеспеченногоРасхода.ПартияТоваров=оБЪЕКТ.ССЫЛКА;
					СписаниеОбеспеченногоРасхода.Цена=выборка.цена;
			
					Если количество<=количествоОстаток тогда	
						сторноНеОбеспеченногоРасхода.количество=-количество;
						ОбеспечениеНеобеспеченногоРасхода.количество=количество;
						СписаниеОбеспеченногоРасхода.количество=количество;
						количествоОстаток=количествоОстаток-количество;
						Количество=0;
					Иначе
						СторноНеОбеспеченногоРасхода.количество=-количествоОстаток;
						ОбеспечениеНеобеспеченногоРасхода.количество=количествоОстаток;
						СписаниеОбеспеченногоРасхода.количество=количествоОстаток;	
						
						количество=количество-количествоОстаток;

						Приход=Движения.добавить();
						Приход.ВидДвижения=ВидДвиженияНакопления.Приход;
						Приход.период=Объект.Дата;
						Приход.Организация=Объект.Организация;
						Приход.номенклатура=выборка.номенклатура;
						Приход.Магазин=Объект.Магазин;
						Приход.Склад=Объект.Магазин.СкладПродажи;
						Приход.ПартияТоваров=оБЪЕКТ.ССЫЛКА;
						Приход.Цена=выборка.цена;
						Приход.количество=количество;
						количествоОстаток=0;
						количество=0;
					КонецЕсли;				
				ИначеЕсли Количество>0 Тогда
					Приход=Движения.добавить();
					Приход.ВидДвижения=ВидДвиженияНакопления.приход;
					Приход.период=Объект.Дата;
					Приход.Организация=Объект.Организация;
					Приход.номенклатура=выборка.номенклатура;
					Приход.Магазин=Объект.Магазин;
					Приход.Склад=Объект.Магазин.СкладПродажи;
					Приход.ПартияТоваров=оБЪЕКТ.ССЫЛКА;
					Приход.Цена=выборка.цена;	
					Приход.количество=количество;
					количество=0;
				КонецЕсли;
			КонецЦикла;
		конеццикла	
	КонецЦикла;	

	
	

КонецПроцедуры



процедура ЗаполнитьДвиженияПоПартиямТовараПоступВозвратРасходСтандарт(Объект,Движения,Товары)
	Запрос=Новый запрос;
	запрос.УстановитьПараметр("тч",Товары);
	запрос.УстановитьПараметр("номка",Объект.Товары.ВыгрузитьКолонку("Номенклатура"));
	запрос.УстановитьПараметр("Дата",Объект.Дата);
	запрос.УстановитьПараметр("Организация",Объект.Организация);
	запрос.УстановитьПараметр("Магазин",Объект.Магазин);
	запрос.УстановитьПараметр("Склад",Объект.Магазин.СкладПродажи);
	Запрос.Текст="ВЫБРАТЬ
	             |	Тч.Номенклатура КАК Номенклатура,
	             |	Тч.Количество КАК Количество,
	             |	Тч.Цена КАК Цена
	             |ПОМЕСТИТЬ тч
	             |ИЗ
	             |	&Тч КАК Тч
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	тч.Номенклатура КАК Номенклатура,
	             |	тч.Количество КАК Количество,
	             |	ЕСТЬNULL(ххх_ПартииТоваровПоступВозвратОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	             |	ЕСТЬNULL(ххх_ПартииТоваровПоступВозвратОстатки.Цена, 0) КАК Цена,
	             |	ЕСТЬNULL(ххх_ПартииТоваровПоступВозвратОстатки.ПартияТоваров, ЗНАЧЕНИЕ(Документ.ПоступлениеТоваров.пустаяссылка)) КАК Партия,
	             |	тч.Цена КАК ЦенаДок
	             |ИЗ
	             |	тч КАК тч
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ххх_ПартииТоваровПоступВозврат.Остатки(
	             |				&Дата,
	             |				Номенклатура В (&номка)
	             |					И Магазин = &Магазин
	             |					И Организация = &Организация
	             |					И Склад = &Склад
	             |					И НЕ(ПартияТоваров ЕСТЬ NULL
	             |							ИЛИ ПартияТоваров = НЕОПРЕДЕЛЕНО)) КАК ххх_ПартииТоваровПоступВозвратОстатки
	             |		ПО тч.Номенклатура = ххх_ПартииТоваровПоступВозвратОстатки.Номенклатура
	             |			И (ххх_ПартииТоваровПоступВозвратОстатки.КоличествоОстаток > 0)
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	ххх_ПартииТоваровПоступВозвратОстатки.ПартияТоваров.Дата
	             |ИТОГИ
	             |	МАКСИМУМ(Количество),
	             |	МАКСИМУМ(ЦенаДок)
	             |ПО
	             |	Номенклатура";
				                                                                                 	//           Запрос.выполнить().выгрузить()	 
	ВыборкаТоп=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);			 
				 
	Пока ВыборкаТоп.Следующий()Цикл
		Количество=выборкаТоп.количество;
		выборка=ВыборкаТоп.выбрать();
		Пока выборка.Следующий()Цикл
			Если количество<=0 Тогда
				прервать;
			КонецЕсли;
			стр=Движения.добавить();
			стр.ВидДвижения=ВидДвиженияНакопления.Расход;
			стр.период=Объект.Дата;
			стр.Организация=Объект.Организация;
			стр.номенклатура=выборка.номенклатура;
			стр.Магазин=Объект.Магазин;
			стр.Склад=Объект.Магазин.СкладПродажи;
			стр.цена=выборка.цена;
			стр.партиятОВАРОВ=выборка.партия;
			Если количество<выборка.количествоОстаток или выборка.количествоОстаток=0 тогда	
				стр.количество=количество;
				количество=0;
			ИначеЕсли выборка.количествоОстаток>0 Тогда 
				стр.количество=выборка.количествоОстаток;
				количество=количество-выборка.количествоОстаток;
			КонецЕсли;
		КонецЦикла;
		Если количество>0 Тогда
			стр=Движения.добавить();
			стр.ВидДвижения=ВидДвиженияНакопления.Расход;
			стр.период=Объект.Дата;
			стр.Организация=Объект.Организация;
			стр.номенклатура=ВыборкаТоп.номенклатура;
			стр.Магазин=Объект.Магазин;
			стр.Склад=Объект.Магазин.СкладПродажи;
			стр.цена=ВыборкаТоп.ценаДок;
			стр.количество=количество;
			количество=0;
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры


процедура ЗаполнитьДвиженияПоПартиямТовараПоступВозвратРасходВозвратТоваровПоставщику(Объект,Движения)	
	ТоварыБезПартий=Объект.Товары.выгрузить().скопировать();
	ТоварыБезПартий.очистить();
	ТоварыСПартиями=ТоварыБезПартий.Скопировать();
	Для каждого стр из Объект.Товары Цикл
		Если ЗначениеЗаполнено(стр.Партия) Тогда
			ТоварыСПартиямиСтрока=ТоварыСПартиями.добавить();
			ЗаполнитьЗначенияСвойств(ТоварыСПартиямиСтрока,стр);
		Иначе
			ТоварыБезПартийСтрока=ТоварыБезПартий.добавить();
			ЗаполнитьЗначенияСвойств(ТоварыБезПартийСтрока,стр);
		КонецЕсли;
	КонецЦикла;
	Если ТоварыБезПартий.Количество()>0 Тогда
		ЗаполнитьДвиженияПоПартиямТовараПоступВозвратРасходСтандарт(Объект,Движения,ТоварыБезПартий);	
	КонецЕсли;
	Если ТоварыСПартиями.количество()>0 Тогда
		ЗаполнитьДвиженияПоПартиямТовараПоступВозвратРасходВозвратТоваровПоставщикуПоПартиям(Объект,Движения,ТоварыСПартиями);	
	КонецЕсли;
КонецПроцедуры


процедура ЗаполнитьДвиженияПоПартиямТовараПоступВозвратРасходВозвратТоваровПоставщикуПоПартиям(Объект,Движения,Товары)
	Запрос=Новый запрос;
	запрос.УстановитьПараметр("тч",Товары);
	запрос.УстановитьПараметр("номка",Объект.Товары.ВыгрузитьКолонку("Номенклатура"));
	запрос.УстановитьПараметр("Дата",Объект.Дата);
	запрос.УстановитьПараметр("Организация",Объект.Организация);
	запрос.УстановитьПараметр("Магазин",Объект.Магазин);
	запрос.УстановитьПараметр("Склад",Объект.Магазин.СкладПродажи);
	Запрос.Текст="ВЫБРАТЬ
	             |	Тч.Номенклатура КАК Номенклатура,
	             |	Тч.Партия КАК Партия,
	             |	Тч.Количество КАК Количество,
	             |	Тч.Цена КАК Цена
	             |ПОМЕСТИТЬ тч
	             |ИЗ
	             |	&Тч КАК Тч
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	тч.Номенклатура КАК Номенклатура,
	             |	тч.Количество КАК Количество,
	             |	тч.Партия КАК ПартияДок,
	             |	ххх_ПартииТоваровПоступВозвратОстатки.ПартияТоваров КАК ПартияРег,
	             |	тч.Цена КАК Цена
	             |ИЗ
	             |	тч КАК тч
	             |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ххх_ПартииТоваровПоступВозврат.Остатки(
	             |				&Дата,
	             |				Номенклатура В (&номка)
	             |					И Магазин = &Магазин
	             |					И Организация = &Организация
	             |					И Склад = &Склад) КАК ххх_ПартииТоваровПоступВозвратОстатки
	             |		ПО тч.Номенклатура = ххх_ПартииТоваровПоступВозвратОстатки.Номенклатура
	             |			И (ххх_ПартииТоваровПоступВозвратОстатки.КоличествоОстаток > 0)
	             |			И тч.Партия = ххх_ПартииТоваровПоступВозвратОстатки.ПартияТоваров
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	ххх_ПартииТоваровПоступВозвратОстатки.ПартияТоваров.Дата";
				                                                                                 	//           Запрос.выполнить().выгрузить()	 
	Выборка=Запрос.Выполнить().Выбрать();			 
				 
	Пока Выборка.Следующий()Цикл
		//Количество=выборкаТоп.количество;
		//выборка=ВыборкаТоп.выбрать();
		//Пока выборка.Следующий()Цикл
		//	Если количество<=0 Тогда
		//		прервать;
		//	КонецЕсли;
		Если Выборка.ПартияДок<>Выборка.ПартияРег Тогда
			Сообщить("Не найдено положительных остатков по партии: "+Строка(Выборка.ПартияДок));
			Движения.очистить();
			прервать;
		КонецЕсли;
			стр=Движения.добавить();
			стр.ВидДвижения=ВидДвиженияНакопления.Расход;
			стр.период=Объект.Дата;
			стр.Организация=Объект.Организация;
			стр.номенклатура=выборка.номенклатура;
			стр.Магазин=Объект.Магазин;
			стр.Склад=Объект.Магазин.СкладПродажи;
			стр.цена=выборка.цена;
			стр.партиятОВАРОВ=выборка.партияДок;
		//	Если количество<выборка.количествоОстаток или выборка.количествоОстаток=0 тогда	
		//		стр.количество=количество;
		//		количество=0;
		//	ИначеЕсли выборка.количествоОстаток>0 Тогда 
				стр.количество=выборка.количество;
				//количество=количество-выборка.количествоОстаток;
			//КонецЕсли;
		//КонецЦикла;
	КонецЦикла;	
КонецПроцедуры























