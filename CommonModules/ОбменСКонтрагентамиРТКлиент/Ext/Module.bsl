

////////////////////////////////////////////////////////////////////////////////
// ОбменСКонтрагентамиРТКлиент: механизм обмена электронными документами для РТ.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

//См. ОбменСКонтрагентамиКлиентПереопределяемый.ОткрытьФормуПодбораТоваров
// Заполняет адрес хранилища с таблицей значений - каталога товаров.
//
// Параметры:
//  ИдентификаторФормы   - УникальныйИдентификатор - уникальный  идентификатор формы, вызвавшей функцию. Форма должна
//                                                   возвращать адрес хранилища значения, содержащего таблицу товаров,
//                                                   либо Неопределено, если была вызвана отмена операции.
//  ОбработкаПродолжения - ОписаниеОповещения - содержит описание процедуры,
//                            которая будет вызвана после закрытия формы подбора.
//
Процедура ОткрытьФормуПодбораТоваров(ИдентификаторФормы, ОбработкаПродолжения) Экспорт
	
	Параметры = Новый Структура("ИдентификаторФормы", ИдентификаторФормы);
	ОткрытьФорму("ОбщаяФорма.ПодборТоваровБЭД", Параметры,,,,, ОбработкаПродолжения);
	
КонецПроцедуры

#Область СопоставлениеНоменклатуры

//См. ОбменСКонтрагентамиКлиентПереопределяемый.ОткрытьФормуНоменклатуры
// Открывает форму элемента номенклатуры.
//
// Параметры:
//  Параметры - Структура - параметры формы.
//  Владелец - УправляемаяФорма - владелец формы.
//  Уникальность - Произвольный - ключ уникальности формы.
//  ОповещениеОЗакрытии - ОписаниеОповещения - описание оповещения о закрытии, с которым нужно открыть форму.
//
// Пример:
//  ОткрытьФорму("Справочник.Номенклатура.ФормаОбъекта", Параметры, Владелец, Уникальность);
//
Процедура ОткрытьФормуНоменклатуры(Знач Параметры, Знач Владелец, Знач Уникальность, Знач ОповещениеОЗакрытии) Экспорт
	
	ОткрытьФорму("Справочник.Номенклатура.ФормаОбъекта",
		Параметры, Владелец, Уникальность,,, ОповещениеОЗакрытии, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

//См. ОбменСКонтрагентамиКлиентПереопределяемый.ОткрытьФормуВыбораНоменклатуры
// Открывает форму выбора элемента номенклатуры.
//
// Параметры:
//  Параметры - Структура - параметры формы.
//  Владелец - УправляемаяФорма - владелец формы.
//  Уникальность - Произвольный - ключ уникальности формы.
//
// Пример:
//  ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора", Параметры, Владелец, Уникальность);
//
Процедура ОткрытьФормуВыбораНоменклатуры(Знач Параметры, Знач Владелец, Знач Уникальность) Экспорт
	
		ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора", 
		Параметры, Владелец, Уникальность,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

//См. ОбменСКонтрагентамиКлиентПереопределяемый.ПриСозданииНоменклатурыПоДаннымКонтрагента
// Выполняется при создании номенклатуры информационной базы по данным контрагента.
//
// Параметры:
//  НаборНоменклатурыКонтрагентов - Массив - номенклатура контрагентов, по которой нужно создать номенклатуру информационной базы.
//                                           См. ОбменСКонтрагентамиКлиентСервер.НоваяНоменклатураКонтрагента.
//  ОповещениеОЗавершении - ОписаниеОповещения - оповещение, которое нужно выполнить после создания номенклатуры с результатом,
//                                               представляющим массив структур со свойствами:
//   * НоменклатураКонтрагента - Структура - элемент из параметра НаборНоменклатурыКонтрагентов, для которого удалось создать номенклатуру.
//   * НоменклатураИБ - Структура - описание созданной номенклатуры. См. ОбменСКонтрагентамиКлиентСервер.НоваяНоменклатураИнформационнойБазы.
//  СтандартнаяОбработка - Булево - если метод реализован, то необходимо установить значение Ложь.
//
Процедура ПриСозданииНоменклатурыПоДаннымКонтрагента(Знач НаборНоменклатурыКонтрагентов, Знач ОповещениеОЗавершении, СтандартнаяОбработка = Истина) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Обработка = Новый ОписаниеОповещения("ВыполнитьСозданиеНоменклатурыПоДаннымКонтрагента", ЭтотОбъект);
	
	Параметры = Новый Структура;
	Параметры.Вставить("НаборНоменклатурыКонтрагентов", НаборНоменклатурыКонтрагентов);
	Параметры.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	Обработка = Новый ОписаниеОповещения("ВыполнитьСозданиеНоменклатурыПоДаннымКонтрагента", ЭтотОбъект);
	
	ПроцессВыполнения = НовыйПроцессВыполнения(Параметры, Обработка);
	
	ВыполнитьСозданиеНоменклатурыПоДаннымКонтрагента(ПроцессВыполнения);
	
КонецПроцедуры

#КонецОбласти

#Область НоменклатураКонтрагентов

// Обрабатывает выбор номенклатуры контрагента в строке источника (табличной части).
//
// Параметры:
//  ВыбранноеЗначение - Структура - выбранная номенклатура контрагента:
//   * НоменклатураКонтрагента - описание номенклатуры контрагента. См. ОбменСКонтрагентамиКлиентСервер.НоваяНоменклатураКонтрагента.
//   * НоменклатураИБ - описание номенклатуры информационной базы. См. ОбменСКонтрагентамиКлиентСервер.НоваяНоменклатураИнформационнойБазы.
//  СтрокаИсточника - ДанныеФормыЭлементКоллекции - строка источника, в которой произведен выбор номенклатуры контрагента.
//  ПутьКИдентификатору - Строка - имя колонки с идентификатором номенклатуры контрагента.
//  ПутьКПредставлению - Строка - имя колонки с представлением номенклатуры контрагента.
//
// Возвращаемое значение:
//  Структура - результат обработки выбранного значения:
//   * Идентификатор - Строка - идентификатор номенклатуры контрагента.
//   * Номенклатура - СправочникСсылка.Номенклатура - номенклатура.
//   * Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры - характеристика.
//   * ЕдиницаИзмерения - СправочникСсылка.ЕдиницыИзмерения - единица измерения.
//
Функция ОбработатьВыборНоменклатурыКонтрагентаВСтрокеИсточника(ВыбранноеЗначение, СтрокаИсточника, ПутьКИдентификатору, ПутьКПредставлению) Экспорт
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("Идентификатор", ВыбранноеЗначение.НоменклатураКонтрагента.Идентификатор);
	
	Представление = ОбменСКонтрагентамиРТКлиентСервер.ПредставлениеНоменклатурыКонтрагента(ВыбранноеЗначение.НоменклатураКонтрагента);
	Результат.Вставить("Представление", Представление);
	
	СтрокаИсточника[ПутьКИдентификатору] = Результат.Идентификатор;
	СтрокаИсточника[ПутьКПредставлению] = Результат.Представление;
	
	Возврат Результат;
	
КонецФункции

// Обрабатывает изменение номенклатуры контрагента в строке источника (табличной части).
//
// Параметры:
//  СтрокаИсточника - ДанныеФормыЭлементКоллекции - строка источника, в которой произведено изменение номенклатуры контрагента.
//  ПутьКИдентификатору - Строка - имя колонки с идентификатором номенклатуры контрагента.
//  ПутьКПредставлению - Строка - имя колонки с представлением номенклатуры контрагента.
//
Процедура ПриИзмененииПредставленияНоменклатурыКонтрагентаВСтрокеИсточника(СтрокаИсточника, ПутьКИдентификатору, ПутьКПредставлению) Экспорт
	
	Если СтрокаИсточника = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СтрокаИсточника[ПутьКПредставлению]) Тогда
		СтрокаИсточника[ПутьКИдентификатору] = "";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

#Область СопоставлениеНоменклатуры

Функция НовыйПроцессВыполнения(Знач Параметры, Знач ОсновнойОбработчик)
	
	ПроцессВыполнения = Новый Структура;
	ПроцессВыполнения.Вставить("Параметры", Параметры);
	ПроцессВыполнения.Вставить("ОсновнойОбработчик", ОсновнойОбработчик);
	ПроцессВыполнения.Вставить("Выполнено", Новый Структура);
	ПроцессВыполнения.Вставить("ТекущийЭтап", Неопределено);
	
	Возврат ПроцессВыполнения;
	
КонецФункции

// См. ПриСозданииНоменклатурыПоДаннымКонтрагента.
Процедура ВыполнитьСозданиеНоменклатурыПоДаннымКонтрагента(Знач ПроцессВыполнения, Знач ДополнительныеПараметры = Неопределено) Экспорт
	
	ТекущийЭтап = "ПолучитьСведенияОНабореНоменклатурыКонтрагентов";
	СведенияОНаборе = Неопределено;
	Если Не ПроцессВыполнения.Выполнено.Свойство(ТекущийЭтап, СведенияОНаборе) Тогда
		СведенияОНаборе = СведенияОНабореНоменклатурыКонтрагентов(ПроцессВыполнения.Параметры.НаборНоменклатурыКонтрагентов);
		Если СведенияОНаборе.Количество <= 1 Тогда
			ВыполнитьОбработкуОповещения(ПроцессВыполнения.Параметры.ОповещениеОЗавершении, Новый Массив);
			Возврат;
		КонецЕсли;
		ПроцессВыполнения.Выполнено.Вставить(ТекущийЭтап, СведенияОНаборе);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СведенияОНаборе.Различия) Тогда
		
		ТекущийЭтап = "ПоказатьВопросОСозданииНоменклатурыСРазличиями";
		ОтветНаВопрос = Неопределено;
		Если ПроцессВыполнения.Выполнено.Свойство(ТекущийЭтап, ОтветНаВопрос) Тогда
			Если ОтветНаВопрос <> КодВозвратаДиалога.Да Тогда
				ВыполнитьОбработкуОповещения(ПроцессВыполнения.Параметры.ОповещениеОЗавершении, Новый Массив);
				Возврат;
			КонецЕсли;
		Иначе
			ПроцессВыполнения.Вставить("ТекущийЭтап", ТекущийЭтап);
			ПоказатьВопросОСозданииНоменклатурыСРазличиями(СведенияОНаборе.Различия, ПроцессВыполнения);
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ТекущийЭтап = "ВыбратьЗначенияДляСозданияНоменклатуры";
	ВыбранныеЗначения = Неопределено;
	Если ПроцессВыполнения.Выполнено.Свойство(ТекущийЭтап, ВыбранныеЗначения) Тогда
		Если ВыбранныеЗначения = Неопределено Тогда
			ВыполнитьОбработкуОповещения(ПроцессВыполнения.Параметры.ОповещениеОЗавершении, Новый Массив);
			Возврат;
		КонецЕсли;
	Иначе
		ПроцессВыполнения.Вставить("ТекущийЭтап", ТекущийЭтап);
		НачатьВыборЗначенийДляСозданияНоменклатуры(СведенияОНаборе.Значения, ПроцессВыполнения);
		Возврат;
	КонецЕсли;
	
	СозданнаяНоменклатура = ОбменСКонтрагентамиРТВызовСервера.СоздатьНоменклатуруПоДаннымКонтрагента(
		ПроцессВыполнения.Параметры.НаборНоменклатурыКонтрагентов, ВыбранныеЗначения);
		
	ВыполнитьОбработкуОповещения(ПроцессВыполнения.Параметры.ОповещениеОЗавершении, СозданнаяНоменклатура);
	
КонецПроцедуры

// См. ВыполнитьСозданиеНоменклатурыПоДаннымКонтрагента.
Процедура ПоказатьВопросОСозданииНоменклатурыСРазличиями(Знач Различия, ПроцессВыполнения)
	
	СписокПолей = СтрСоединить(Различия,", ");
	СписокПолей = СтрЗаменить(СписокПолей, "СтавкаНДС", НСтр("ru = 'Ставка НДС'"));
	СписокПолей = СтрЗаменить(СписокПолей, "ЕдиницаИзмерения", НСтр("ru = 'Единица измерения'"));
	СписокПолей = СтрЗаменить(СписокПолей, "ЕдиницаИзмеренияКод", НСтр("ru = 'Код единицы измерения'"));
	
	ОбработкаОтвета = Новый ОписаниеОповещения("ОбработатьВопросОСозданииНоменклатурыСРазличиями", ЭтотОбъект, 
		ПроцессВыполнения);
	ТекстВопроса = СтрШаблон(НСтр("ru = 'Для выбранной номенклатуры различаются поля: %1. Продолжить создание?'"), 
		СписокПолей);
	ПоказатьВопрос(ОбработкаОтвета, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	
КонецПроцедуры

// См. ПоказатьВопросОСозданииНоменклатурыСРазличиями.
Процедура ОбработатьВопросОСозданииНоменклатурыСРазличиями(Знач Ответ, ПроцессВыполнения) Экспорт
	
	ПроцессВыполнения.Выполнено.Вставить(ПроцессВыполнения.ТекущийЭтап, Ответ);
	ВыполнитьОбработкуОповещения(ПроцессВыполнения.ОсновнойОбработчик, ПроцессВыполнения);
	
КонецПроцедуры

// См. ВыполнитьСозданиеНоменклатурыПоДаннымКонтрагента.
Процедура НачатьВыборЗначенийДляСозданияНоменклатуры(Знач Значения, ПроцессВыполнения)
	
	ПараметрыФормы = Новый Структура("ЗначенияНоменклатурыКонтрагента", Значения);
	
	ОбработкаВыбораЗначений = Новый ОписаниеОповещения("ЗакончитьВыборЗначенийДляСозданияНоменклатуры", ЭтотОбъект, 
		ПроцессВыполнения);
	
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаЗначенийРеквизитов",
		ПараметрыФормы,,,,, ОбработкаВыбораЗначений, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// См. ОбменСКонтрагентамиКлиентПереопределяемый.ПриСозданииНоменклатурыПоДаннымКонтрагента.
Процедура ЗакончитьВыборЗначенийДляСозданияНоменклатуры(Знач ВыбранныеЗначения, ПроцессВыполнения) Экспорт
	
	ПроцессВыполнения.Выполнено.Вставить(ПроцессВыполнения.ТекущийЭтап, ВыбранныеЗначения);
	ВыполнитьОбработкуОповещения(ПроцессВыполнения.ОсновнойОбработчик, ПроцессВыполнения);
	
КонецПроцедуры

Функция СведенияОНабореНоменклатурыКонтрагентов(Знач НаборНоменклатурыКонтрагентов)
	
	НаборСвойств = СтрРазделить("СтавкаНДС,ЕдиницаИзмерения", ",");
	Значения = Новый Структура;
	Различия = Новый Массив;
	
	Для каждого НоменклатураКонтрагента Из НаборНоменклатурыКонтрагентов Цикл
		Для каждого ТекущееСвойство Из НаборСвойств Цикл
			Если Различия.Найти(ТекущееСвойство) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
			ТекущееЗначение = НоменклатураКонтрагента[ТекущееСвойство];
			Если Не ЗначениеЗаполнено(ТекущееЗначение) Тогда
				Продолжить;
			КонецЕсли;
			Если Не Значения.Свойство(ТекущееСвойство) Тогда
				Значения.Вставить(ТекущееСвойство, ТекущееЗначение);
			КонецЕсли;
			Если ТекущееЗначение <> Значения[ТекущееСвойство] Тогда
				Различия.Добавить(ТекущееСвойство);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Сведения = Новый Структура;
	Сведения.Вставить("Количество", НаборНоменклатурыКонтрагентов.Количество());
	Сведения.Вставить("Значения", Значения);
	Сведения.Вставить("Различия", Различия);
	
	Возврат Сведения;
	
КонецФункции

#КонецОбласти

#КонецОбласти
