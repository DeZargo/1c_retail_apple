#Область ПрограммныйИнтерфейс

// Выделяет из переданного массива штрихкодов упаковок элементы, в составе которых
// (на любом уровне вложенности, в т.ч. частично) находится продукция требуемого вида.
//
// Параметры:
//  ШтрихкодыДляПроверки - Массив - проверяемые элементы типа СправочникСсылка.ШтрихкодыУпаковокТоваров.
//  ВидыПродукции - Массив, ПеречислениеСсылка.ВидыПродукцииИС, Неопределено - Вид отбираемой продукции.
//
// Возвращаемое значение:
//  Массив - Массив - подходящие элементы типа СправочникСсылка.ШтрихкодыУпаковокТоваров.
Процедура ВыделитьШтрихкодыСодержащиеВидыПродукции(ШтрихкодыУпаковок, ВидыПродукцииИС) Экспорт
	
	ШтрихкодированиеИСРТ.ВыделитьШтрихкодыСодержащиеВидыПродукции(ШтрихкодыУпаковок, ВидыПродукцииИС);
	
КонецПроцедуры

// Заполняет соответствие штрихкодов данными по номенклатуре, характеристике, маркируемой продукции.
//
// Параметры:
//  Штрихкоды            - Соответствие - Список штрихкодов.
//  КэшированныеЗначения - Структура - сохраненные значения параметров, используемых при обработке.
Процедура ЗаполнитьИнформациюПоШтрихкодам(Штрихкоды, КэшированныеЗначения) Экспорт
	
	ШтрихкодированиеИСРТ.ЗаполнитьИнформациюПоШтрихкодам(Штрихкоды, КэшированныеЗначения);
	
КонецПроцедуры

// В функции нужно реализовать подготовку данных для дальнейшей обработки штрихкодов.
//
// Параметры:
//  Форма - УправляемаяФорма - форма документа, в которой происходит обработка,
//  ДанныеШтрихкодов - Массив - полученные штрихкоды,
//  ПараметрыЗаполнения - (См. ИнтеграцияЕГАИСКлиентСервер.ПараметрыЗаполненияТабличнойЧасти).
//
// Возвращаемое значение:
//  Структура - подготовленные данные.
Процедура ПодготовитьДанныеДляОбработкиШтрихкодов(Форма, ДанныеШтрихкодов, ПараметрыЗаполнения, СтруктураДействий) Экспорт
	
	ШтрихкодированиеИСРТ.ПодготовитьДанныеДляОбработкиШтрихкодов(Форма, 
		ДанныеШтрихкодов, 
		ПараметрыЗаполнения, 
		СтруктураДействий);
	
КонецПроцедуры

// Процедура обрабатывает введенные штрихкоды:
// 1. Добавляет введенные штрихкоды в табличную часть документа;
// 2. Вызывает помощник создания штрихкода, если он не был найден.
// Параметры:
//  Форма - УправляемаяФорма - форма для которой будут обработаны введенные штрихкоды.
//  Объект - ДанныеФормыСтруктура - объект формы.
//  СтруктураПараметров - Структура - структура формируется функцией ШтрихкодированиеНоменклатурыКлиент.ПараметрыОбработкиШтрихкодов()
//                                    и заполняется данными из формы.
//  КэшированныеЗначения - Структура - кэш формы.
Процедура ОбработатьШтрихкоды(Форма, ДанныеДляОбработки, КэшированныеЗначения) Экспорт
	
	ШтрихкодированиеИСРТ.ОбработатьШтрихкоды(Форма, ДанныеДляОбработки, КэшированныеЗначения);
	
КонецПроцедуры

// В процедуре требуется реализовать алгоритм обработки полученных штрихкодов из ТСД.
//
// Параметры:
//  Форма - УправляемаяФорма - форма документа, в которой происходит обработка,
//  ДанныеДляОбработки - Структура - подготовленные ранее данные для обработки,
//  КэшированныеЗначения - Структура - используется механизмом обработки изменения реквизитов ТЧ.
//
Процедура ОбработатьДанныеИзТСД(Форма, ДанныеДляОбработки, КэшированныеЗначения) Экспорт
	
	ШтрихкодированиеИСРТ.ОбработатьДанныеИзТСД(Форма, ДанныеДляОбработки, КэшированныеЗначения);
	
КонецПроцедуры

// Добавляет в текст запроса вид продукции.
//
// Параметры:
//  ТекстЗапроса - Строка - исходящий, дополняемый текст запроса.
Процедура ОпределитьВидПродукцииТекстаЗапроса(ТекстЗапроса) Экспорт
	
	ШтрихкодированиеИСРТ.ОпределитьВидПродукцииТекстаЗапроса(ТекстЗапроса);
	
КонецПроцедуры

// Добавляет в текст запроса вид продукции для постоения дерева.
//
// Параметры:
//  ТекстЗапроса    - Строка - исходящий, дополняемый текст запроса.
//  УровнейВЗапросе - Число - количество уровней вложений.
Процедура ОпределитьВидПродукцииТекстаЗапросаДереваУпаковок(ТекстЗапроса, УровнейВЗапросе) Экспорт
	
	ШтрихкодированиеИСРТ.ОпределитьВидПродукцииТекстаЗапросаДереваУпаковок(ТекстЗапроса, УровнейВЗапросе);
	
КонецПроцедуры

// Возвращается контрагентов по списку ИНН.
//
// Параметры:
//  КоллекцияИНН - Массив - Список ИНН.
//  Соответствие - Соответствие - Соответсвие вида:
//   * ИНН
//   * Контрагент
Процедура ЗаполнитьСоответствиеИННКонтрагентам(КоллекцияИНН, Соответствие) Экспорт
	
	ШтрихкодированиеИСРТ.ЗаполнитьСоответствиеИННКонтрагентам(КоллекцияИНН, Соответствие);
	
КонецПроцедуры

// Заполняет в таблице данные по штрихкодам EAN.
// 
// Параметры:
//  ДанныеПоШтрихкодамEAN - ТаблицаЗначений - передается с обязательной колонкой ЗначениеШтрихкодаEAN, возвращает:
//   * Номенклатура
//   * ПредставлениеНоменклатуры
//   * Характеристика
//   * ЗначениеШтрихкодаEAN
Процедура ЗаполнитьДанныеПоШтрихкодамEAN(ДанныеПоШтрихкодамEAN) Экспорт
	
	ШтрихкодированиеИСРТ.ЗаполнитьДанныеПоШтрихкодамEAN(ДанныеПоШтрихкодамEAN);
	
КонецПроцедуры

// Вызывается при определении необходимости выбора серий.
// 
// Параметры:
//  ДанныеШтрихкода       - Структура - данные штрихкода.
//  ПараметрыСканирования - (См. ШтрихкодированиеИСКлиентСервер.ИнициализироватьПараметрыСканирования).
//  ТребуетсяВыбор        - Булево - исходящий, признак необходимости выбора серии.
Процедура ОпределитьНеобходимостьВыбораСерииДляДанныхШтрихкода(ДанныеШтрихкода, ПараметрыСканирования, ТребуетсяВыбор) Экспорт
	
	ШтрихкодированиеИСРТ.ОпределитьНеобходимостьВыбораСерииДляДанныхШтрихкода(ДанныеШтрихкода, 
		ПараметрыСканирования, 
		ТребуетсяВыбор);
	
КонецПроцедуры

// Выполняет заполнение параметра "ШтрихкодыУпаковок" значениями штрихкодов документа.
// 
// Параметры:
//  Документ - ДокументСсылка - Документ, для которого выполняется обработка штрихкодов.
//  ШтрихкодыУпаковок - Массив из Строка - Коллекция значений штрихкодов.
Процедура ЗаполнитьШтрихкодыУпаковокДокумента(Документ, ШтрихкодыУпаковок) Экспорт
	
	ШтрихкодированиеИСРТ.ЗаполнитьШтрихкодыУпаковокДокумента(Документ, ШтрихкодыУпаковок);
	
КонецПроцедуры

// Собирает данные из документа основания.
// 
// Параметры:
//  ПараметрыСканирования - (См. ШтрихкодированиеИСКлиентСервер.ИнициализироватьПараметрыСканирования).
//  ТаблицаДанных - ТаблицаЗначений - Данные из документа основания.
Процедура СформироватьДанныеДокументаОснования(ПараметрыСканирования, ТаблицаДанных) Экспорт
	
	ШтрихкодированиеИСРТ.СформироватьДанныеДокументаОснования(ПараметрыСканирования, ТаблицаДанных);
	
КонецПроцедуры

// В процедуре необходимо реализовать обработку данных штрихкода для общей формы. результат обработки штрихкода следует
// вернуть в параметре РезультатОбработки.
// 
// Параметры:
//  Форма - УправляемаяФорма - Общая форма.
//  ДанныеШтрихкода - (См. ШтрихкодированиеИСКлиентСервер.ИнициализироватьДанныеШтрихкода).
//  ПараметрыСканирования - (См. ШтрихкодированиеИСКлиентСервер.ИнициализироватьПараметрыСканирования).
//  ВложенныеШтрихкоды - (См. ШтрихкодированиеИС.ИнициализироватьДанныеШтрихкода).
//  РезультатОброботки - (См. ШтрихкодированиеИС.ИнициализироватьРезультатОбработкиШтрихкода).
Процедура ОбработатьДанныеШтрихкодаДляОбщейФормы(Форма, ДанныеШтрихкода, ПараметрыСканирования, ВложенныеШтрихкоды, РезультатОброботки) Экспорт
	
	ШтрихкодированиеИСРТ.ОбработатьДанныеШтрихкодаДляОбщейФормы(Форма, 
		ДанныеШтрихкода, 
		ПараметрыСканирования, 
		ВложенныеШтрихкоды, 
		РезультатОброботки);
	
КонецПроцедуры

// Добавляет в текст запроса определение признака "Маркируемая продукция".
// 
// Параметры:
// 	ТекстЗапроса - Строка - Текст запроса.
// 	ПутьКПолюНоменклатура - Строка - Путь к полю номенклатуры в тексте запроса.
// 	Параметр - Строка - параметр запроса, который будет заменен на фрагмент определения признака "Маркиремая продукция".
Процедура ОпределитьПризнакМаркируемаяПродукцияТекстаЗапроса(ТекстЗапроса, ПутьКПолюНоменклатура, Параметр) Экспорт
	
	ОпределениеШаблон = 
	"
	|	ЕСТЬNULL(%1.ВидАлкогольнойПродукцииЕГАИС.Маркируемый, ЛОЖЬ)
	|	ИЛИ %1.ТабачнаяПродукция";
	
	Определение = СтрШаблон(ОпределениеШаблон, ПутьКПолюНоменклатура);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, Параметр, Определение);
	
КонецПроцедуры

// В этой процедуре при необходимости следует реализовать дополнительные проверки на ошибки данных по штрихкодам.
// 
// Параметры:
//  Форма - УправляемаяФорма - Форма, для которой выполняется обработка штрихкодов.
//  ДанныеПоШтрихкодам - (См. ШтрихкодированиеИС.ИнициализацияДанныхПоШтрихкодам). 
//  ПараметрыСканирования - (См. ШтрихкодированиеИСКлиентСервер.ИнициализироватьПараметрыСканирования).
//  ЕстьОшибки - Булево - Истина, если выявлена ошибка.
Процедура ПриПроверкеДанныхПоШтрихкодам(ДанныеПоШтрихкодам, ПараметрыСканирования, ЕстьОшибки) Экспорт
	
	Возврат;
	
КонецПроцедуры

// Заменяет значение Неопределено на соответствующие пустые ссылки.
// 
// Параметры:
//  СтрокаДерева - СтрокаДереваЗначений - строка дерева значений для заполнения.
Процедура ЗаменитьЗначенияНеопределеноНаПустыеСсылкиВСтрокеДерева(СтрокаДерева) Экспорт
	
	ШтрихкодированиеИСРТ.ЗаменитьЗначенияНеопределеноНаПустыеСсылкиВСтрокеДерева(СтрокаДерева);
	
КонецПроцедуры

// В этой процедуре при необходимости следует реализовать дополнительные проверки на ошибки данных по штрихкодам.
// 
// Параметры:
//  Форма - УправляемаяФорма - Форма, для которой выполняется обработка штрихкодов.
//  ДанныеПоШтрихкодам - (См. ШтрихкодированиеИС.ИнициализацияДанныхПоШтрихкодам). 
//  ПараметрыСканирования - (См. ШтрихкодированиеИСКлиентСервер.ИнициализироватьПараметрыСканирования).
//  ЕстьОшибки - Булево - Истина, если выявлена ошибка.
Процедура ВыполнитьПроверкуНаОшибкиДанныхПоШтрихкодам(ДанныеПоШтрихкодам, ПараметрыСканирования, ЕстьОшибки) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииРТ

Функция СтруктураДляОбработкиСтроки() Экспорт 
	
	Возврат ШтрихкодированиеИСРТ.СтруктураДляОбработкиСтроки();
	
КонецФункции

Функция СтруктураДляДобавленияСтроки() Экспорт 
	
	Возврат ШтрихкодированиеИСРТ.СтруктураДляДобавленияСтроки();
	
КонецФункции

#КонецОбласти

