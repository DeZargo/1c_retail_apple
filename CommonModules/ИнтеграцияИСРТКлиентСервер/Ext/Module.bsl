// Универсальные механизмы интеграции ИС (ЕГАИС, ГИСМ, ВЕТИС, ...)

#Область ПрограммныйИнтерфейс

Функция ПоляДляПоискаМаркированнойПродукции() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Номенклатура",   ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"));
	Результат.Вставить("Характеристика", ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка"));
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВключитьПоддержкуВидовПродукцииИС(Контекст, ПараметрыСканирования, ВидПродукции) Экспорт
	
	Если ТипЗнч(Контекст) = Тип("УправляемаяФорма") Тогда 
		
		Если Контекст.ИмяФормы = "Документ.ВозвратТоваровПоставщику.Форма.ФормаДокумента" Тогда 
			
			ЗаполнитьПараметрыСканированияВозвратТоваровПоставщику(Контекст, ПараметрыСканирования, ВидПродукции);
			
		ИначеЕсли Контекст.ИмяФормы = "Документ.ЧекККМ.Форма.ФормаДокумента" 
			Или Контекст.ИмяФормы = "Обработка.РМКУправляемыйРежим.Форма.Форма" Тогда
			
			ЗаполнитьПараметрыСканированияЧекККМ(Контекст, ПараметрыСканирования, ВидПродукции, Ложь);
			
		ИначеЕсли Контекст.ИмяФормы = "Документ.ПоступлениеТоваров.Форма.ФормаДокумента" Тогда 
		
			ЗаполнитьПараметрыСканированияПоступлениеТоваров(Контекст, ПараметрыСканирования, ВидПродукции);
		
		ИначеЕсли Контекст.ИмяФормы = "Документ.ВозвратТоваровОтПокупателя.Форма.ФормаДокумента" Тогда
			
			ЗаполнитьПараметрыСканированияВозвратТоваровОтПокупателя(Контекст, ПараметрыСканирования, ВидПродукции);
			
		ИначеЕсли Контекст.ИмяФормы = "Документ.РеализацияТоваров.Форма.ФормаДокумента" Тогда
			
			ЗаполнитьПараметрыСканированияРеализацияТоваров(Контекст, ПараметрыСканирования, ВидПродукции);
			
		КонецЕсли;
		
	Иначе
		
		Если ТипЗнч(Контекст.Ссылка) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
			
			ЗаполнитьПараметрыСканированияВозвратТоваровПоставщику(Контекст.Ссылка, ПараметрыСканирования, ВидПродукции);
			
		ИначеЕсли ТипЗнч(Контекст.Ссылка) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
			
			ЗаполнитьПараметрыСканированияВозвратТоваровОтПокупателя(Контекст.Ссылка, ПараметрыСканирования, ВидПродукции);
			
		ИначеЕсли ТипЗнч(Контекст.Ссылка) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда 
		
			ЗаполнитьПараметрыСканированияПоступлениеТоваров(Контекст.Ссылка, ПараметрыСканирования, ВидПродукции);
			
		ИначеЕсли ТипЗнч(Контекст.Ссылка) = Тип("ДокументСсылка.РеализацияТоваров") Тогда
			
			ЗаполнитьПараметрыСканированияРеализацияТоваров(Контекст.Ссылка, ПараметрыСканирования, ВидПродукции);
			
		ИначеЕсли ТипЗнч(Контекст.Ссылка) = Тип("ДокументСсылка.ЧекККМ") Тогда 
			
			ЗаполнитьПараметрыСканированияЧекККМ(Контекст.Ссылка, ПараметрыСканирования, ВидПродукции, Ложь);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПараметрыСканированияЧекККМ(Контекст, ПараметрыСканирования, ВидПродукции, ПроверкаКоличества = Неопределено)
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Контекст, "Объект") Тогда
		ИсточникДанных = Контекст.Объект;
	Иначе
		ИсточникДанных = Контекст;
	КонецЕсли;
	
	#Область ПоддержкаАлкогольнойПродукции
	Если ШтрихкодированиеИСКлиентСервер.ВключитьПоддержкуАлкогольнойПродукции(ПараметрыСканирования, ВидПродукции) Тогда
		
		Если ИсточникДанных.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийЧекККМ.Возврат") Тогда 
			ПараметрыСканирования.ДоступныеСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыАкцизныхМарок.Реализована"));
			ПараметрыСканирования.ОперацияКонтроляАкцизныхМарок = "Возврат";
		Иначе 
			ПараметрыСканирования.ДоступныеСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыАкцизныхМарок.ВНаличии"));
			ПараметрыСканирования.ОперацияКонтроляАкцизныхМарок = "Продажа";
		КонецЕсли;
		ПараметрыСканирования.ДоступныеСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыАкцизныхМарок.ПустаяСсылка"));
		
		ПараметрыСканирования.КонтрольАкцизныхМарок         = Истина;
		ПараметрыСканирования.Операция                      = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЧекККМ");
		ПараметрыСканирования.ОрганизацияЕГАИС              = ИнтеграцияЕГАИСРТВызовСервера.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(ИсточникДанных.Организация, ИсточникДанных.Магазин);
		ПараметрыСканирования.СоздаватьШтрихкодУпаковки     = Истина;
		
		Если ПроверкаКоличества = Истина Тогда
			ПараметрыСканирования.КлючевыеРеквизиты.Добавить("Штрихкод");
			ПараметрыСканирования.КлючевыеРеквизиты.Добавить("Номенклатура");
			ПараметрыСканирования.КлючевыеРеквизиты.Добавить("Характеристика");
		Иначе
			ПараметрыСканирования.КлючевыеРеквизиты.Добавить("Цена");
			ПараметрыСканирования.КлючевыеРеквизиты.Добавить("СтавкаНДС");
			ПараметрыСканирования.КлючевыеРеквизиты.Добавить("Штрихкод");
			ПараметрыСканирования.КлючевыеРеквизиты.Добавить("Продавец");
			ПараметрыСканирования.КлючевыеРеквизиты.Добавить("Номенклатура");
			ПараметрыСканирования.КлючевыеРеквизиты.Добавить("Характеристика");
		КонецЕсли;
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПоддержкаТабачнойПродукции
	
	Если ШтрихкодированиеИСКлиентСервер.ВключитьПоддержкуТабачнойПродукции(ПараметрыСканирования, ВидПродукции) Тогда
	
		ПараметрыСканирования.ДопустимыеСтатусыМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.ВведенВОборот"));
		ПараметрыСканирования.ДопустимыеСтатусыМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.Нанесен"));
		
		КонтрольСтатусов = ИнтеграцияМОТПКлиентСерверПовтИсп.КонтролироватьСтатусыКодовМаркировкиВРознице();
		ПараметрыСканирования.ЗапрашиватьСтатусыМОТП                     = КонтрольСтатусов;
		ПараметрыСканирования.ЗапрашиватьДанныеНеизвестныхШтрихкодовМОТП = КонтрольСтатусов;
		
		ПараметрыСканирования.Организация                                = ИсточникДанных.Организация;
		ПараметрыСканирования.Склад                                      = ИсточникДанных.Магазин;
		
	КонецЕсли;
	
	#КонецОбласти
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыСканированияРеализацияТоваров(Контекст, ПараметрыСканирования, ВидПродукции, ПроверкаКоличества = Неопределено)
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Контекст, "Объект") Тогда
		ИсточникДанных = Контекст.Объект;
	Иначе
		ИсточникДанных = Контекст;
	КонецЕсли;
	
	#Область ПоддержкаАлкогольнойПродукции
	Если ШтрихкодированиеИСКлиентСервер.ВключитьПоддержкуАлкогольнойПродукции(ПараметрыСканирования, ВидПродукции) Тогда
		
		ПараметрыСканирования.ДоступныеСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыАкцизныхМарок.ВНаличии"));
		ПараметрыСканирования.ДоступныеСтатусы.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыАкцизныхМарок.ПустаяСсылка"));
		
		ПараметрыСканирования.КонтрольАкцизныхМарок         = Истина;
		ПараметрыСканирования.Операция                      = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЧекККМ");
		ПараметрыСканирования.ОперацияКонтроляАкцизныхМарок = "Продажа";
		ПараметрыСканирования.ОрганизацияЕГАИС              = ИнтеграцияЕГАИСРТВызовСервера.ОрганизацияЕГАИСПоОрганизацииИТорговомуОбъекту(ИсточникДанных.Организация, ИсточникДанных.Магазин);
		ПараметрыСканирования.СоздаватьШтрихкодУпаковки     = Истина;
		
		Если ПроверкаКоличества = Истина Тогда
			ПараметрыСканирования.КлючевыеРеквизиты.Добавить("Штрихкод");
			ПараметрыСканирования.КлючевыеРеквизиты.Добавить("Помещение");
			ПараметрыСканирования.КлючевыеРеквизиты.Добавить("Номенклатура");
			ПараметрыСканирования.КлючевыеРеквизиты.Добавить("Характеристика");
		Иначе
			ПараметрыСканирования.КлючевыеРеквизиты.Добавить("Цена");
			ПараметрыСканирования.КлючевыеРеквизиты.Добавить("СтавкаНДС");
			ПараметрыСканирования.КлючевыеРеквизиты.Добавить("Штрихкод");
			ПараметрыСканирования.КлючевыеРеквизиты.Добавить("Продавец");
			ПараметрыСканирования.КлючевыеРеквизиты.Добавить("Помещение");
			ПараметрыСканирования.КлючевыеРеквизиты.Добавить("Номенклатура");
			ПараметрыСканирования.КлючевыеРеквизиты.Добавить("Характеристика");
		КонецЕсли;
		
	КонецЕсли;
	
	#КонецОбласти
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыСканированияВозвратТоваровОтПокупателя(Контекст, ПараметрыСканирования, ВидПродукции)
	
	Если ШтрихкодированиеИСКлиентСервер.ВключитьПоддержкуТабачнойПродукции(ПараметрыСканирования, ВидПродукции) Тогда
		
		ПараметрыСканирования.ДопустимыеСтатусыМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.Продан"));
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыСканированияПоступлениеТоваров(Контекст, ПараметрыСканирования, ВидПродукции)
	
	Если ШтрихкодированиеИСКлиентСервер.ВключитьПоддержкуТабачнойПродукции(ПараметрыСканирования, ВидПродукции) Тогда
		
		ПараметрыСканирования.ДопустимыеСтатусыМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.ВведенВОборот"));
		ПараметрыСканирования.ДопустимыеСтатусыМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.Нанесен"));
		ПараметрыСканирования.СопоставлятьНоменклатуру               = Ложь;
		ПараметрыСканирования.ЗаписыватьНеизвестныеШтрихкодыУпаковок = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыСканированияВозвратТоваровПоставщику(Контекст, ПараметрыСканирования, ВидПродукции)
	
	Если ШтрихкодированиеИСКлиентСервер.ВключитьПоддержкуТабачнойПродукции(ПараметрыСканирования, ВидПродукции) Тогда
		
		ПараметрыСканирования.ДопустимыеСтатусыМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.ВведенВОборот"));
		ПараметрыСканирования.ДопустимыеСтатусыМОТП.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыКодовМаркировкиМОТП.Нанесен"));
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

