#Область ПрограмныйИнтерфейс

Процедура ЕстьТабачнаяПродукцияВКоллекции(Коллекция, ЕстьТабачнаяПродукция) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаТовары", Коллекция.Выгрузить(, "Номенклатура"));
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ
	|	ВремТаблТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ИСТИНА КАК ЕстьТабачнаяПродукция
	|ИЗ
	|	ВремТаблТаблицаТовары КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	СправочникНоменклатура.ТабачнаяПродукция
	|";
	
	Результат = Запрос.Выполнить();
	
	ЕстьТабачнаяПродукция = НЕ Результат.Пустой();
	
КонецПроцедуры

Функция ТаблицаТабачнойПродукцииДокумента(Контекст) Экспорт
	
	ТаблицаТабачнойПродукции = ТаблицаТабачнойПродукции();
	
	Если ИнтеграцияМОТПРТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "ПоступлениеТоваров") Тогда
		ВыборкаТабачнойПродукции = ВыборкаТабачнойПродукцииПоступлениеТоваров(Контекст);
	ИначеЕсли ИнтеграцияМОТПРТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "ЧекККМ") Тогда
		ВыборкаТабачнойПродукции = ВыборкаТабачнойПродукцииЧекККМ(Контекст);
	ИначеЕсли ИнтеграцияМОТПРТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "РеализацияТоваров") Тогда
		ВыборкаТабачнойПродукции = ВыборкаТабачнойПродукцииРеализацияТоваров(Контекст);
	ИначеЕсли ИнтеграцияМОТПРТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "ВозвратТоваровОтПокупателя") Тогда
		ВыборкаТабачнойПродукции = ВыборкаТабачнойПродукцииВозвратТоваровОтПокупателя(Контекст);
	ИначеЕсли ИнтеграцияМОТПРТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "ВозвратТоваровПоставщику") Тогда
		ВыборкаТабачнойПродукции = ВыборкаТабачнойПродукцииВозвратТоваровПоставщику(Контекст);
	ИначеЕсли ИнтеграцияМОТПРТКлиентСервер.ЭтоФормаРМК(Контекст) Тогда
		ВыборкаТабачнойПродукции = ВыборкаТабачнойПродукцииРМК(Контекст);
	КонецЕсли;
	
	Пока ВыборкаТабачнойПродукции.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаТабачнойПродукции.Добавить(), ВыборкаТабачнойПродукции);
	КонецЦикла;
	
	Возврат ТаблицаТабачнойПродукции;
	
КонецФункции

// Заполняет в табличной части служебные реквизиты, например: признак использования характеристик номенклатуры.
//
// Параметры:
//  Форма - УправляемаяФорма - Форма.
//  ТабличнаяЧасть - ДанныеФормыКоллекция, ТаблицаЗначений - таблица для заполнения.
//
Процедура ЗаполнитьСлужебныеРеквизитыВКоллекции(Форма, ТабличнаяЧасть) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ТаблицаТабачнойПродукцииДокумента

// Формирует пустую таблицу табачной продукции
// 
// Параметры:
// Возвращаемое значение:
// 	ТаблицаЗначений - таблица определяющая состав табачной продукции документа:
// * GTIN           - ОпределяемыйТип.GTIN                       - штрихкод
// * Номенклатура   - ОпределяемыйТип.Номенклатура               - номенклатура
// * Характеристика - ОпределяемыйТип.ХарактеристикаНоменклатуры - характеристика
// * Серия          - ОпределяемыйТип.СерияНоменклатуры          - серия
// * Количество     - Число                                      - количество
Функция ТаблицаТабачнойПродукции()

	ТаблицаТабачнойПродукции = Новый ТаблицаЗначений();
	ТаблицаТабачнойПродукции.Колонки.Добавить("GTIN",           Метаданные.ОпределяемыеТипы.GTIN.Тип);
	ТаблицаТабачнойПродукции.Колонки.Добавить("Номенклатура",   Метаданные.ОпределяемыеТипы.Номенклатура.Тип);
	ТаблицаТабачнойПродукции.Колонки.Добавить("Характеристика", Метаданные.ОпределяемыеТипы.ХарактеристикаНоменклатуры.Тип);
	ТаблицаТабачнойПродукции.Колонки.Добавить("Серия",          Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Тип);
	ТаблицаТабачнойПродукции.Колонки.Добавить("Количество",     Новый ОписаниеТипов("Число"));
	
	Возврат ТаблицаТабачнойПродукции;
	
КонецФункции

Функция ВыборкаТабачнойПродукцииПоступлениеТоваров(Документ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(Штрихкоды.Штрихкод, """") КАК GTIN,
	|	ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	ПоступлениеТоваровУслугТовары.Характеристика КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	ПоступлениеТоваровУслугТовары.Количество КАК Количество
	|ИЗ
	|	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровУслугТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ПоступлениеТоваровУслугТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО ПоступлениеТоваровУслугТовары.Номенклатура = Штрихкоды.Владелец
	|			И ПоступлениеТоваровУслугТовары.Характеристика = Штрихкоды.Характеристика
	|			И (СправочникНоменклатура.ЕдиницаИзмерения = Штрихкоды.Упаковка)
	|ГДЕ
	|	ПоступлениеТоваровУслугТовары.Ссылка = &ДокументСсылка
	|	И СправочникНоменклатура.ТабачнаяПродукция";
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Выбрать();
	
КонецФункции

Функция ВыборкаТабачнойПродукцииВозвратТоваровПоставщику(Документ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(Штрихкоды.Штрихкод, """") КАК GTIN,
	|	ВозвратТоваровПоставщикуТовары.Номенклатура КАК Номенклатура,
	|	ВозвратТоваровПоставщикуТовары.Характеристика КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	ВозвратТоваровПоставщикуТовары.Количество КАК Количество
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ВозвратТоваровПоставщикуТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО ВозвратТоваровПоставщикуТовары.Номенклатура = Штрихкоды.Владелец
	|			И ВозвратТоваровПоставщикуТовары.Характеристика = Штрихкоды.Характеристика
	|			И (СправочникНоменклатура.ЕдиницаИзмерения = Штрихкоды.Упаковка)
	|ГДЕ
	|	ВозвратТоваровПоставщикуТовары.Ссылка = &ДокументСсылка
	|	И СправочникНоменклатура.ТабачнаяПродукция";
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Выбрать();
	
КонецФункции

Функция ВыборкаТабачнойПродукцииВозвратТоваровОтПокупателя(Документ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(Штрихкоды.Штрихкод, """") КАК GTIN,
	|	ВозвратТоваровОтПокупателяТовары.Номенклатура КАК Номенклатура,
	|	ВозвратТоваровОтПокупателяТовары.Характеристика КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	ВозвратТоваровОтПокупателяТовары.Количество КАК Количество
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ВозвратТоваровОтПокупателяТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО ВозвратТоваровОтПокупателяТовары.Номенклатура = Штрихкоды.Владелец
	|			И ВозвратТоваровОтПокупателяТовары.Характеристика = Штрихкоды.Характеристика
	|			И (СправочникНоменклатура.ЕдиницаИзмерения = Штрихкоды.Упаковка)
	|ГДЕ
	|	ВозвратТоваровОтПокупателяТовары.Ссылка = &ДокументСсылка
	|	И СправочникНоменклатура.ТабачнаяПродукция";
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Выбрать();
	
КонецФункции

Функция ВыборкаТабачнойПродукцииЧекККМ(Форма)
	
	Товары = Форма.Объект.Товары.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	Товары.Количество КАК Количество
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(Штрихкоды.Штрихкод, """") КАК GTIN,
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВТ_Товары.Характеристика КАК Характеристика,
	|	ВТ_Товары.Серия КАК Серия,
	|	СУММА(ВТ_Товары.Количество) КАК Количество
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ВТ_Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО ВТ_Товары.Номенклатура = Штрихкоды.Владелец
	|			И ВТ_Товары.Характеристика = Штрихкоды.Характеристика
	|			И (СправочникНоменклатура.ЕдиницаИзмерения = Штрихкоды.Упаковка)
	|ГДЕ
	|	СправочникНоменклатура.ТабачнаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(Штрихкоды.Штрихкод, """"),
	|	ВТ_Товары.Номенклатура,
	|	ВТ_Товары.Характеристика,
	|	ВТ_Товары.Серия";
	
	Запрос.УстановитьПараметр("Товары", Товары);
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ВыборкаТабачнойПродукцииРМК(Форма)
	
	Товары = Форма.Объект.Товары.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	Товары.Количество КАК Количество
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(Штрихкоды.Штрихкод, """") КАК GTIN,
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВТ_Товары.Характеристика КАК Характеристика,
	|	ВТ_Товары.Серия КАК Серия,
	|	СУММА(ВТ_Товары.Количество) КАК Количество
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ВТ_Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО ВТ_Товары.Номенклатура = Штрихкоды.Владелец
	|			И ВТ_Товары.Характеристика = Штрихкоды.Характеристика
	|			И (СправочникНоменклатура.ЕдиницаИзмерения = Штрихкоды.Упаковка)
	|ГДЕ
	|	СправочникНоменклатура.ТабачнаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(Штрихкоды.Штрихкод, """"),
	|	ВТ_Товары.Номенклатура,
	|	ВТ_Товары.Характеристика,
	|	ВТ_Товары.Серия";
	
	Запрос.УстановитьПараметр("Товары", Товары);
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ВыборкаТабачнойПродукцииРеализацияТоваров(Документ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ЕСТЬNULL(Штрихкоды.Штрихкод, """")) КАК GTIN,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество) КАК Количество
	|ИЗ
	|	Документ.РеализацияТоваров.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваров.Серии КАК Серии
	|		ПО Товары.Ссылка = Серии.Ссылка
	|			И Товары.Номенклатура = Серии.Номенклатура
	|			И Товары.Характеристика = Серии.Характеристика
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО Товары.Номенклатура = Штрихкоды.Владелец
	|			И Товары.Характеристика = Штрихкоды.Характеристика
	|			И (СправочникНоменклатура.ЕдиницаИзмерения = Штрихкоды.Упаковка)
	|ГДЕ
	|	Товары.Ссылка = &ДокументСсылка
	|	И СправочникНоменклатура.ТабачнаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	ЕСТЬNULL(Серии.Серия, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)),
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)";
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Выбрать();
	
КонецФункции

#КонецОбласти

#КонецОбласти
